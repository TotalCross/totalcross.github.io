{"version":3,"sources":["webpack:///./src/docs/md/components/radio.md","webpack:///./src/docs/md/.gitbook/assets/radio-sample.gif"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","alt","src","require","isMDXComponent","module","exports"],"mappings":"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","file":"component---src-docs-md-components-radio-md-57c8a1c3dd41577403da.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/nrisbakk/Projects/newTC/totalcross-github-io/totalcross.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"radio\"\n    }}>{`Radio`}</h1>\n    <h3 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h3>\n    <p>{`A `}<inlineCode parentName=\"p\">{`Radio`}</inlineCode>{` button is a button that can be either checked or unchecked. A user can tap the button to check or uncheck it. It can also be checked from the template using the checked property`}</p>\n    <p>{`Use an element with a RadioGroupController attribute to group a set of radio button. When radio buttons are inside a RadioGroupController, just one radio in the group can be checked at any time. If a radio button is not placed in a group, they will all have the ability to be checked at the same time`}</p>\n    <p><img alt=\"radio-sample\" src={require(\"../.gitbook/assets/radio-sample.gif\")} /></p>\n    {\n      /* {% hint style=\"info\" %} */\n    }\n    <p>{`To see the complete sample, go to `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/TotalCross/RadioSample\"\n      }}>{`github`}</a></p>\n    {\n      /* {% endhint %} */\n    }\n    <h3 {...{\n      \"id\": \"source-code\"\n    }}>{`Source Code`}</h3>\n    {\n      /* {% code title=\"RadioSample.java\" %} */\n    }\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import totalcross.sys.Settings;\nimport totalcross.ui.Bar;\nimport totalcross.ui.Check;\nimport totalcross.ui.Label;\nimport totalcross.ui.MainWindow;\nimport totalcross.ui.Radio;\nimport totalcross.ui.RadioGroupController;\nimport totalcross.ui.ScrollContainer;\nimport totalcross.ui.event.ControlEvent;\nimport totalcross.ui.event.PressListener;\nimport totalcross.ui.font.Font;\nimport totalcross.ui.gfx.Color;\n\npublic class RadioButton extends MainWindow{\n\n    public RadioButton(){\n        super(\"\", BORDER_NONE);\n        setUIStyle(Settings.Material);\n        Settings.uiAdjustmentsBasedOnFontHeight = true;\n        setBackForeColors(Color.WHITE, Color.BLACK);\n\n        Bar h1 = new Bar(\"  RADIO\");\n        h1.canSelectTitle = false;\n        h1.setFont(Font.getFont(\"Lato Bold\", false, h1.getFont().size+3));\n        h1.setBackForeColors(0XF8F8F8,Color.BLACK);\n        add(h1, LEFT,TOP,FILL,PREFERRED-50);\n\n    }\n\n    public void initUI(){\n        ScrollContainer sc = new ScrollContainer(false, true);\n        add(sc,LEFT,AFTER,FILL,FILL);\n\n        RadioGroupController radioGroup = new RadioGroupController();\n\n        Radio pyton = new Radio(\"Pyton\", radioGroup);\n        pyton.setChecked(true);\n        sc.add(pyton, LEFT+100, AFTER+100 ,PREFERRED+100,PREFERRED+25);\n\n        Radio java = new Radio(\"Java\", radioGroup);\n        sc.add(java, LEFT+100, AFTER+50 ,PREFERRED+100,PREFERRED+25);\n\n        Radio ruby = new Radio(\"Ruby\", radioGroup);\n        sc.add(ruby, LEFT+100, AFTER+50 ,PREFERRED+100,PREFERRED+25);\n\n        Radio php = new Radio(\"PHP\", radioGroup);\n        sc.add(php, LEFT+100, AFTER+50 ,PREFERRED+100,PREFERRED+25);\n\n        Label autolock = new Label(\"Auto-Lock\");\n        autolock.setFont(Font.getFont(\"Lato Regular\", false, autolock.getFont().size+3));\n        sc.add(autolock, LEFT+100, AFTER+100, FILL, PREFERRED+25);\n\n        final Radio enable = new Radio(\"Enable: ''Never'' \");\n        enable.setChecked(true);\n        enable.setFont(Font.getFont(\"Lato Regular\", false, Font.NORMAL_SIZE-2));\n        sc.add(enable, LEFT+123, AFTER+100 ,PREFERRED+100,PREFERRED+25);\n\n        RadioGroupController radioGroup2 = new RadioGroupController();\n\n        Radio rd1 = new Radio(\"1 Hour\", radioGroup2);\n        rd1.setChecked(true);\n        sc.add(rd1, LEFT+100, AFTER+100 ,PREFERRED+100,PREFERRED+25);\n\n        Radio rd2 = new Radio(\"2 Hours\", radioGroup2);\n        sc.add(rd2, LEFT+100, AFTER+50 ,PREFERRED+100,PREFERRED+25);\n\n        Radio rd3 = new Radio(\"3 Hours\", radioGroup2);\n        sc.add(rd3, LEFT+100, AFTER+50 ,PREFERRED+100,PREFERRED+25);\n\n        final Radio never = new Radio(\"Never\", radioGroup2);\n        sc.add(never, LEFT+100, AFTER+50 ,PREFERRED+100,PREFERRED+25);\n\n        enable.addPressListener(new PressListener(){\n            public void controlPressed(ControlEvent e){\n                boolean b = enable.isChecked();\n                never.setEnabled(b);\n            }\n        });\n\n        Label properties = new Label(\"Properties\");\n        properties.setFont(Font.getFont(\"Lato Regular\", false, properties.getFont().size+3));\n        sc.add(properties, LEFT+100, AFTER+100, FILL, PREFERRED+25);\n\n        Radio simple = new Radio(\"Simple Radio\");\n        simple.setChecked(true);\n        sc.add(simple, LEFT+100, AFTER+100 ,PREFERRED+100,PREFERRED+25);\n\n        Radio bcolor = new Radio(\"Background Color\");\n        bcolor.setBackColor(Color.YELLOW);\n        bcolor.textColor = Color.BLUE;\n        bcolor.checkColor = uiMaterial ? Color.BLACK : Color.YELLOW;\n        sc.add(bcolor, LEFT+100, AFTER+50 ,PREFERRED+100,PREFERRED+25);\n\n        Radio fcolor = new Radio(\"Foreground Color\");\n        fcolor.setForeColor(Color.darker(Color.GREEN));\n        fcolor.checkColor = Color.GREEN;\n        sc.add(fcolor, LEFT+100, AFTER+50 ,PREFERRED+100,PREFERRED+25);\n    }\n}\n`}</code></pre>\n    {\n      /* {% endcode %} */\n    }\n    <h3 {...{\n      \"id\": \"attributes\"\n    }}>{`Attributes`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`int`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`checkColor`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Set to the color of the check, if you want to make it different of the foreground color`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`boolean`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`leftJustify`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Set to true to left justify this control if the width is above the preferred one`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`int`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`checkColor`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Sets the text color of the check`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"métodos\"\n    }}>{`Métodos`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Nome`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`Constructor`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Radio`}{`(`}{`String Text`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Creates a radio control displaying the given text`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`Constructor`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Radio`}{`(`}{`String text, RadioGroupController radioGroup`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Creates a radio control with the given text attached to the given RadioGroupController`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`RadioGroupController`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`getRadioGroup`}{`(`}{` `}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Returns the RadioGroupController that this radio belongs to, or null if none`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`String`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`getText`}{`(`}{` `}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Gets the text displayed in the radio`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`boolean`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`isChecked`}{`(`}{` `}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Returns the checked state of the control`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`void`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`setChecked`}{`(`}{`boolean checked`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Sets the checked state of the control`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`void`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`setChecked`}{`(`}{`boolean checked, boolean sendPress`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Sets the checked state of the control, and send the press event if desired`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`void`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`setText`}{`(`}{` `}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Sets the text`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"references\"\n    }}><strong parentName=\"h3\">{`References`}</strong></h3>\n    <ul>\n      <li parentName=\"ul\">{`See also our `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.youtube.com/watch?v=7kFNoUWJ1YU\"\n        }}>{`quick tutorial video`}</a>{` showing how to use Radios.`}</li>\n      <li parentName=\"ul\">{`See the `}<a parentName=\"li\" {...{\n          \"href\": \"https://rs.totalcross.com/doc/totalcross/ui/Radio.html\"\n        }}>{`JavaDocs`}</a>{` for more information.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = __webpack_public_path__ + \"static/radio-sample-0230a400b3a0e9230e1c6bb72a98a0bc.gif\";"],"sourceRoot":""}