{"version":3,"sources":["webpack:///./src/docs/md/components/scroll-container.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAMaA,G,UAAe,S,4NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,oBADR,oBAGA,iBAAQ,CACN,GAAM,YADR,YAGA,kHACA,iBAAQ,CACN,GAAM,cADR,cAGA,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,kBADZ,qkFA4DL,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIA,WAAW,MAAf,iCAAsD,6BAAGA,WAAW,MAAS,CACzE,KAAQ,qEAD0C,YAAtD,MAIF,qBAAG,6BAAGA,WAAW,KAAQ,CACrB,KAAQ,iHACP,kBAAIA,WAAW,c,0NAMxBJ,EAAWK,gBAAiB","file":"component---src-docs-md-components-scroll-container-md-06bbed07c9247cf8c1fb.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/nrisbakk/Projects/newTC/totalcross-github-io/totalcross.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"scroll-container\"\n    }}>{`Scroll Container`}</h1>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`The Container scroll is a container that has side scroll, horizontal scroll or no scroll.`}</p>\n    <h3 {...{\n      \"id\": \"how-to-use\"\n    }}>{`How to use`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class ScrollContainerSample extends MainWindow {\n\n    public ScrollContainerSample(){\n        setUIStyle(Settings.Material);\n    }\n\n    @Override\n        public void initUI() {\n            super.initUI();\n            ScrollContainer sc = new ScrollContainer(false, true);\n            int gap = UnitsConverter.toPixels(DP + 16);\n            sc.setInsets(gap, gap, gap, gap);\n            add(sc, LEFT, TOP, FILL, FILL);\n\n            Button b;\n            ScrollContainer sc1, sc2, sc3;\n            // a ScrollContainer with both ScrollBars\n            sc.add(new Label(\"Vertical and horizontal:\"), LEFT, TOP);\n            sc.add(sc1 = new ScrollContainer());\n            sc1.setBorderStyle(BORDER_ROUNDED);\n            sc1.setInsets(3, 3, 3, 3);\n            sc1.setRect(LEFT, AFTER, FILL, SCREENSIZE + 30);\n            int xx = new Label(\"Name99\").getPreferredWidth() + 2; // edit's alignment\n            for (int i = 0; i < 50; i++) {\n                sc1.add(new Label(\"Name\" + i), LEFT, AFTER + 10);\n                sc1.add(new Edit(), xx, SAME, SCREENSIZE + 90, PREFERRED);\n                if (i % 3 == 0) {\n                    sc1.add(new Button(\"Go\"), AFTER + 2, SAME, PREFERRED, SAME);\n                }\n            }\n\n            // a ScrollContainer with vertical ScrollBar disabled\n            sc.add(new Label(\"Horizontal-only:\"), LEFT, AFTER + gap);\n            sc.add(sc2 = new ScrollContainer(true, false));\n            sc2.setBorderStyle(BORDER_ROUNDED);\n            sc2.setInsets(3, 3, 3, 3);\n            int lines = Settings.screenHeight > 320 ? 4 : 3;\n            sc2.setRect(LEFT, AFTER, FILL, lines * (fmH + Edit.prefH) + fmH / 2);\n            for (int i = 0; i < lines; i++) {\n                sc2.add(new Label(\"Name\" + i), LEFT, AFTER);\n                sc2.add(new Edit(\"\"), xx, SAME, PARENTSIZE + 200, PREFERRED); // fit\n                sc2.add(new Button(\"Go\"), AFTER, SAME, PREFERRED, SAME);\n            }\n\n            // a ScrollContainer with horizontal ScrollBar disabled\n            sc.add(new Label(\"Vertical-only:\"), LEFT, AFTER + gap);\n            sc.add(sc3 = new ScrollContainer(false, true));\n            sc3.setBorderStyle(BORDER_ROUNDED);\n            sc3.setInsets(3, 3, 3, 3);\n            sc3.setRect(LEFT, AFTER, FILL, SCREENSIZE + 30);\n            for (int i = 0; i < 50; i++) {\n                sc3.add(new Label(\"Name\" + i), LEFT, AFTER);\n                sc3.add(b = new Button(\"Go\"), RIGHT, SAME, PREFERRED, SAME);\n                sc3.add(new Edit(\"\"), xx, SAME, FIT - 2, PREFERRED, b); // fit\n            }\n        }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"references\"\n    }}>{`References`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`To know more details read its `}<a parentName=\"li\" {...{\n          \"href\": \"https://rs.totalcross.com/doc/totalcross/ui/ScrollContainer.html\"\n        }}>{`JavaDocs`}</a>{`.`}</li>\n    </ul>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://app.gitbook.com/@totalcross/s/playbook/~/drafts/-LfzE7W6V32fHcj-QL-S/primary/apis/visao-geral-da-api\"\n      }}><br parentName=\"a\"></br>\n      </a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}