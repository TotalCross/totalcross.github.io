{"version":3,"sources":["webpack:///./src/docs/md/apis/notifications.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mfAMO,IAAMA,EAAe,Q,mNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,4HACA,8LAA6K,sBAAQC,WAAW,KAAnB,sBAA7K,KAIA,+MAIA,iBAAQ,CACN,GAAM,8BADR,8BAGA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gFAAoG,0BAAYA,WAAW,KAAvB,wBAApG,aAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,sCAA0D,0BAAYA,WAAW,KAAvB,gCAA1D,wCAA2K,0BAAYA,WAAW,KAAvB,gBAA3K,oDAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,6CAAiE,0BAAYA,WAAW,KAAvB,gBAAjE,iBAA2I,0BAAYA,WAAW,KAAvB,kDAG/I,iBAAQ,CACN,GAAM,2CADR,2CAGA,gFACA,sBACE,kBAAIA,WAAW,MAAf,uBAA4C,0BAAYA,WAAW,MAAvB,aAC5C,kBAAIA,WAAW,MAAf,2BAAgD,0BAAYA,WAAW,MAAvB,aAElD,iBAAQ,CACN,GAAM,oBADR,oBAMA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,2zCA4CL,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIA,WAAW,MAAf,0CAA+D,mBAAGA,WAAW,MAAS,CAClF,KAAQ,gDADmD,WAG/D,kBAAIA,WAAW,MAAf,0BAA+C,mBAAGA,WAAW,MAAS,CAClE,KAAQ,gDADmC,wBAA/C,2C,iNAQNJ,EAAWK,gBAAiB","file":"component---src-docs-md-apis-notifications-md-c47961ab2760c441326f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/nrisbakk/Projects/newTC/totalcross-github-io/totalcross.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"notifications\"\n    }}>{`Notifications`}</h1>\n    <p>{`Notification is a message that will be displayed to the user outside of the applicationâ€™s usual UI.`}</p>\n    <p>{`When you execute a command telling the system to issue a notification, it will appear as an icon in the notification area, and to see the details, the user opens the `}<strong parentName=\"p\">{`notification space`}</strong>{`.`}</p>\n    {\n      /* {% hint style=\"info\" %} */\n    }\n    <p>{`The notification space is this area where the details are shown `}{`(`}{`also called the notification drawer`}{`)`}{` are areas controlled by the system and the user can see at any time.`}</p>\n    {\n      /* {% endhint %} */\n    }\n    <h3 {...{\n      \"id\": \"creation-of-a-notification\"\n    }}>{`Creation of a Notification`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`To specify actions and information that will be displayed to the user, use a `}<inlineCode parentName=\"p\">{`Notification.Builder`}</inlineCode>{` object.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`To create a push notification, use `}<inlineCode parentName=\"p\">{`Notification.Builder.build()`}</inlineCode>{`, which is an example of the type of `}<inlineCode parentName=\"p\">{`notification`}</inlineCode>{` provided as previously defined specifications.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`To notify a notification, simply pass the `}<inlineCode parentName=\"p\">{`Notification`}</inlineCode>{` object using `}<inlineCode parentName=\"p\">{`NotificationManager.getInstance().Notify();`}</inlineCode></p>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"content-needed-to-create-a-notification\"\n    }}>{`Content Needed to Create a Notification`}</h3>\n    <p>{`The object on smartphones should contain the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A title, defined by `}<inlineCode parentName=\"li\">{`title();`}</inlineCode></li>\n      <li parentName=\"ul\">{`Detail text, defined by `}<inlineCode parentName=\"li\">{`text();`}</inlineCode></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"a-simple-example\"\n    }}>{`A Simple Example`}</h3>\n    {\n      /* {% code title=\"HelloTCNotification\" %} */\n    }\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import totalcross.notification.Notification;\nimport totalcross.notification.NotificationManager;\nimport totalcross.sys.Settings;\nimport totalcross.ui.Button;\nimport totalcross.ui.Edit;\nimport totalcross.ui.MainWindow;\n\npublic class HelloWorld extends MainWindow {\n    private Button btnHello;\n\n    public HelloWorld(){\n        super(\"\", NO_BORDER);\n        Settings.uiAdjustmentsBasedOnFontHeight = true;\n        setUIStyle(Settings.Material);\n    }\n\n    public void initUI() {\n        Edit title = new Edit(\"Title\");\n        title.caption = \"Title\";\n        add(title, LEFT+150, TOP+100, FILL-150, PREFERRED);\n\n        Edit text = new Edit(\"Text\");\n        text.caption = \"Text\";\n        add(text, LEFT+150, AFTER+50, FILL-150, PREFERRED);\n\n        btnHello = new Button(\"Notify!\");\n        btnHello.addPressListener(\n                (e) -> {\n                    Notification.Builder builder = new Notification.Builder();\n                    Notification notification = builder\n                            .title(title.getText())\n                            .text(text.getText())\n                            .build();\n                    NotificationManager.getInstance().notify(notification);\n                });\n        add(btnHello, CENTER, AFTER+150, PARENTSIZE+38, PARENTSIZE+8);\n      }\n}\n`}</code></pre>\n    {\n      /* {% endcode %} */\n    }\n    <h3 {...{\n      \"id\": \"references\"\n    }}>{`References`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`to see the complete example, go to our `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/TotalCross/Notifications\"\n        }}>{`GitHub`}</a></li>\n      <li parentName=\"ul\">{`You can also view this `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.youtube.com/watch?v=Y1_0c9H8G4E\"\n        }}>{`quick tutorial video`}</a>{` on how to create notifications.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}