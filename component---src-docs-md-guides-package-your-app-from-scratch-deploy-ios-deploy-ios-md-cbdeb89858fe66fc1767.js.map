{"version":3,"sources":["webpack:///./src/docs/md/.gitbook/assets/keychain.png","webpack:///./src/docs/md/.gitbook/assets/image110.png","webpack:///./src/docs/md/guides/package-your-app-from-scratch/deploy-ios/deploy-ios.md","webpack:///./src/docs/md/.gitbook/assets/image125.png","webpack:///./src/docs/md/.gitbook/assets/image54.png","webpack:///./src/docs/md/.gitbook/assets/image50.png","webpack:///./src/docs/md/.gitbook/assets/screenshot-2017-11-29_ios_provisioning_profiles__distribution__-_apple_developer.png","webpack:///./src/docs/md/.gitbook/assets/image32.png"],"names":["module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","alt","src","require","style","isMDXComponent"],"mappings":"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","file":"component---src-docs-md-guides-package-your-app-from-scratch-deploy-ios-deploy-ios-md-cbdeb89858fe66fc1767.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/keychain-59f607f043f13789033029f06a30ae2d.png\";","module.exports = __webpack_public_path__ + \"static/image110-685a243a49f3360d256a8dee4432084d.png\";","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/nrisbakk/Projects/newTC/totalcross-github-io/totalcross.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"deploy-ios\"\n    }}>{`Deploy iOS`}</h1>\n    <h3 {...{\n      \"id\": \"generating-key-store-and-certificate\"\n    }}>{`Generating key store and certificate`}</h3>\n    <h4 {...{\n      \"id\": \"you-need-to-have-openssl-installed-in-your-computer\"\n    }}>{`You need to have openssl installed in your computer.`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`If you use Mac OS, this should be installed as default`}</li>\n      <li parentName=\"ul\">{`If you use Linux, we recomend to install your distro binaries`}</li>\n      <li parentName=\"ul\">{`If you use Windows, you should install OpenSSL for Windows`}</li>\n      <li parentName=\"ul\">{`If you use Windows, you may install a git-bash `}{`(`}{`like the one embedded within SourceTree`}{`)`}</li>\n    </ul>\n    <p>{`First, you need to create your RSA 2048 key-pair with the following command:`}</p>\n    <p><inlineCode parentName=\"p\">{`openssl req -nodes -newkey rsa:2048 -keyout request.key -out request.csr`}</inlineCode></p>\n    <p>{`You will be prompted with some questions, which you need to supply the answers. You may want to configure the `}<inlineCode parentName=\"p\">{`openssl req`}</inlineCode>{` with predefined data. To do so, create a `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` file like the template below:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`[ req ]\ndistinguished_name = req_distinguished_name\nprompt = no\n[ req_distinguished_name ]\nemailAddress = john@webmail.com\ncommonName = John Doe\ncountryName = BR\nstateOrProvinceName = Rio de Janeiro\nlocalityName = Rio de Janeiro\norganizationName = Johnâ€™s Company\n`}</code></pre>\n    <p>{`Then pass it to the `}<inlineCode parentName=\"p\">{`openssl req`}</inlineCode>{` command like the follow:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`openssl req -config config -nodes -newkey rsa:2048 -keyout request.key -out request.csr\n`}</code></pre>\n    <p>{`{% hint style=\"info\" %}\nOptionally, you can call openssl without passing a config file using the interactive mode.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`openssl req -nodes -newkey rsa:2048 -keyout request.key -out request.csr\n`}</code></pre>\n    {\n      /* {% endhint %} */\n    }\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`request.key`}</inlineCode>{` is the private key`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`request.csr`}</inlineCode>{` is the public key`}</li>\n    </ul>\n    <p>{`Never share your private key `}<inlineCode parentName=\"p\">{`request.key`}</inlineCode>{` in a non-secure media. If you must transfer it from your trusted computer to another, do it safely. Some suggestions are:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`use `}<inlineCode parentName=\"li\">{`scp`}</inlineCode>{` to copy this file over `}<inlineCode parentName=\"li\">{`ssh`}</inlineCode>{` encryption to your other trusted computer;`}</li>\n      <li parentName=\"ol\">{`zip it with a password, forward the file with a pen-drive or in a email, and tell the destinatary the password through another media;`}</li>\n      <li parentName=\"ol\">{`upload it with `}<inlineCode parentName=\"li\">{`https`}</inlineCode>{` to a trusted server of your own.`}</li>\n    </ol>\n    <p>{`If somehow you have shared your private key `}<inlineCode parentName=\"p\">{`request.key`}</inlineCode>{` in a unsecure way, please, `}<strong parentName=\"p\">{`BURN IT WITH FIRE BEFORE IT LAYS EGGS OF SECURITY BREACHNESS`}</strong>{`. You are warned. You should take your security seriously. Pretty pretty seriously.`}</p>\n    <p>{`Your public key is meant to be shared with the wind. There is no worry about this as long as`}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/P_versus_NP_problem\"\n      }}>{`Pâ‰ NPP \\\\neq NPPÌ¸â€‹=NP`}</a>{`.`}</p>\n    <p>{`Now go to the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.apple.com/account/ios/certificate/\"\n      }}>{`Apple Developer Page`}</a>{` and request a new certificate. Choose accordingly to your needs.`}</p>\n    <h3 {...{\n      \"id\": \"creating-your-certificate\"\n    }}>{`Creating your certificate`}</h3>\n    <p>{`You should now see this screen:`}</p>\n    <p><img alt=\"image110\" src={require(\"../../../.gitbook/assets/image110.png\")} /></p>\n    <p>{`As I need a production certificate for an Enterprise account, I choosed the `}<inlineCode parentName=\"p\">{`In-House and Ad-Hoc`}</inlineCode>{`.`}</p>\n    <p>{`And then finally to the screen where I now shall upload the generated `}<inlineCode parentName=\"p\">{`.csr`}</inlineCode>{`file `}{`(`}{`it is the public key, so therefore no worry`}{`)`}{`:`}</p>\n    <p><img alt=\"image54\" src={require(\"../../../.gitbook/assets/image54.png\")} /></p>\n    <p>{`Now you can download the certificate at any time. This file is commonly named as `}<inlineCode parentName=\"p\">{`ios_distribution.cer`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"ios-app-id\"\n    }}>{`iOS App ID`}</h3>\n    <p>{`To generate the provisioning profile, one must have before-hand to register new Apple ID in `}<inlineCode parentName=\"p\">{`Register a new Identifier`}</inlineCode>{`:`}</p>\n    <p><img alt=\"image50\" src={require(\"../../../.gitbook/assets/image50.png\")} /></p>\n    <p><img alt=\"image125\" src={require(\"../../../.gitbook/assets/image125.png\")} /></p>\n    <p>{`In the sample above, I have choosen to go with the `}<inlineCode parentName=\"p\">{`Explicit App ID`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`com.totalcross.tcguide`}</inlineCode>{`.`}</p>\n    {\n      /* {% hint style=\"warning\" %} */\n    }\n    <p>{`You cannot enable `}<strong parentName=\"p\">{`Push Notification`}</strong>{` service using `}<strong parentName=\"p\">{`Wildcard Apple ID`}</strong>{`.`}</p>\n    {\n      /* {% endhint %} */\n    }\n    {\n      /* {% hint style=\"danger\" %} */\n    }\n    <p>{`You shall not use `}<strong parentName=\"p\">{`Wildcard Apple ID`}</strong>{` if you want to distribute your application with `}<strong parentName=\"p\">{`Enterprise Distribution`}</strong>{`. This may leads to trouble when your client tries to upgrade the app you have provided.\n{% endhint %}`}</p>\n    <h3 {...{\n      \"id\": \"provisioning-profile\"\n    }}>{`Provisioning profile`}</h3>\n    <p>{`Now we must generate the provisioning profile:`}</p>\n    <p><img alt=\"screenshot-2017-11-29\" src={require(\"../../../.gitbook/assets/screenshot-2017-11-29_ios_provisioning_profiles__distribution__-_apple_developer.png\")} /></p>\n    <p>{`As I want an enterprise distribution, I must choose the `}<inlineCode parentName=\"p\">{`In-House`}</inlineCode>{` provisioning profile:`}</p>\n    {\n      /* {% hint style=\"info\" %} */\n    }\n    <p>{`If you want to test your app in specific iOS devices, you must create a `}<inlineCode parentName=\"p\">{`Development`}</inlineCode>{` provisioning file. To do so follow the tutorial: `}<a parentName=\"p\" {...{\n        \"href\": \"using-development-certificate-to-test-your-apps.md\"\n      }}>{`Using Development certificate to test your application.`}</a></p>\n    {\n      /* {% endhint %} */\n    }\n    <p><img alt=\"image32\" src={require(\"../../../.gitbook/assets/image32.png\")} /></p>\n    <p>{`Now the system will ask you about the App ID, then the certificate, and finally you are prompted with a Profile Name. It can be arbitrary:`}</p>\n    <p>{`You end this step downloading a `}<inlineCode parentName=\"p\">{`.mobileprovision`}</inlineCode>{` file.`}</p>\n    <h3 {...{\n      \"id\": \"recalling\"\n    }}>{`Recalling`}</h3>\n    <p>{`You have created in your own machine this files:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`config (optional)`}</inlineCode>{`, so that it will be easy to create your public/private keys`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`request.key`}</inlineCode>{`, your private key`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`request.csr`}</inlineCode>{`, your public key`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ios_distribution.cer`}</inlineCode>{`, your Apple certificate`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.mobileprovision`}</inlineCode>{`, one of the most important files so that you can indeed embed this in your app to distribute`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"finishing-the-basis-to-compile-to-ios-with-totalcross\"\n    }}>{`Finishing the basis to compile to iOS with TotalCross`}</h3>\n    <p>{`So far, so good. Now we need to create a Publc-Key Cryptography Standard 12 `}<inlineCode parentName=\"p\">{`.p12`}</inlineCode>{` file. To create it, we need the intermediary container for public key `}<inlineCode parentName=\"p\">{`.pem`}</inlineCode>{` file.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"https://serverfault.com/q/9708\"\n        }}>{`This question`}</a>{` in ServerFault gives you more details about the files format. Also it was where I got that information above.`}</p>\n    </blockquote>\n    <p>{`To create the `}<inlineCode parentName=\"p\">{`.pem`}</inlineCode>{` file, just give this command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`openssl x509 -in ios_distribution.cer -inform DER -out ios_distribution.pem -outform PEM\n`}</code></pre>\n    <p>{`Where:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`x509`}</inlineCode>{` is the cryptography standard`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`-in ios_distribution.cer`}</inlineCode>{` indicates that the input certificate file is named `}<inlineCode parentName=\"li\">{`ios_distribution.cer`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`-inform DER`}</inlineCode>{` indicates that the format of the input file is `}<inlineCode parentName=\"li\">{`DER`}</inlineCode>{`, so that OpenSSL can do its conversion AKA `}<em parentName=\"li\">{`translate from `}<inlineCode parentName=\"em\">{`DER`}</inlineCode></em></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`-out ios_distribution.pem`}</inlineCode>{` indicates that the output file name is named `}<inlineCode parentName=\"li\">{`ios_distribution.pem`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`-outform PEM`}</inlineCode>{` indicates that the output format is `}<inlineCode parentName=\"li\">{`PEM`}</inlineCode>{` AKA `}<em parentName=\"li\">{`translate to `}<inlineCode parentName=\"em\">{`PEM`}</inlineCode></em></li>\n    </ul>\n    <p>{`With the `}<inlineCode parentName=\"p\">{`.pem`}</inlineCode>{` file created, we just need to create the `}<inlineCode parentName=\"p\">{`.p12`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`openssl pkcs12 -export -inkey request.key -in ios_distribution.pem -out ios_distribution.p12\n`}</code></pre>\n    <p>{`Where:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`pkcs12`}</inlineCode>{` is the cryptography standard`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`-export`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`-inkey request.key`}</inlineCode>{` which file is the private key? It is `}<inlineCode parentName=\"li\">{`request.key`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`-in ios_distribution.pem`}</inlineCode>{` which file is the container for your certificate? `}<inlineCode parentName=\"li\">{`ios_distribution.pem`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`-out ios_distribution.p12`}</inlineCode>{` which file I want to save as my PKCS 12 file? `}<inlineCode parentName=\"li\">{`ios_distribution.p12`}</inlineCode></li>\n    </ul>\n    {\n      /* {% hint style=\"warning\" %} */\n    }\n    <p><strong parentName=\"p\">{`For TotalCross SDK 4.4.1 or earlier and 5.1.3 or earlier:`}</strong></p>\n    <p>{`You must create two `}<strong parentName=\"p\">{`.p12 files`}</strong>{`. The first one `}<strong parentName=\"p\">{`with password`}</strong>{` to be added in your keychain `}{`(`}{`you can name it ios_distribution_with_password.p12`}{`)`}{`. The second one `}<strong parentName=\"p\">{`without password`}</strong>{` to be used in your `}<strong parentName=\"p\">{`tc.Deploy`}</strong>{` through the `}<inlineCode parentName=\"p\">{`/m`}</inlineCode>{` parameter.`}</p>\n    <p><strong parentName=\"p\">{`For later versions:`}</strong></p>\n    <p>{`You can create just one `}<strong parentName=\"p\">{`.p12 file with password`}</strong>{` to be added in your keychain. For later versions, we no longer require parameter /m `}{`(`}{`Deprecated`}{`)`}{` to build your TotalCross ipa.`}</p>\n    {\n      /* {% endhint %} */\n    }\n    <h3 {...{\n      \"id\": \"adding-your-certificate-to-your-keychain-in-your-macos\"\n    }}>{`Adding your certificate to your Keychain in your macOS`}</h3>\n    {\n      /* {% hint style=\"warning\" %} */\n    }\n    <p>{`Requires a `}<strong parentName=\"p\">{`p12 file with password`}</strong>{`.`}</p>\n    {\n      /* {% endhint %} */\n    }\n    <p>{`Click twice in p12 file. A box with password field will be shown, type your p12 file password in the `}<strong parentName=\"p\">{`field passwor`}</strong>{`d and your certificate will be added to your macOS Keychain.`}</p>\n    <p><img alt=\"keychain\" src={require(\"../../../.gitbook/assets/keychain.png\")} /></p>\n    <h3 {...{\n      \"id\": \"ios-deployments\"\n    }}>{`iOS deployments`}</h3>\n    <h4 {...{\n      \"id\": \"generating-your-ipa-file-by-using-totalcross-deployer\"\n    }}>{`GENERATING YOUR IPA FILE BY USING TOTALCROSS DEPLOYER`}</h4>\n    {\n      /* {% hint style=\"warning\" %} */\n    }\n    <p><strong parentName=\"p\">{`For TotalCross SDK 4.4.1 or earlier and 5.1.3 or earlier:`}</strong></p>\n    <p>{`Before executing the following steps, copy your certificate file, `}<inlineCode parentName=\"p\">{`ios_certificate.p12`}</inlineCode>{`, and your mobileprovision file, `}<inlineCode parentName=\"p\">{`profile.mobileprovision,`}</inlineCode>{` to a separate folder inside workspace directory.`}</p>\n    {\n      /* {% endhint %} */\n    }\n    <h4 {...{\n      \"id\": \"maven\"\n    }}>{`Maven`}</h4>\n    <p>{`Execute command `}<inlineCode parentName=\"p\">{`mvn package`}</inlineCode>{` using the following pom.xml as example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-markup\"\n      }}>{`<properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <totalcross.activation_key>place holder</totalcross.activation_key>\n</properties>\n\n<build>\n        <finalName>\\${project.artifactId}</finalName>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.1</version>\n                <configuration>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>net.orfjackal.retrolambda</groupId>\n                <artifactId>retrolambda-maven-plugin</artifactId>\n                <version>2.5.6</version>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>process-main</goal>\n                            <goal>process-test</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>exec-maven-plugin</artifactId>\n                <version>1.1.1</version>\n                <executions>\n                    <execution>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>java</goal>\n                        </goals>\n                        <configuration>\n                            <mainClass>tc.Deploy</mainClass>\n                            <arguments>\n                                <argument>\\${project.build.directory}/\\${project.build.finalName}.\\${project.packaging}</argument>\n                                <argument>-ios</argument>\n                                <argument>/p</argument>\n                                <argument>/r</argument>\n                                <argument>\\${totalcross.activation_key}</argument>\n                                <!--\n                                    Parameter /m is just required for versions 4.4.1 or ealier\n                                    and 5.1.3 or ealier.\n                                 -->\n                                <argument>/m</argument>\n                                <argument>{put ios certificate path here}</argument>\n                            </arguments>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"old-style-command-line\"\n    }}>{`Old style command line`}</h4>\n    <p>{`If you rather the old style way of deploying:`}</p>\n    <p><inlineCode parentName=\"p\">{`java -cp \"%TOTALCROSS3_HOME%\"/dist/totalcross-sdk.jar tc.Deploy HelloTC.jar -iphone /m ./ios_certs /p /r YOUR_KEY_HERE`}</inlineCode></p>\n    <p><inlineCode parentName=\"p\">{`\"%TOTALCROSS3_HOME%\" = is the folder where the TC SDK`}</inlineCode></p>\n    <p><inlineCode parentName=\"p\">{`HelloTC.jar = is the jar of project`}</inlineCode></p>\n    <p><inlineCode parentName=\"p\">{`ios_certs = path to certificate`}</inlineCode></p>\n    <h4 {...{\n      \"id\": \"resigning-your-application\"\n    }}>{`RESIGNING YOUR APPLICATION`}</h4>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Requirements:`}</p>\n      <ol parentName=\"blockquote\">\n        <li parentName=\"ol\">{`having XCode updated to version `}<inlineCode parentName=\"li\">{`>=10.0`}</inlineCode></li>\n        <li parentName=\"ol\">{`having `}<strong parentName=\"li\">{`Imagemagick`}</strong>{` installed`}</li>\n        <li parentName=\"ol\">{`having Totalcross SDK `}<inlineCode parentName=\"li\">{`>=4.2.1`}</inlineCode>{` installed`}</li>\n        <li parentName=\"ol\">{`having your certificate shown in the list of valid identities returned by executing `}<inlineCode parentName=\"li\">{`security find-identity`}</inlineCode>{`:`}</li>\n      </ol>\n      <pre parentName=\"blockquote\"><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`$ security find-identity\n\nPolicy: X.509 Basic\n  Matching identities\n  1) XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX \"iPhone Distribution: Your Company\"\n  2) XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX \"iPhone Distribution: Your Company 2\"\n  3) XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX \"iPhone Developer: Your Name\"\n  4) XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX \"iPhone Distribution: Your Company 3\"\n\n  Valid identities only\n  1) XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX \"iPhone Developer: Your Name\"\n  2) XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX \"iPhone Distribution: Your Company 3\"\n     2 valid identities found\n`}</code></pre>\n    </blockquote>\n    <h4 {...{\n      \"id\": \"preparing-environment\"\n    }}>{`Preparing environment`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`Install `}<strong parentName=\"li\">{`Imagemagick`}</strong>{` by entering command `}{`(`}{`if you don't have brew installed visit `}<a parentName=\"li\" {...{\n          \"href\": \"https://brew.sh/\"\n        }}>{`this page`}</a>{` and install it. Its pretty easy!`}{`)`}{`:`}</li>\n    </ol>\n    <blockquote>\n      <pre parentName=\"blockquote\"><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`brew install imagemagick\n`}</code></pre>\n    </blockquote>\n    <ol>\n      <li parentName=\"ol\">{`Switch Command Line Developer Tools to CLT XCode directory by executing`}</li>\n    </ol>\n    <blockquote>\n      <pre parentName=\"blockquote\"><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer\n`}</code></pre>\n    </blockquote>\n    <ol>\n      <li parentName=\"ol\">{`Give execution permission to the sh scripts inside `}<inlineCode parentName=\"li\">{`path/to/your/totalcross_sdk_home/etc/tools/iOSCodesign`}</inlineCode></li>\n    </ol>\n    <blockquote>\n      <pre parentName=\"blockquote\"><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`sudo chmod +x tccodesign.sh xcassetsGenerator.sh\n`}</code></pre>\n    </blockquote>\n    <h4 {...{\n      \"id\": \"resigning-your-appipa\"\n    }}>{`Resigning your app.ipa`}</h4>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Artifacts needed for this step:`}</p>\n      <ol parentName=\"blockquote\">\n        <li parentName=\"ol\">{`the TotalCross generated `}<inlineCode parentName=\"li\">{`.ipa`}</inlineCode></li>\n        <li parentName=\"ol\">{`your provisioning profile`}</li>\n        <li parentName=\"ol\">{`your Certificate name `}{`(`}<inlineCode parentName=\"li\">{`iPhone Distribution: Your Company`}</inlineCode>{`)`}</li>\n        <li parentName=\"ol\">{`Method, which can be: app-store, ad-hoc, enterprise or development. `}{`(`}{`It must match your .mobileprovision type`}{`)`}</li>\n        <li parentName=\"ol\">{`Your Application Icon`}</li>\n        <li parentName=\"ol\">{`a Mac OS X computer`}</li>\n      </ol>\n    </blockquote>\n    <p>{`Having all of those parameters, you will be able to run the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`./tccodesign --ipa path/to/to-be-signed.ipa --icon path/to/icon.png --provision-file path/to/provision-file.mobileprovision --certificate 'iPhone Distribution: XXXX Company YYYYY' -m [ad-hoc | app-store | enterprise | development]\n`}</code></pre>\n    <table>\n  <thead>\n    <tr>\n      <th style={{\n            \"textAlign\": \"left\"\n          }}>Parameters</th>\n      <th style={{\n            \"textAlign\": \"left\"\n          }}>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style={{\n            \"textAlign\": \"left\"\n          }}>--ipa, -i</td>\n      <td style={{\n            \"textAlign\": \"left\"\n          }}>Represents the path to your ipa file generated by the tc.Deployer that\n        you want to be resigned.</td>\n    </tr>\n    <tr>\n      <td style={{\n            \"textAlign\": \"left\"\n          }}>--icon</td>\n      <td style={{\n            \"textAlign\": \"left\"\n          }}>Represents the path to your application icon. If you ommit it, the totalcross\n        icon will be placed.</td>\n    </tr>\n    <tr>\n      <td style={{\n            \"textAlign\": \"left\"\n          }}>--provision-file, -prov</td>\n      <td style={{\n            \"textAlign\": \"left\"\n          }}>Represents the path your mobileprovision file.</td>\n    </tr>\n    <tr>\n      <td style={{\n            \"textAlign\": \"left\"\n          }}>--certificate, -c</td>\n      <td style={{\n            \"textAlign\": \"left\"\n          }}>Represents the name of your certificate as shown in your mac keychain\n        (you may copy this name from the keychain or from the command <code>security find-identity</code> in\n        the list of valid certificates.</td>\n    </tr>\n    <tr>\n      <td style={{\n            \"textAlign\": \"left\"\n          }}>--method, -m</td>\n      <td style={{\n            \"textAlign\": \"left\"\n          }}>\n        <p>Represents the method which you want to distribute your app. They are:</p>\n        <ul>\n          <li>ad-hoc;</li>\n          <li>app-store;</li>\n          <li>enterprise;</li>\n          <li>development.</li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td style={{\n            \"textAlign\": \"left\"\n          }}>--output, -o (optional)</td>\n      <td style={{\n            \"textAlign\": \"left\"\n          }}>Represents the path in which your resigned ipa file will be placed. If\n        you ommit this parameters, your resgined ipa file will be generated inside<code>[tccodesign.sh directory]/build</code>\n      </td>\n    </tr>\n  </tbody>\n    </table>\n    {\n      /* {% hint style=\"success\" %} */\n    }\n    <p>{`Now you're ready to properly install or upload to the apple store your application.`}</p>\n    {\n      /* {% endhint %} */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = __webpack_public_path__ + \"static/image125-b37b0e0eb361f84fdbcb4c7c36d91262.png\";","module.exports = __webpack_public_path__ + \"static/image54-6c503a21f0ca5de639ce5785e3df05d4.png\";","module.exports = __webpack_public_path__ + \"static/image50-cc3466d7861f995e13369df9224face7.png\";","module.exports = __webpack_public_path__ + \"static/screenshot-2017-11-29_ios_provisioning_profiles__distribution__-_apple_developer-08cce3da2e3ff6322a81f33c9a1766a1.png\";","module.exports = __webpack_public_path__ + \"static/image32-353c3bbdaf6333063c3a0389698cc270.png\";"],"sourceRoot":""}