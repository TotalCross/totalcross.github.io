{"version":3,"sources":["webpack:///./src/docs/md/.gitbook/assets/materialicons-sample.gif","webpack:///./src/docs/md/components/material-icons.md"],"names":["module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","alt","src","require","isMDXComponent"],"mappings":"+EAAAA,EAAOC,QAAU,IAA0B,oE,2bCMpC,IAAMC,EAAe,Q,0NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,kBADR,kBAGA,iBAAQ,CACN,GAAM,YADR,YAGA,4EAA2D,mBAAGC,WAAW,KAAQ,CAC7E,KAAQ,gEAD+C,4BAA3D,oEAGA,8GAA6F,sBAAQA,WAAW,KAAnB,aAA7F,iCAIA,qDAAoC,kBAAIA,WAAW,KAAI,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,mBAA/E,WACA,qBAAG,0BAAYA,WAAW,KAAvB,2FAIH,qBAAG,mBAAKC,IAAI,uBAAuBC,IAAKC,EAAQ,WAChD,iBAAQ,CACN,GAAM,eADR,eAMA,uBAAK,sBAAMH,WAAW,OAAU,CAC5B,UAAa,kBADZ,uvCAwCL,iBAAQ,CACN,GAAM,cACL,sBAAQA,WAAW,MAAnB,eACH,sBACE,kBAAIA,WAAW,MAAf,yCAA8D,mBAAGA,WAAW,MAAS,CACjF,KAAQ,gEADkD,iBAA9D,KAGA,kBAAIA,WAAW,MAAf,wBAA6C,mBAAGA,WAAW,MAAS,CAChE,KAAQ,qCADiC,kBAA7C,WAGA,kBAAIA,WAAW,MAAf,WAAgC,mBAAGA,WAAW,MAAS,CACnD,KAAQ,6CADoB,wBAAhC,gC,wNAQNJ,EAAWQ,gBAAiB","file":"component---src-docs-md-components-material-icons-md-6a086830cd5b7369f5ee.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/materialicons-sample-22574cc7c42d0acab9f81e1abf9372d9.gif\";","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/nrisbakk/Projects/newTC/totalcross-github-io/totalcross.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"material-icons\"\n    }}>{`Material Icons`}</h1>\n    <h3 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h3>\n    <p>{`Material Icons are the patterns of icons created by `}<a parentName=\"p\" {...{\n        \"href\": \"https://blog.totalcross.com/en/material-o-layout-da-google/\"\n      }}>{`Google - Material Design`}</a>{`. They are designed to be used in your Web/iOS/Android projects.`}</p>\n    <p>{`Material Icons are available in a wide variety of densities and sizes, with more than `}<strong parentName=\"p\">{`900 icons`}</strong>{`, as well as being Open Code.`}</p>\n    {\n      /* {% hint style=\"info\" %} */\n    }\n    <p>{`To use the icons, import the `}<em parentName=\"p\"><strong parentName=\"em\"><inlineCode parentName=\"strong\">{`MaterialIcons`}</inlineCode></strong></em>{` class:`}</p>\n    <p><inlineCode parentName=\"p\">{`import totalcross.ui.icon.MaterialIcons; Icon icon = new Icon(MaterialIcons.values());`}</inlineCode></p>\n    {\n      /* {% endhint %} */\n    }\n    <p><img alt=\"materialicons-sample\" src={require(\"../.gitbook/assets/materialicons-sample.gif\")} /></p>\n    <h3 {...{\n      \"id\": \"source-code\"\n    }}>{`Source Code`}</h3>\n    {\n      /* {% code title=\"MaterialIconSample.java\" %} */\n    }\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import totalcross.sys.Settings;\nimport totalcross.ui.Container;\nimport totalcross.ui.MainWindow;\nimport totalcross.ui.icon.Icon;\nimport totalcross.ui.icon.MaterialIcons;\n\npublic class MaterialIconSample extends MainWindow {\n\n    public MaterialIconSample() {\n        setUIStyle(Settings.MATERIAL_UI);\n        Settings.uiAdjustmentsBasedOnFontHeight = true;\n    }\n\n    public void initUI() {\n        final int ICON_WIDTH = 64;\n\n        int cols = (int) (Math.min(Settings.screenWidth, Settings.screenHeight)\n                / (ICON_WIDTH * Settings.screenDensity));\n        Container c = new Container() {\n            @Override\n            public void initUI() {\n                for (int i = 0, j = 0; i < MaterialIcons.values().length; i++, j++) {\n                    Icon icon = new Icon(MaterialIcons.values()[i]);\n                    icon.setFont(icon.getFont().adjustedBy(10));\n                    add(icon, (j % cols) == 0 ? LEFT : AFTER, (j % cols) == 0 ? AFTER : SAME, PARENTSIZE + (100 / cols),\n                            DP + ICON_WIDTH);\n                }\n                resizeHeight();\n            }\n        };\n        add(c, CENTER, TOP + 100, (int) (cols * ICON_WIDTH * Settings.screenDensity), WILL_RESIZE);\n    }\n\n\n`}</code></pre>\n    {\n      /* {% endcode %} */\n    }\n    <h3 {...{\n      \"id\": \"references\"\n    }}><strong parentName=\"h3\">{`References`}</strong></h3>\n    <ul>\n      <li parentName=\"ul\">{`Learn more about Material Design with `}<a parentName=\"li\" {...{\n          \"href\": \"https://blog.totalcross.com/en/material-o-layout-da-google/\"\n        }}>{`our Blog Post`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`Learn more about how `}<a parentName=\"li\" {...{\n          \"href\": \"https://material.io/tools/icons/\"\n        }}>{`Material Icons`}</a>{` works.`}</li>\n      <li parentName=\"ul\">{`See the `}<a parentName=\"li\" {...{\n          \"href\": \"https://rs.totalcross.com/doc/index.html\"\n        }}>{`TotalCross JavaDocs `}</a>{`for more information.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}