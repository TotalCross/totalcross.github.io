(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{"9q+Y":function(t,e,o){"use strict";o.r(e),o.d(e,"_frontmatter",(function(){return l})),o.d(e,"default",(function(){return c}));o("91GP"),o("rGqo"),o("yt8O"),o("Btvt"),o("RW0V"),o("FlsD"),o("q1tI");var a=o("7ljp"),n=o("hhGP");o("qKvR");function r(){return(r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var o=arguments[e];for(var a in o)Object.prototype.hasOwnProperty.call(o,a)&&(t[a]=o[a])}return t}).apply(this,arguments)}var l={};void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/md/components/radio.md"}});var i={_frontmatter:l},b=n.a;function c(t){var e=t.components,n=function(t,e){if(null==t)return{};var o,a,n={},r=Object.keys(t);for(a=0;a<r.length;a++)o=r[a],e.indexOf(o)>=0||(n[o]=t[o]);return n}(t,["components"]);return Object(a.b)(b,r({},i,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"radio"},"Radio"),Object(a.b)("h3",{id:"overview"},"Overview"),Object(a.b)("p",null,"A ",Object(a.b)("inlineCode",{parentName:"p"},"Radio")," button is a button that can be either checked or unchecked. A user can tap the button to check or uncheck it. It can also be checked from the template using the checked property"),Object(a.b)("p",null,"Use an element with a RadioGroupController attribute to group a set of radio button. When radio buttons are inside a RadioGroupController, just one radio in the group can be checked at any time. If a radio button is not placed in a group, they will all have the ability to be checked at the same time"),Object(a.b)("p",null,Object(a.b)("img",{alt:"radio-sample",src:o("Qdwh")})),Object(a.b)("p",null,"To see the complete sample, go to ",Object(a.b)("a",r({parentName:"p"},{href:"https://github.com/TotalCross/RadioSample"}),"github")),Object(a.b)("h3",{id:"source-code"},"Source Code"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-java"}),'import totalcross.sys.Settings;\nimport totalcross.ui.Bar;\nimport totalcross.ui.Check;\nimport totalcross.ui.Label;\nimport totalcross.ui.MainWindow;\nimport totalcross.ui.Radio;\nimport totalcross.ui.RadioGroupController;\nimport totalcross.ui.ScrollContainer;\nimport totalcross.ui.event.ControlEvent;\nimport totalcross.ui.event.PressListener;\nimport totalcross.ui.font.Font;\nimport totalcross.ui.gfx.Color;\n\npublic class RadioButton extends MainWindow{\n\n    public RadioButton(){\n        super("", BORDER_NONE);\n        setUIStyle(Settings.Material);\n        Settings.uiAdjustmentsBasedOnFontHeight = true;\n        setBackForeColors(Color.WHITE, Color.BLACK);\n\n        Bar h1 = new Bar("  RADIO");\n        h1.canSelectTitle = false;\n        h1.setFont(Font.getFont("Lato Bold", false, h1.getFont().size+3));\n        h1.setBackForeColors(0XF8F8F8,Color.BLACK);\n        add(h1, LEFT,TOP,FILL,PREFERRED-50);\n\n    }\n\n    public void initUI(){\n        ScrollContainer sc = new ScrollContainer(false, true);\n        add(sc,LEFT,AFTER,FILL,FILL);\n\n        RadioGroupController radioGroup = new RadioGroupController();\n\n        Radio pyton = new Radio("Pyton", radioGroup);\n        pyton.setChecked(true);\n        sc.add(pyton, LEFT+100, AFTER+100 ,PREFERRED+100,PREFERRED+25);\n\n        Radio java = new Radio("Java", radioGroup);\n        sc.add(java, LEFT+100, AFTER+50 ,PREFERRED+100,PREFERRED+25);\n\n        Radio ruby = new Radio("Ruby", radioGroup);\n        sc.add(ruby, LEFT+100, AFTER+50 ,PREFERRED+100,PREFERRED+25);\n\n        Radio php = new Radio("PHP", radioGroup);\n        sc.add(php, LEFT+100, AFTER+50 ,PREFERRED+100,PREFERRED+25);\n\n        Label autolock = new Label("Auto-Lock");\n        autolock.setFont(Font.getFont("Lato Regular", false, autolock.getFont().size+3));\n        sc.add(autolock, LEFT+100, AFTER+100, FILL, PREFERRED+25);\n\n        final Radio enable = new Radio("Enable: \'\'Never\'\' ");\n        enable.setChecked(true);\n        enable.setFont(Font.getFont("Lato Regular", false, Font.NORMAL_SIZE-2));\n        sc.add(enable, LEFT+123, AFTER+100 ,PREFERRED+100,PREFERRED+25);\n\n        RadioGroupController radioGroup2 = new RadioGroupController();\n\n        Radio rd1 = new Radio("1 Hour", radioGroup2);\n        rd1.setChecked(true);\n        sc.add(rd1, LEFT+100, AFTER+100 ,PREFERRED+100,PREFERRED+25);\n\n        Radio rd2 = new Radio("2 Hours", radioGroup2);\n        sc.add(rd2, LEFT+100, AFTER+50 ,PREFERRED+100,PREFERRED+25);\n\n        Radio rd3 = new Radio("3 Hours", radioGroup2);\n        sc.add(rd3, LEFT+100, AFTER+50 ,PREFERRED+100,PREFERRED+25);\n\n        final Radio never = new Radio("Never", radioGroup2);\n        sc.add(never, LEFT+100, AFTER+50 ,PREFERRED+100,PREFERRED+25);\n\n        enable.addPressListener(new PressListener(){\n            public void controlPressed(ControlEvent e){\n                boolean b = enable.isChecked();\n                never.setEnabled(b);\n            }\n        });\n\n        Label properties = new Label("Properties");\n        properties.setFont(Font.getFont("Lato Regular", false, properties.getFont().size+3));\n        sc.add(properties, LEFT+100, AFTER+100, FILL, PREFERRED+25);\n\n        Radio simple = new Radio("Simple Radio");\n        simple.setChecked(true);\n        sc.add(simple, LEFT+100, AFTER+100 ,PREFERRED+100,PREFERRED+25);\n\n        Radio bcolor = new Radio("Background Color");\n        bcolor.setBackColor(Color.YELLOW);\n        bcolor.textColor = Color.BLUE;\n        bcolor.checkColor = uiMaterial ? Color.BLACK : Color.YELLOW;\n        sc.add(bcolor, LEFT+100, AFTER+50 ,PREFERRED+100,PREFERRED+25);\n\n        Radio fcolor = new Radio("Foreground Color");\n        fcolor.setForeColor(Color.darker(Color.GREEN));\n        fcolor.checkColor = Color.GREEN;\n        sc.add(fcolor, LEFT+100, AFTER+50 ,PREFERRED+100,PREFERRED+25);\n    }\n}\n')),Object(a.b)("h3",{id:"attributes"},"Attributes"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",r({parentName:"tr"},{align:"left"}),"Type"),Object(a.b)("th",r({parentName:"tr"},{align:"left"}),"Name"),Object(a.b)("th",r({parentName:"tr"},{align:"left"}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",r({parentName:"tr"},{align:"left"}),Object(a.b)("strong",{parentName:"td"},"int")),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"checkColor"),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"Set to the color of the check, if you want to make it different of the foreground color")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",r({parentName:"tr"},{align:"left"}),Object(a.b)("strong",{parentName:"td"},"boolean")),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"leftJustify"),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"Set to true to left justify this control if the width is above the preferred one")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",r({parentName:"tr"},{align:"left"}),Object(a.b)("strong",{parentName:"td"},"int")),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"checkColor"),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"Sets the text color of the check")))),Object(a.b)("h3",{id:"métodos"},"Métodos"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",r({parentName:"tr"},{align:"left"}),"Tipo"),Object(a.b)("th",r({parentName:"tr"},{align:"left"}),"Nome"),Object(a.b)("th",r({parentName:"tr"},{align:"left"}),"Descrição"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",r({parentName:"tr"},{align:"left"}),Object(a.b)("strong",{parentName:"td"},"Constructor")),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"Radio","(","String Text",")"),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"Creates a radio control displaying the given text")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",r({parentName:"tr"},{align:"left"}),Object(a.b)("strong",{parentName:"td"},"Constructor")),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"Radio","(","String text, RadioGroupController radioGroup",")"),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"Creates a radio control with the given text attached to the given RadioGroupController")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",r({parentName:"tr"},{align:"left"}),Object(a.b)("strong",{parentName:"td"},"RadioGroupController")),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"getRadioGroup","("," ",")"),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"Returns the RadioGroupController that this radio belongs to, or null if none")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",r({parentName:"tr"},{align:"left"}),Object(a.b)("strong",{parentName:"td"},"String")),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"getText","("," ",")"),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"Gets the text displayed in the radio")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",r({parentName:"tr"},{align:"left"}),Object(a.b)("strong",{parentName:"td"},"boolean")),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"isChecked","("," ",")"),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"Returns the checked state of the control")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",r({parentName:"tr"},{align:"left"}),Object(a.b)("strong",{parentName:"td"},"void")),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"setChecked","(","boolean checked",")"),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"Sets the checked state of the control")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",r({parentName:"tr"},{align:"left"}),Object(a.b)("strong",{parentName:"td"},"void")),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"setChecked","(","boolean checked, boolean sendPress",")"),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"Sets the checked state of the control, and send the press event if desired")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",r({parentName:"tr"},{align:"left"}),Object(a.b)("strong",{parentName:"td"},"void")),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"setText","("," ",")"),Object(a.b)("td",r({parentName:"tr"},{align:"left"}),"Sets the text")))),Object(a.b)("h3",{id:"references"},Object(a.b)("strong",{parentName:"h3"},"References")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"See also our ",Object(a.b)("a",r({parentName:"li"},{href:"https://www.youtube.com/watch?v=7kFNoUWJ1YU"}),"quick tutorial video")," showing how to use Radios."),Object(a.b)("li",{parentName:"ul"},"See the ",Object(a.b)("a",r({parentName:"li"},{href:"https://rs.totalcross.com/doc/totalcross/ui/Radio.html"}),"JavaDocs")," for more information.")))}void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/md/components/radio.md"}}),c.isMDXComponent=!0},Qdwh:function(t,e,o){t.exports=o.p+"static/radio-sample-0230a400b3a0e9230e1c6bb72a98a0bc.gif"}}]);
//# sourceMappingURL=component---src-docs-md-components-radio-md-57c8a1c3dd41577403da.js.map