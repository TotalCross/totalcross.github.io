{"version":3,"sources":["webpack:///./src/components/repeat-banners/get-started-banner.js","webpack:///./src/components/text-block2.js","webpack:///./src/components/hero-center.js","webpack:///./src/components/text-block.js","webpack:///./src/components/repeat-banners/get-started-banner-simple.js","webpack:///./src/components/repeat-banners/go-to-github.js","webpack:///./src/pages/why-totalcross.js","webpack:///./src/components/image-block.js","webpack:///./src/components/banner-1column.js","webpack:///./src/components/banner-2columns.js"],"names":["GetStartedBanner","data","useStaticQuery","spaces","img","gsbanner","childImageSharp","fluid","fixed","title","text","btText","btRef","GET_STARTED","btColor","theme","TextContainer","styled","div","BtContainer","Title","h3","Text","p","TextBlock2","caption","link","color","Hero","BGContainer","BackgroundImage","TextBlock","h1","Tagline","HeroBlock","tagline","HeroCenter","bgImg","Tag","map","paragraph","GetStartedBannerSimple","GoToGitHub","subtitle","GITHUB","RowContainer","InnerContainer","WhyTotalCross","description","bg","info","info2","info3","corona","space","ide","lang","fast","ImageContainer","ImageContainer2","ImageInnerContainer","Img","h4","Caption","ImageBlock","alt","h2","Subtitle","Space","SubContainer","Container","ButtonContainer","Banner","LightBanner","DarkBanner","Banner1C","props","Banner2C"],"mappings":"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","file":"component---src-pages-why-totalcross-js-b0f76ccab41894f95c35.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport ImageBlock from '../image-block'\nimport Banner2C from '../banner-2columns'\nimport TextBlock from '../text-block'\nimport { GET_STARTED } from '../../links'\n\nconst GetStartedBanner = () => {\n\n  const data = useStaticQuery(graphql`\n  query {\n    gsbanner: file(name: { eq: \"home_gsbanner\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fluid(quality: 100, maxWidth: 820) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`);\n\n  return (\n      <Banner2C \n      spaces={[\n        <ImageBlock \n        img={data.gsbanner.childImageSharp.fluid}\n        fixed={false}/>,\n        <TextBlock \n        title='Ready to get started?'\n        text={['Build your own GUI with TotalCross!']}\n        btText='Get Started'\n        btRef={GET_STARTED}\n        btColor=\"white\"\n        />\n      ]}\n      theme='dark'\n      /> \n  )\n}\n\nexport default GetStartedBanner","import React from \"react\"\nimport styled from \"styled-components\"\nimport Button from \"./button\"\nimport ImageBlock from \"../components/image-block\"\n\nconst TextContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: stretch;\nfont-family: \"Poppins\", sans-serif;\n`\nconst BtContainer = styled.div`\ndisplay: flex;\ntext-align: center;\n`\nconst Title = styled.h3`\ncolor: #161616;\nmargin-top: 1rem;\nmargin-bottom: 0.5rem;\n`\nconst Text = styled.p`\nfont-family: \"Poppins\", sans-serif;\n`\n\nconst TextBlock2 = ({ img, caption=null, title=null, text=\"hello\", btText=null, btRef=null, btColor='green' }) => {\n    return (\n        <TextContainer>\n            { img !== null && <ImageBlock \n                img={img} \n                caption={caption} \n                /> }\n            { title !== null && <Title>{title}</Title> }\n            { btText !== null && <BtContainer><Button \n                text={btText} \n                link={btRef} \n                color={btColor}\n                /></BtContainer> }\n                \n            <Text>{text}</Text>\n        </TextContainer>\n    )\n}\n\nexport default TextBlock2;","import React from \"react\"\nimport styled from \"styled-components\"\nimport BackgroundImage from \"gatsby-background-image\"\n\nconst Hero = styled.div`\ndisplay: flex;\nalign-items: center;\nheight: 414px;\nmax-width: 680px;\ntext-align: center;\ncolor: #ffffff;\njustify-content: center;\n\n@media only screen and (max-width: 1000px) {\n    flex-direction: column;\n}\n\n@media only screen and (max-width: 600px) {\n  height: 400px;\n  width: 100%;\n}\n`\nconst BGContainer = styled(BackgroundImage)`\ndisplay: flex;\nalign-items: center;\nheight: 414px;\nbackground-position: center top;\nbackground-repeat: no-repeat;\nbackground-size: cover;\nbackground-color: #212121;\ntext-align: center;\ncolor: #ffffff;\njustify-content: center;\n\n@media only screen and (max-width: 1000px) {\n    flex-direction: column;\n}\n\n@media only screen and (max-width: 600px) {\n  height: 400px;\n  width: 100%;\n}\n`\n\nconst TextBlock = styled.div`\nwidth: 100%;\nmargin-left: 60px;\nmargin-right: 60px;\ntext-align: center;\n\n@media only screen and (max-width: 1000px) {\n    width: 100vw;\n    margin-left: 0px;\n    margin-right: 0px;\n}\n`\n\nconst Title = styled.h1`\nfont: 800 46px/60px \"Poppins\", sans-serif;\nmargin: 0 auto 50px;\ncolor: #c62f2e;\n\n@media only screen and (max-width: 1000px) {\n    padding-top: 250px;\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 800 36px/40px \"Poppins\", sans-serif;\n    margin: 20px auto 20px;\n    width: 90%;\n    padding-top: 50px;\n}\n`\nconst Tagline = styled.p`\nfont: 500 17px/28px \"Poppins\", sans-serif;\nfont-weight: 300;\ncolor: #8f8f8f;\nmargin: 0 auto 20px;\n\n@media only screen and (max-width: 1000px) {\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 300 16px/20px \"Poppins\", sans-serif;\n    font-weight: 300;\n    width: 90%;\n    margin: 0 auto 20px;\n}\n`\n\n\nconst HeroBlock = (title, tagline) => {\n    return (\n        <Hero>\n            <TextBlock>\n                <Title>\n                    {title}\n                </Title>\n                <Tagline>\n                    {tagline}\n                </Tagline>\n            </TextBlock>\n        </Hero>\n    )\n}\n\nfunction HeroCenter({ title, tagline=null, bgImg=null} ) {\n    if (bgImg === null) {\n        return (HeroBlock(title, tagline))\n    }\n    else {\n        return (\n            <BGContainer\n                Tag=\"section\"\n                fluid={bgImg}\n            > \n                {HeroBlock(title, tagline)}\n            </BGContainer>\n        )\n    }\n}\n\nexport default HeroCenter\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Button from \"./button\"\nimport ImageBlock from \"../components/image-block\"\n\nconst TextContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\ntext-align: left;\nmargin: auto 20px;\n`\n\nconst BtContainer = styled.div`\ndisplay: flex;\ntext-align: center;\n`\n\nconst Title = styled.h3`\ncolor: #c62f2e;\n`\n\nconst Text = styled.p`\nfont-family: \"Poppins\", sans-serif;\n`\n\nconst TextBlock = ({ img=null, caption=null, title=null, text=null, btText=null, btRef=null, btColor='green' }) => {\n    return (\n        <TextContainer>\n            { title !== null && <Title>{title}</Title>}\n            { img !== null && <ImageBlock \n                img={img} \n                caption={caption} \n                /> }\n            { text !== null && text.map(paragraph => (\n                <Text>{paragraph}</Text>\n            ))}\n            { btText !== null && <BtContainer><Button text={btText} link={btRef} color={btColor}/> </BtContainer>}\n        </TextContainer>\n    )\n}\n\nexport default TextBlock;","import React from \"react\"\nimport Banner1C from '../banner-1column'\nimport { GET_STARTED } from '../../links'\n\nconst GetStartedBannerSimple = () => {\n\n  return (\n      <Banner1C \n      title='Create a low footprint application with TotalCross'\n      theme='dark'\n      btText='Get started'\n      btRef={GET_STARTED}\n      btColor=\"white\"\n      /> \n  )\n}\n\nexport default GetStartedBannerSimple","import React from \"react\"\nimport Banner1C from '../banner-1column'\nimport { GITHUB } from '../../links'\n\nconst GoToGitHub = () => {\n\n  return (\n      <Banner1C \n      title='Would you like to see more?'\n      subtitle=\"Visit the project's repository.\"\n      theme='dark'\n      btText='Go to GitHub'\n      btRef={GITHUB}\n      btColor=\"white\"\n      /> \n  )\n}\n\nexport default GoToGitHub","import React from 'react'\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport HeroCenter from '../components/hero-center'\nimport Banner2C from '../components/banner-2columns'\nimport TextBlock from '../components/text-block'\nimport TextBlock2 from '../components/text-block2'\nimport ImageBlock from '../components/image-block'\nimport GetStartedBanner from \"../components/repeat-banners/get-started-banner\"\nimport GetStartedBannerSimple from '../components/repeat-banners/get-started-banner-simple'\nimport GoToGitHub from '../components/repeat-banners/go-to-github'\nimport Banner1C from '../components/banner-1column'\n\nconst RowContainer = styled.div`\ndisplay: flex;\nflex-direction: row;\nalign-content: center;\n@media only screen and (max-width: 600px) {\n  flex-wrap: wrap;\n}\n`\n\nconst InnerContainer = styled.div`\nmargin: 20px;\n`\nconst WhyTotalCross = () => {\n    const data = useStaticQuery(graphql`\n    query {\n      bg: file(name: { eq: \"bg_wavesdark\" }, extension: { eq: \"png\" }) {\n        childImageSharp {\n          fluid(quality: 100, maxWidth: 1920) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      info: file(name: { eq: \"whytotalcross_info\" }, extension: { eq: \"png\" }) {\n        childImageSharp {\n          fluid(quality: 100, maxWidth: 636) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      info2: file(name: { eq: \"whytotalcross_info2\" }, extension: { eq: \"png\" }) {\n        childImageSharp {\n          fluid(quality: 100, maxWidth: 636) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      info3: file(name: { eq: \"whytotalcross_info3\" }, extension: { eq: \"png\" }) {\n        childImageSharp {\n          fluid(quality: 100, maxWidth: 636) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      corona: file(name: { eq: \"whytotalcross_corona\" }, extension: { eq: \"png\" }) {\n        childImageSharp {\n          fluid(quality: 100, maxWidth: 836) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      ide: file(name: { eq: \"whytotalcross_ide\" }, extension: { eq: \"png\" }) {\n        childImageSharp {\n          fixed(height: 100) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      lang: file(name: { eq: \"whytotalcross_languages\" }, extension: { eq: \"png\" }) {\n        childImageSharp {\n          fixed(height: 100) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      fast: file(name: { eq: \"whytotalcross_fast\" }, extension: { eq: \"png\" }) {\n        childImageSharp {\n          fixed(height: 100) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  `);\n    return (\n        <Layout>\n            <SEO title=\"TotalCross · GUI Creator For Embedded, Mobile... Everything!\"\n      description='Build beautiful and modern Graphical User Interfaces for embedded, IoT, mobile and desktop. A cross-platform tool that lets you develop apps in Java.'/>\n            <HeroCenter \n            title=\"Why TotalCross\"\n            tagline=\"Three important points that make the difference when programming\"\n            bgImg={data.bg.childImageSharp.fluid}/>\n            <Banner2C \n            title=\"Low footprint application: be light!\"\n            subtitle=\"Keeping your application's footprint as low as possible is important to ensure a better performance. That's what we do: TotalCross runtime is currently at 5MB to bring mobile grade user experience even for low-end MPUs.\"\n            spaces={[\n                <ImageBlock \n                img={data.info.childImageSharp.fluid}\n                fixed={false}\n                />,\n                <TextBlock\n                title=\"TotalCross Bytecode\"\n                text={[\n                  \"Even coding with Java/Kotlin, TC SDK uses anything of these languages on the device. The Java bytecode is converted to optimized TotalCross bytecode. It has been created based on performance statistical researches to identify the operations that are frequently used and have more impact in performance. These operations are compressed in order to reduce the assembly of instructions and to provide low footprint.\"\n                ]} />\n            ]}\n            />\n            <Banner2C \n            spaces={[\n                <TextBlock\n                title=\"TotalCross Virtual Machine\"\n                text={[\"Instead of Jaca Virtual Machine (JVM), which is stack based, TotalCross Virtual Machine (TCVM) is register based. In a few words, it means a simple addition operation, which loads 4 instructions in JVM, it requires loading only one instruction in TCVM, ensuring high performance.\"]} />,\n                <ImageBlock \n                img={data.info2.childImageSharp.fluid}\n                fixed={false}\n                />\n            ]}\n            />\n            <Banner2C \n            spaces={[\n                <ImageBlock \n                img={data.info3.childImageSharp.fluid}\n                fixed={false}\n                />,\n                <TextBlock\n                title=\"Running higher even with low resources\"\n                text={[\"Make the most of your hardware resources: TotalCross' architecture delivers an amazing user experience over the interface, with high language programming, thanks to low footprint guaranteed. Be prepared to see your application running on any device.\"]} />\n            ]}\n            />\n            <GetStartedBannerSimple />\n            <Banner2C \n            title=\"Easy to Use: raise your productivity!\"\n            spaces={[\n              <ImageBlock \n              img={data.corona.childImageSharp.fluid}\n              fixed={false}/>,\n              <TextBlock\n              text={[\"Keeping your application's footprint as low as possible is important to ensure a better performance. That's what we do; TotalCross runtime is currently at 5MB to bring mobile grade experience even for low-end MPUs.\",\n              \"The Corona Chart App was coded with TotalCross. RapidAPI was used to fetch data and send it to the chart. The chart itself was coded in less than 150 lines while the whole app used 4 classes adding up to less than 600 lines of code in total.\"]}\n              btText=\"Check the code\"\n              btRef=\"https://github.com/TotalCross/corona-chart-app\"\n              btColor=\"black\" />\n            ]}/>\n            <GoToGitHub />\n            <Banner1C \n            space={<RowContainer>\n              <InnerContainer>\n\n            <TextBlock2 \n            img={data.ide.childImageSharp.fixed}\n            title=\"On your Favorite IDE\"\n            text=\"TotalCross SDK is compatible with any integrated development environment (IDE) that supports Java, like VSCode, NetBeans, Eclipse, and IntekkiJ.\"/>\n            </InnerContainer>\n            <InnerContainer>\n\n            <TextBlock2 \n            img={data.lang.childImageSharp.fixed}\n            title=\"High level Languages\"\n            text=\"TotalCross uses NanoJava, a leaner version of Java, or more precisely a subset of the language with 72% less classes than full Java. You can also use a subset of Kotlin with TotalCross.\"/>\n            </InnerContainer>\n            <InnerContainer>\n\n            <TextBlock2\n            img={data.fast.childImageSharp.fixed}\n            title=\"Fast to Learn\"\n            text=\"Follow our documentation and you will be able to start developing your app just in a few hours. TotalCross developers all agree that TotalCross is very easy to learn.\"/>\n            </InnerContainer>\n\n            </RowContainer>}\n            />\n            <GetStartedBanner />\n        </Layout>\n\n    )\n}\n\nexport default WhyTotalCross","import React from \"react\";\nimport styled from \"styled-components\"\nimport Img from \"gatsby-image\";\n\nconst ImageContainer = styled.div`\nflex-grow: 1 1;\nflex-direction: column;\n`\nconst ImageContainer2 = styled.div`\nflex-grow: 1;\nflex-direction: column;\n`\n\nconst ImageInnerContainer = styled(Img)`\njustify-content: flex-start;\ndisplay: block;\n`\nconst Title = styled.h4`\ncolor: #656565;\nmargin-bottom: 0;\n`\nconst Text = styled.p`\ncolor: #656565;\n`\nconst Caption = styled(Text)`\ntext-transform: uppercase;\n`\n\nconst ImageBlock = ({ img, caption=null, title=null, text=null, fixed=true }) => {\n    if (fixed) {\n    return (\n        <ImageContainer>\n            { title && <Title>{title}</Title>}\n            <ImageInnerContainer fixed={img} alt={caption}/>\n            { caption && <Caption>{caption}</Caption> } \n            { text && <Text>{text}</Text>}\n        </ImageContainer>\n    )} else {\n        return (\n            <ImageContainer2>\n                { title && <Title>{title}</Title>}\n                <ImageInnerContainer fluid={img} alt={caption}/>\n                { caption && <Caption>{caption}</Caption> } \n                { text && <Text>{text}</Text>}\n            </ImageContainer2>\n        )\n    }\n}\n\nexport default ImageBlock;","import React from \"react\";\nimport styled from \"styled-components\"\nimport Button from \"./button\";\n\nconst Title = styled.h2`\ndisplay: block;\nfont: 600 30px/38px \"Poppins\", sans-serif;\nmargin: 80px auto 50px;\ncolor: #c62f2e;\ntext-align: center;\nwidth: 50%;\n\n@media only screen and (max-width: 1000px) {\n    padding-top: 250px;\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 600 36px/40px \"Poppins\", sans-serif;\n    margin: 0 auto;\n    width: 90%;\n    padding-top: 50px;\n    padding-bottom: 50px;\n}\n`\nconst Subtitle = styled.h3`\nfont: 500 17px/28px \"Poppins\", sans-serif;\nfont-weight: 300;\ncolor: #8f8f8f;\nmargin: 0 auto 20px;\ntext-align: center;\nwidth: 70%;\n\n@media only screen and (max-width: 1000px) {\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 300 16px/20px \"Poppins\", sans-serif;\n    font-weight: 300;\n    width: 90%;\n    margin: 0 auto 20px;\n}\n`\n\nconst Space = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: stretch;\nflex-wrap: wrap;\nmargin: 0 auto;\n@media only screen and (max-width: 600px) {\n    flex-wrap: wrap;\n    width: 98%;\n}\n`\nconst SubContainer = styled.div`\ndisplay: flex;\npadding: 20px;\n@media only screen and (min-width: 1000px) {\n    max-width: 1300px;\n    margin: 0 auto;\n}\n`\nconst Container = styled.div`\njustify-content: center;\nborder: solid transparent;\npadding: 60px 0;\n`\n\nconst ButtonContainer = styled.div`\ndisplay: flex;\njustify-content: center;\n`\n\nconst Banner = (title, subtitle, space, btText, btRef, btColor) => {\n    return (\n        <Container>\n            {title && <Title>{title}</Title>}\n            {subtitle && <Subtitle>{subtitle}</Subtitle>}\n            {space && <SubContainer>\n                <Space>{space}</Space>\n                </SubContainer>\n                }\n            { btText !== null && <ButtonContainer>\n                <Button link={btRef} text={btText} color={btColor}/> \n                </ButtonContainer>\n                }\n        </Container>\n    )\n}\n\nconst LightBanner = styled.div`\nbackground-color: #EFEFEF;\ncolor:#212121;\nborder: solid rgba(0, 0, 0, 0);\n`\n\nconst DarkBanner = styled.div`\nbackground-color: #212121;\ncolor: #EFEFEF;\n`\n\nfunction Banner1C({ title=null, subtitle=null, space=null, btText=null, btRef=null, theme=\"light\", btColor=\"green\"} ) {\n    if (theme === \"light\") {\n        return (\n            <LightBanner>\n                {Banner(title, subtitle, space, btText, btRef, btColor)}\n                \n            </LightBanner>\n            )\n    }\n    else {\n        return (\n            <DarkBanner>\n                {Banner(title, subtitle, space, btText, btRef, btColor)}\n            </DarkBanner>\n            )\n    }\n}\n\nexport default Banner1C;\n","import React from \"react\";\nimport styled from \"styled-components\"\nimport BackgroundImage from \"gatsby-background-image\";\nimport Button from \"./button\";\n\nconst BGContainer = styled(BackgroundImage)`\ndisplay: flex;\nalign-items: center;\nheight: 614px;\nbackground-position: center top;\nbackground-repeat: no-repeat;\nbackground-size: cover;\nbackground-color: #EFEFEF;\ntext-align: center;\ncolor: #ffffff;\njustify-content: center;\nfont-family: \"Poppins\", sans-serif;\npadding-bottom: 60px;\n\n@media only screen and (max-width: 1000px) {\n    flex-direction: column;\n}\n\n@media only screen and (max-width: 600px) {\n  height: 600px;\n  width: 100%;\n}\n`\n\nconst Title = styled.h2`\ndisplay: block;\nfont: 600 30px/38px \"Poppins\", sans-serif;\nmargin: 80px auto 10px;\ncolor: ${(props) => {return (props.theme === \"dark\" ? \"#fff\" : \"#c62f2e\")}};\ntext-align: center;\nmax-width: 600px;\n\n@media only screen and (max-width: 1000px) {\n    padding-top: 250px;\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 800 36px/40px \"Poppins\", sans-serif;\n    margin: 50px auto 20px;\n    width: 90%;\n    padding-top: 50px;\n}\n`\nconst Subtitle = styled.h3`\nfont: 500 17px/28px \"Poppins\", sans-serif;\nfont-weight: 300;\ncolor: #8f8f8f;\nmargin: 0 auto 20px;\ntext-align: center;\nmax-width: 680px;\n\n@media only screen and (max-width: 1000px) {\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 300 16px/20px \"Poppins\", sans-serif;\n    font-weight: 300;\n    width: 90%;\n    margin: 0 auto 20px;\n}\n`\n\nconst Space = styled.div`\ndisplay: flex;\nwidth: 50%;\npadding: 0 100px;\n@media only screen and (max-width: 600px) {\n    width: 90%;\n    padding: 0;\n}\n`\nconst SubContainer = styled.div`\ndisplay: flex;\npadding: 20px;\nwidth: 80%;\nmargin: 0 auto;\n@media only screen and (max-width: 600px) {\n    flex-wrap: wrap;\n    width: 95%;\n}\n`\n\nconst BtContainer = styled.div`\ndisplay: flex;\njustify-content: center;\npadding: 20px 0;\n`\n\nconst Banner = (title, subtitle, spaces, btText, btRef, btColor, theme) => {\n    return (\n        <div>\n            {title && <Title theme={theme}>{title}</Title>}\n            {subtitle && <Subtitle>{subtitle}</Subtitle>}\n            <SubContainer>\n                <Space>{spaces[0]}</Space>\n                <Space>{spaces[1]}</Space>\n            </SubContainer>\n            { btText !== null && (<BtContainer><Button link={btRef} text={btText} color={btColor}/></BtContainer>) }\n        </div>\n    )\n}\n\nconst LightBanner = styled.div`\nbackground-color: #EFEFEF;\ncolor:#212121;\nborder: solid rgba(0, 0, 0, 0);\npadding-bottom: 60px;\n`\n\nconst DarkBanner = styled.div`\nbackground-color: #212121;\ncolor: #EFEFEF;\npadding-bottom: 60px;\nh2, h3, h4, h5, h6 {\n    color: #EFEFEF;\n}\n`\n\nfunction Banner2C({ title=null, subtitle=null, spaces, btText=null, btRef=null, theme=\"light\", bgImg=null, btColor='green'} ) {\n    if (bgImg != null) {\n        return (\n            <BGContainer\n                Tag=\"section\"\n                fluid={bgImg}\n            > \n                {Banner(title, subtitle, spaces, btText, btRef, btColor, \"dark\")}\n            </BGContainer>\n        )\n    }\n    else if (theme === \"light\") {\n            return (\n            <LightBanner>\n                {Banner(title, subtitle, spaces, btText, btRef, btColor)}\n            </LightBanner>\n            )\n    }\n    else {\n        return (\n            <DarkBanner>\n                {Banner(title, subtitle, spaces, btText, btRef, \"dark\")}\n            </DarkBanner>\n            )\n    }\n}\n\nexport default Banner2C;\n"],"sourceRoot":""}