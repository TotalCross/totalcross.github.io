{"version":3,"sources":["webpack:///./src/components/repeat-banners/get-started-banner.js","webpack:///./src/components/hero-side.js","webpack:///./src/pages/index.js","webpack:///./src/components/text-block2.js","webpack:///./src/components/text-block.js","webpack:///./src/components/image-block.js","webpack:///./src/components/banner-1column.js","webpack:///./src/components/banner-2columns.js"],"names":["GetStartedBanner","data","useStaticQuery","spaces","img","gsbanner","childImageSharp","fluid","fixed","title","text","btText","btRef","GET_STARTED","btColor","theme","Hero","styled","div","BGContainer","BackgroundImage","TextBlock","Title","h1","Tagline","p","ImageBlock","HeroBlock","tagline","imgText","alt","HeroSide","bgImg","Tag","TCFeaturesContainer","FeatureText","Index","TCFeatures","items","low","gui","cross","req","open","board","map","feature","description","rasp","bg","space","bg2","homeapp","subtitle","coffee","caption","printer","SAMPLES","tecdetlogo","tecdet","TextContainer","BtContainer","h3","Text","TextBlock2","link","color","paragraph","ImageContainer","ImageContainer2","ImageInnerContainer","Img","h4","Caption","h2","Subtitle","Space","SubContainer","Container","ButtonContainer","Banner","LightBanner","DarkBanner","Banner1C","props","Banner2C"],"mappings":"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","file":"component---src-pages-index-js-7051176ea740e2c9437b.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport ImageBlock from '../image-block'\nimport Banner2C from '../banner-2columns'\nimport TextBlock from '../text-block'\nimport { GET_STARTED } from '../../links'\n\nconst GetStartedBanner = () => {\n\n  const data = useStaticQuery(graphql`\n  query {\n    gsbanner: file(name: { eq: \"home_gsbanner\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fluid(quality: 100, maxWidth: 820) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`);\n\n  return (\n      <Banner2C \n      spaces={[\n        <ImageBlock \n        img={data.gsbanner.childImageSharp.fluid}\n        fixed={false}/>,\n        <TextBlock \n        title='Ready to get started?'\n        text={['Build your own GUI with TotalCross!']}\n        btText='Get Started'\n        btRef={GET_STARTED}\n        btColor=\"white\"\n        />\n      ]}\n      theme='dark'\n      /> \n  )\n}\n\nexport default GetStartedBanner","import React from \"react\";\nimport styled from \"styled-components\"\nimport BackgroundImage from \"gatsby-background-image\";\nimport Img from \"gatsby-image\";\n\nconst Hero = styled.div`\ndisplay: flex;\nalign-items: center;\nheight: 614px;\ntext-align: center;\ncolor: #ffffff;\njustify-content: center;\n\n@media only screen and (max-width: 1000px) {\n    flex-direction: column;\n}\n\n@media only screen and (max-width: 600px) {\n  height: 600px;\n  width: 100%;\n}\n`\nconst BGContainer = styled(BackgroundImage)`\ndisplay: flex;\nalign-items: center;\nheight: 614px;\nbackground-position: center top;\nbackground-repeat: no-repeat;\nbackground-size: cover;\nbackground-color: #212121;\ntext-align: center;\ncolor: #ffffff;\njustify-content: center;\n\n@media only screen and (max-width: 1000px) {\n    flex-direction: column;\n}\n\n@media only screen and (max-width: 600px) {\n  height: 600px;\n  width: 100%;\n}\n`\n\nconst TextBlock = styled.div`\nwidth: 45%;\nmargin-left: 60px;\ntext-align: left;\n\n@media only screen and (max-width: 1000px) {\n    width: 100vw;\n    margin-left: 0px;\n    text-align: center;\n}\n`\n\nconst Title = styled.h1`\nfont: 800 46px/60px \"Poppins\", sans-serif;\nmargin: 0 auto 50px;\ncolor: #ffffff;\n\n@media only screen and (max-width: 1000px) {\n    padding-top: 250px;\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 800 36px/40px \"Poppins\", sans-serif;\n    margin: 50px auto 20px;\n    width: 90%;\n}\n`\nconst Tagline = styled.p`\nfont: 500 17px/28px \"Poppins\", sans-serif;\nfont-weight: 300;\ncolor: #8f8f8f;\nmargin: 0 auto 20px;\n\n@media only screen and (max-width: 1000px) {\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 300 16px/20px \"Poppins\", sans-serif;\n    font-weight: 300;\n    width: 90%;\n    margin: 0 auto 20px;\n}\n`\n\nconst ImageBlock = styled.div`\n@media only screen and (max-width: 1000px) {\n    transform: scale(0.4) translateX(-5%) translateY(-60%);\n}\n`\n\nconst HeroBlock = (title, tagline, img, imgText) => {\n    return (\n        <Hero>\n            <TextBlock>\n                <Title>\n                    {title}\n                </Title>\n                <Tagline>\n                    {tagline}\n                </Tagline>\n            </TextBlock>\n            <ImageBlock>\n                {img != null?\n                <Img \n                fixed={img}\n                alt={imgText}\n                />\n            :<></>}\n            </ImageBlock>\n        </Hero>\n    )\n}\n\nfunction HeroSide({ title, tagline=\"\", img=null, imgText=null, bgImg=null} ) {\n    if (bgImg === null) {\n        return (HeroBlock(title, tagline, img, imgText))\n    }\n    else {\n        return (\n            <BGContainer\n                Tag=\"section\"\n                fluid={bgImg}\n            > \n                {HeroBlock(title, tagline, img, imgText)}\n            </BGContainer>\n        )\n    }\n}\n\nexport default HeroSide;\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport HeroSide from \"../components/hero-side\"\nimport Banner1C from \"../components/banner-1column\"\nimport ImageBlock from \"../components/image-block\"\nimport Banner2C from '../components/banner-2columns'\nimport TextBlock2 from '../components/text-block2'\nimport TextBlock from '../components/text-block'\nimport GetStartedBanner from \"../components/repeat-banners/get-started-banner\"\nimport { GET_STARTED, SAMPLES } from '../links'\n\nconst TCFeaturesContainer = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\nflex-direction: row;\njustify-content: space-between;\n`\nconst FeatureText = styled.div`\ndisplay: flex;\nwidth: 28%;\npadding: 1% 2%;\n@media (max-width: 768px) {\n  width: 100%;\n  padding: 0;\n}\n`\nconst Index = () => {\n  const data = useStaticQuery(graphql`\n  query {\n    bg: file(name: { eq: \"bghome_sitetc\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fluid(quality: 90, maxWidth: 1920) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    bg2: file(name: { eq: \"bg_wavesdark\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fluid(quality: 90, maxWidth: 1920) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    rasp: file(name: { eq: \"rasp_01\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fixed(width: 700) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    cross: file(name: { eq: \"home_cross\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fixed(height: 100) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    gui: file(name: { eq: \"home_gui\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fixed(height: 100) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    low: file(name: { eq: \"home_lowfootprint\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fixed(height: 100) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    open: file(name: { eq: \"home_opensource\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fixed(height: 100) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    board: file(name: { eq: \"home_raspberry\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fixed(height: 100) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    req: file(name: { eq: \"home_requirements\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fixed(height: 100) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    homeapp: file(name: { eq: \"home_homeapp\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fluid(quality: 100, maxWidth: 820) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    printer: file(name: { eq: \"home_printer\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fluid(quality: 100, maxWidth: 820) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    coffee: file(name: { eq: \"home_coffee\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fluid(quality: 100, maxWidth: 820) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    tecdet: file(name: { eq: \"home_tecdet\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fluid(quality: 100, maxWidth: 820) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    tecdetlogo: file(name: { eq: \"home_tecdetlogo\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fixed(width: 100) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    gsbanner: file(name: { eq: \"home_gsbanner\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fluid(quality: 100, maxWidth: 820) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`);\n\n  const TCFeatures = () => {\n    const items = [\n      {\n        img:data.low.childImageSharp.fixed,\n        title:'Low Footprint',\n        text:'Less than 5MB of footprint, esuring high performance even when running in low-end devices.',\n      },\n      {\n        img:data.gui.childImageSharp.fixed,\n        title:'Fast to Use GUI Creator',\n        text:'Basic knowledge of Java or Kotlin lets you build performing Apps for Android, Linux Arm, Windows and iOS.',\n      },\n      {\n        img:data.cross.childImageSharp.fixed,\n        title:'Cross-Platform',\n        text:'Code once and run on, every platform. Responsive User Interfaces providing same behaviour and usability.',\n      },\n      {\n        img:data.req.childImageSharp.fixed,\n        title:'Minimum Requirements',\n        text:'256MB RAM, CPU Arm A7 528MHz and GPU.',\n      },\n      {\n        img:data.open.childImageSharp.fixed,\n        title:'Free & Open Source',\n        text:'Hosted on GitHub and maintained by a community of contributors.',\n      },\n      {\n        img:data.board.childImageSharp.fixed,\n        title:'Supported Embedded Platforms',\n        text:'Raspberry Pi 4, 3 and 2, Beaglebone Black, Toradex Colibri, Verdin and Apalis.',\n      },\n      \n    ]\n    return (\n      <TCFeaturesContainer>\n      {items.map((feature)=>(\n        <FeatureText>\n          <TextBlock2\n        img={feature.img} \n        title={feature.title} \n        text={feature.text} \n        />\n        </FeatureText>\n      ))}\n      </TCFeaturesContainer>\n    )\n  } \n\n  return (\n    <Layout>\n      <SEO \n      title=\"TotalCross · GUI Creator For Embedded, Mobile... Everything!\"\n      description='Build beautiful and modern Graphical User Interfaces for embedded, IoT, mobile and desktop. A cross-platform tool that lets you develop apps in Java.' \n      />\n      <HeroSide \n      title=\"The fastest way to build GUI for embedded devices\" \n      tagline=\"Open Source SDK providing a fast and easy way to build beautiful User Interfaces for Embedded, IoT, mobile, desktop, everything.\" \n      img={data.rasp.childImageSharp.fixed} \n      imgText=\"Embedded system with display showing a TotalCross GUI\"\n      bgImg={data.bg.childImageSharp.fluid}\n      />\n      <Banner1C \n        title='Simplify the development of User Interfaces on Embedded Devices'\n        space={<TCFeatures />}/>\n      <Banner2C\n        title='What is TotalCross?'\n        bgImg={data.bg2.childImageSharp.fluid}\n        spaces={[\n      <ImageBlock \n        img={data.homeapp.childImageSharp.fluid}\n        fixed={false}\n      />, \n      <TextBlock \n        text={['TotalCross is an open-source cross-platform SDK developed to make your life easier when creating mobile grade user experience to your embedded systems.', \n        'All while delivering native performance with a low footprint.']} \n        btText='Get Started' \n        btRef={GET_STARTED}\n        btColor='white'\n      />\n      ]}/>\n      <Banner2C\n      title='Samples'\n      subtitle='Wonderful User Interfaces for Embedded Devices'\n      spaces={[\n        <ImageBlock \n          img={data.coffee.childImageSharp.fluid}\n          fixed={false}\n          caption=\"Control the features of your machine and enjoy choosing your coffee as the way you like\" \n          title=\"Coffee Machine\" \n        />, \n        <ImageBlock \n          img={data.printer.childImageSharp.fluid}\n          fixed={false}\n          caption=\"Can a printer be smarter? Yes, of course. It’s time to build a good interface for a printer and make the process easier. Check the code and see it running on an embedded device.\" \n          title=\"Printer\" \n        />\n      ]}\n      btText='Check our Samples'\n      btRef={SAMPLES}\n      btColor='black'/>\n      <Banner2C \n      spaces={[\n        <TextBlock \n        title='Built with TotalCross:'\n        text={['Tecdet develops systems for traffic control and inspection for the Brazilian government.', \n        'They decided to rebuild their system for the Linux Arm architecture compatible with Toradex modules and chose TotalCross to develop their GUI.']}\n        btText='Check our Cases'\n        btRef='/doc'\n        btColor='black'\n        img={data.tecdetlogo.childImageSharp.fixed}\n        />\n      , \n        <ImageBlock \n        img={data.tecdet.childImageSharp.fluid}\n        fixed={false}\n        />\n      ]}\n      />\n      <GetStartedBanner />\n    </Layout>\n  )\n}\n\nexport default Index\n\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Button from \"./button\"\nimport ImageBlock from \"../components/image-block\"\n\nconst TextContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: stretch;\nfont-family: \"Poppins\", sans-serif;\n`\nconst BtContainer = styled.div`\ndisplay: flex;\ntext-align: center;\n`\nconst Title = styled.h3`\ncolor: #161616;\nmargin-top: 1rem;\nmargin-bottom: 0.5rem;\n`\nconst Text = styled.p`\nfont-family: \"Poppins\", sans-serif;\n`\n\nconst TextBlock2 = ({ img, caption=null, title=null, text=\"hello\", btText=null, btRef=null, btColor='green' }) => {\n    return (\n        <TextContainer>\n            { img !== null && <ImageBlock \n                img={img} \n                caption={caption} \n                /> }\n            { title !== null && <Title>{title}</Title> }\n            { btText !== null && <BtContainer><Button \n                text={btText} \n                link={btRef} \n                color={btColor}\n                /></BtContainer> }\n                \n            <Text>{text}</Text>\n        </TextContainer>\n    )\n}\n\nexport default TextBlock2;","import React from \"react\"\nimport styled from \"styled-components\"\nimport Button from \"./button\"\nimport ImageBlock from \"../components/image-block\"\n\nconst TextContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\ntext-align: left;\nmargin: auto 20px;\n`\n\nconst BtContainer = styled.div`\ndisplay: flex;\ntext-align: center;\n`\n\nconst Title = styled.h3`\ncolor: #c62f2e;\n`\n\nconst Text = styled.p`\nfont-family: \"Poppins\", sans-serif;\n`\n\nconst TextBlock = ({ img=null, caption=null, title=null, text=null, btText=null, btRef=null, btColor='green' }) => {\n    return (\n        <TextContainer>\n            { title !== null && <Title>{title}</Title>}\n            { img !== null && <ImageBlock \n                img={img} \n                caption={caption} \n                /> }\n            { text !== null && text.map(paragraph => (\n                <Text>{paragraph}</Text>\n            ))}\n            { btText !== null && <BtContainer><Button text={btText} link={btRef} color={btColor}/> </BtContainer>}\n        </TextContainer>\n    )\n}\n\nexport default TextBlock;","import React from \"react\";\nimport styled from \"styled-components\"\nimport Img from \"gatsby-image\";\n\nconst ImageContainer = styled.div`\nflex-grow: 1 1;\nflex-direction: column;\n`\nconst ImageContainer2 = styled.div`\nflex-grow: 1;\nflex-direction: column;\n`\n\nconst ImageInnerContainer = styled(Img)`\njustify-content: flex-start;\ndisplay: block;\n`\nconst Title = styled.h4`\ncolor: #656565;\nmargin-bottom: 0;\n`\nconst Text = styled.p`\ncolor: #656565;\n`\nconst Caption = styled(Text)`\ntext-transform: uppercase;\n`\n\nconst ImageBlock = ({ img, caption=null, title=null, text=null, fixed=true }) => {\n    if (fixed) {\n    return (\n        <ImageContainer>\n            { title && <Title>{title}</Title>}\n            <ImageInnerContainer fixed={img} alt={caption}/>\n            { caption && <Caption>{caption}</Caption> } \n            { text && <Text>{text}</Text>}\n        </ImageContainer>\n    )} else {\n        return (\n            <ImageContainer2>\n                { title && <Title>{title}</Title>}\n                <ImageInnerContainer fluid={img} alt={caption}/>\n                { caption && <Caption>{caption}</Caption> } \n                { text && <Text>{text}</Text>}\n            </ImageContainer2>\n        )\n    }\n}\n\nexport default ImageBlock;","import React from \"react\";\nimport styled from \"styled-components\"\nimport Button from \"./button\";\n\nconst Title = styled.h2`\ndisplay: block;\nfont: 600 30px/38px \"Poppins\", sans-serif;\nmargin: 80px auto 50px;\ncolor: #c62f2e;\ntext-align: center;\nwidth: 50%;\n\n@media only screen and (max-width: 1000px) {\n    padding-top: 250px;\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 600 36px/40px \"Poppins\", sans-serif;\n    margin: 0 auto;\n    width: 90%;\n    padding-top: 50px;\n    padding-bottom: 50px;\n}\n`\nconst Subtitle = styled.h3`\nfont: 500 17px/28px \"Poppins\", sans-serif;\nfont-weight: 300;\ncolor: #8f8f8f;\nmargin: 0 auto 20px;\ntext-align: center;\nwidth: 70%;\n\n@media only screen and (max-width: 1000px) {\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 300 16px/20px \"Poppins\", sans-serif;\n    font-weight: 300;\n    width: 90%;\n    margin: 0 auto 20px;\n}\n`\n\nconst Space = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: stretch;\nflex-wrap: wrap;\nmargin: 0 auto;\n@media only screen and (max-width: 600px) {\n    flex-wrap: wrap;\n    width: 98%;\n}\n`\nconst SubContainer = styled.div`\ndisplay: flex;\npadding: 20px;\n@media only screen and (min-width: 1000px) {\n    max-width: 1300px;\n    margin: 0 auto;\n}\n`\nconst Container = styled.div`\njustify-content: center;\nborder: solid transparent;\npadding: 60px 0;\n`\n\nconst ButtonContainer = styled.div`\ndisplay: flex;\njustify-content: center;\n`\n\nconst Banner = (title, subtitle, space, btText, btRef, btColor) => {\n    return (\n        <Container>\n            {title && <Title>{title}</Title>}\n            {subtitle && <Subtitle>{subtitle}</Subtitle>}\n            {space && <SubContainer>\n                <Space>{space}</Space>\n                </SubContainer>\n                }\n            { btText !== null && <ButtonContainer>\n                <Button link={btRef} text={btText} color={btColor}/> \n                </ButtonContainer>\n                }\n        </Container>\n    )\n}\n\nconst LightBanner = styled.div`\nbackground-color: #EFEFEF;\ncolor:#212121;\nborder: solid rgba(0, 0, 0, 0);\n`\n\nconst DarkBanner = styled.div`\nbackground-color: #212121;\ncolor: #EFEFEF;\n`\n\nfunction Banner1C({ title=null, subtitle=null, space=null, btText=null, btRef=null, theme=\"light\", btColor=\"green\"} ) {\n    if (theme === \"light\") {\n        return (\n            <LightBanner>\n                {Banner(title, subtitle, space, btText, btRef, btColor)}\n                \n            </LightBanner>\n            )\n    }\n    else {\n        return (\n            <DarkBanner>\n                {Banner(title, subtitle, space, btText, btRef, btColor)}\n            </DarkBanner>\n            )\n    }\n}\n\nexport default Banner1C;\n","import React from \"react\";\nimport styled from \"styled-components\"\nimport BackgroundImage from \"gatsby-background-image\";\nimport Button from \"./button\";\n\nconst BGContainer = styled(BackgroundImage)`\ndisplay: flex;\nalign-items: center;\nheight: 614px;\nbackground-position: center top;\nbackground-repeat: no-repeat;\nbackground-size: cover;\nbackground-color: #EFEFEF;\ntext-align: center;\ncolor: #ffffff;\njustify-content: center;\nfont-family: \"Poppins\", sans-serif;\npadding-bottom: 60px;\n\n@media only screen and (max-width: 1000px) {\n    flex-direction: column;\n}\n\n@media only screen and (max-width: 600px) {\n  height: 600px;\n  width: 100%;\n}\n`\n\nconst Title = styled.h2`\ndisplay: block;\nfont: 600 30px/38px \"Poppins\", sans-serif;\nmargin: 80px auto 10px;\ncolor: ${(props) => {return (props.theme === \"dark\" ? \"#fff\" : \"#c62f2e\")}};\ntext-align: center;\nmax-width: 600px;\n\n@media only screen and (max-width: 1000px) {\n    padding-top: 250px;\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 800 36px/40px \"Poppins\", sans-serif;\n    margin: 50px auto 20px;\n    width: 90%;\n    padding-top: 50px;\n}\n`\nconst Subtitle = styled.h3`\nfont: 500 17px/28px \"Poppins\", sans-serif;\nfont-weight: 300;\ncolor: #8f8f8f;\nmargin: 0 auto 20px;\ntext-align: center;\nmax-width: 680px;\n\n@media only screen and (max-width: 1000px) {\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 300 16px/20px \"Poppins\", sans-serif;\n    font-weight: 300;\n    width: 90%;\n    margin: 0 auto 20px;\n}\n`\n\nconst Space = styled.div`\ndisplay: flex;\nwidth: 50%;\npadding: 0 100px;\n@media only screen and (max-width: 600px) {\n    width: 90%;\n    padding: 0;\n}\n`\nconst SubContainer = styled.div`\ndisplay: flex;\npadding: 20px;\nwidth: 80%;\nmargin: 0 auto;\n@media only screen and (max-width: 600px) {\n    flex-wrap: wrap;\n    width: 95%;\n}\n`\n\nconst BtContainer = styled.div`\ndisplay: flex;\njustify-content: center;\npadding: 20px 0;\n`\n\nconst Banner = (title, subtitle, spaces, btText, btRef, btColor, theme) => {\n    return (\n        <div>\n            {title && <Title theme={theme}>{title}</Title>}\n            {subtitle && <Subtitle>{subtitle}</Subtitle>}\n            <SubContainer>\n                <Space>{spaces[0]}</Space>\n                <Space>{spaces[1]}</Space>\n            </SubContainer>\n            { btText !== null && (<BtContainer><Button link={btRef} text={btText} color={btColor}/></BtContainer>) }\n        </div>\n    )\n}\n\nconst LightBanner = styled.div`\nbackground-color: #EFEFEF;\ncolor:#212121;\nborder: solid rgba(0, 0, 0, 0);\npadding-bottom: 60px;\n`\n\nconst DarkBanner = styled.div`\nbackground-color: #212121;\ncolor: #EFEFEF;\npadding-bottom: 60px;\nh2, h3, h4, h5, h6 {\n    color: #EFEFEF;\n}\n`\n\nfunction Banner2C({ title=null, subtitle=null, spaces, btText=null, btRef=null, theme=\"light\", bgImg=null, btColor='green'} ) {\n    if (bgImg != null) {\n        return (\n            <BGContainer\n                Tag=\"section\"\n                fluid={bgImg}\n            > \n                {Banner(title, subtitle, spaces, btText, btRef, btColor, \"dark\")}\n            </BGContainer>\n        )\n    }\n    else if (theme === \"light\") {\n            return (\n            <LightBanner>\n                {Banner(title, subtitle, spaces, btText, btRef, btColor)}\n            </LightBanner>\n            )\n    }\n    else {\n        return (\n            <DarkBanner>\n                {Banner(title, subtitle, spaces, btText, btRef, \"dark\")}\n            </DarkBanner>\n            )\n    }\n}\n\nexport default Banner2C;\n"],"sourceRoot":""}