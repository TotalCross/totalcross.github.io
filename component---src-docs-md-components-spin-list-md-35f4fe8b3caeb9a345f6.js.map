{"version":3,"sources":["webpack:///./src/docs/md/components/spin-list.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-docs-md-components-spin-list-md-35f4fe8b3caeb9a345f6.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/nrisbakk/Projects/newTC/totalcross-github-io/totalcross.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"spin-list\"\n    }}>{`Spin List`}</h1>\n    <h3 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h3>\n    <p>{`Spin list is a control that has two arrows `}{`(`}{`up and down`}{`)`}{` to navigate between the information contained in the control, it is possible to navigate by clicking or holding the arrows or navigating the keyboard arrows.`}</p>\n    <h3 {...{\n      \"id\": \"source-code\"\n    }}>{`Source Code`}</h3>\n    {\n      /* {% code title=\"SpinList Sample\" %} */\n    }\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import totalcross.sys.InvalidNumberException;\nimport totalcross.sys.Settings;\nimport totalcross.ui.Container;\nimport totalcross.ui.MainWindow;\nimport totalcross.ui.SpinList;\nimport totalcross.ui.gfx.Color;\nimport totalcross.util.UnitsConverter;\n\npublic class SpinListSample extends MainWindow {\n\n    int gap = UnitsConverter.toPixels(DP + 8);\n\n    public SpinListSample(){\n        setUIStyle(Settings.MATERIAL_UI);\n    }\n\n    @Override\n    public void initUI() {\n        try {\n            SpinList sl = new SpinList(new String[]{\"Blue\", \"Orange\",\"Yelow\", \"Red\"});\n            sl.allowsNoneSelected = true;\n            add(sl, LEFT + gap, TOP + gap, FILL, PREFERRED);\n\n            Container paintContainer = new Container();\n            add(paintContainer, SAME, AFTER + gap, FILL - gap, FILL - gap);\n\n\n            sl.addPressListener(e -> {\n                switch (sl.getSelectedIndex()){\n                    case -1:\n                        paintContainer.setBackColor(Color.WHITE);\n                        break;\n                    case 0:\n                        paintContainer.setBackColor(Color.BLUE);\n                        break;\n                    case 1:\n                        paintContainer.setBackColor(Color.ORANGE);\n                        break;\n                    case 2:\n                        paintContainer.setBackColor(Color.YELLOW);\n                        break;\n                    case 3:\n                        paintContainer.setBackColor(Color.RED);\n                        break;\n                }\n            });\n\n        } catch (InvalidNumberException e) {\n            e.printStackTrace();\n        }\n    }\n}\n`}</code></pre>\n    {\n      /* {% endcode %} */\n    }\n    <h3 {...{\n      \"id\": \"\"\n    }}></h3>\n    <h3 {...{\n      \"id\": \"attributes\"\n    }}>{`Attributes`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`boolean`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`isVertical`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Set to true if there are only numbers in the SpinList and you want to open a NumericBox`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`boolean`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`useNumericBox`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Set to true if there are only numbers in the SpinList and you want to open a NumericBox`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`boolean`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`useCalculatorBox`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Set to false to disallow the wrap around that happens when the user is at the first or last items.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`boolean`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`wrapAround`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`By default, equals the choices' length. You can define its length and then create a single array shared by a set of SpinLists with different lengths on each SpinList`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`boolean`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`allowsNoneSelected`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Allows -1 as selected index`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`Constructor`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`SpinList`}{`(`}{`String`}{`[`}{`]`}{` choices`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Constructs a vertical SpinList with the given choices, selecting index 0 by default.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`Constructor`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`SpinList`}{`(`}{`String`}{`[`}{`]`}{` choices, boolean isVertical`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Constructs a SpinList with the given choices, selecting index 0 by default and can be vertical or not.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`int`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`getPreferredWidth`}{`(`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Return the width.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`int`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`getPreferredHeight`}{`(`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Return the Height.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`void`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`setChoices`}{`(`}{`String`}{`[`}{`]`}{` choices`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Sets the choices to the given ones`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`void`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`replaceChoices`}{`(`}{`String`}{`[`}{`]`}{` choices`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Just replaces the choices array.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`int`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`getSelectedIndex`}{`(`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Returns the selected index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`String`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`getSelectedItem`}{`(`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Returns the selected item.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"references\"\n    }}>{`References`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`See the `}<a parentName=\"li\" {...{\n          \"href\": \"https://rs.totalcross.com/doc/totalcross/ui/SpinList.html\"\n        }}>{`Java Docs`}</a>{` for more information.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}