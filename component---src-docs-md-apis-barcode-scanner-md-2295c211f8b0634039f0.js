(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{ODre:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return o})),n.d(t,"default",(function(){return s}));var a=n("k1TG"),c=n("8o2o"),r=(n("q1tI"),n("7ljp")),b=n("hhGP"),o=(n("qKvR"),{});void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/md/apis/barcode-scanner.md"}});var l={_frontmatter:o},i=b.a;function s(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(r.b)(i,Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"scanner"},"Scanner"),Object(r.b)("h2",{id:"overview"},"Overview"),Object(r.b)("p",null,"Are you thinking in implements a barcode reader in your app? TotalCross have a simple solution. It is easy to make a Scanner application and there is an example ready to use on GitHub!"),Object(r.b)("h2",{id:"methods"},"Methods"),Object(r.b)("table",null,Object(r.b)("thead",null,Object(r.b)("tr",null,Object(r.b)("th",{style:{textAlign:"left"}},"Name"),Object(r.b)("th",{style:{textAlign:"left"}},"Description"))),Object(r.b)("tbody",null,Object(r.b)("tr",null,Object(r.b)("td",{style:{textAlign:"left"}},"readBarcode(String mode)"),Object(r.b)("td",{style:{textAlign:"left"}},Object(r.b)("p",null,"The mode can be one of:",Object(r.b)("br",null)),Object(r.b)("p",null,"1D - for one dimension barcodes",Object(r.b)("br",null)),Object(r.b)("p",null,"2D - for QR codes",Object(r.b)("br",null)),Object(r.b)("p",null,"empty string - for both",Object(r.b)("br",null)),Object(r.b)("p",null,"The parameter &msg:"),Object(r.b)("p",null,"You can show a message in display"))))),Object(r.b)("h2",{id:"how-to-use"},"How to use"),Object(r.b)("p",null,"There are two ways to make the scanner."),Object(r.b)("h3",{id:"with-scandit"},"With Scandit:"),Object(r.b)("p",null,'When we do a Scanner.readBarcode and we set on parameter characters "scandit:" with a String contains the scandit key and the camera be call and will capture the image and set on the label result. You will use like this:'),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},'scan = Scanner.readBarcode("scandit:" + YOUR_SCANDIT_KEY);')),Object(r.b)("h3",{id:"with-zxing"},"With ZXing:"),Object(r.b)("p",null,"In here, we have a little more work because we need find the barcode's mode, if is a 1D or 2D and just after that, we can write Scanner.readBarcode and set the mode and a message telling the user how scanner the barcode."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},'scan = Scanner.readBarcode("mode=" + mode + "&msg=" + msg);')),Object(r.b)("h2",{id:"references"},"References"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"See more in ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://rs.totalcross.com/doc/totalcross/io/device/scanner/package-summary.html"}),"Javadoc")),Object(r.b)("li",{parentName:"ul"},"See a project using scanner on ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/TotalCross/ScanditSample"}),"github"))))}void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/md/apis/barcode-scanner.md"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-md-apis-barcode-scanner-md-2295c211f8b0634039f0.js.map