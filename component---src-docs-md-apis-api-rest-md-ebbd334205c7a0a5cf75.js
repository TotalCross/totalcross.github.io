(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{mN0s:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return i})),n.d(t,"default",(function(){return b}));n("91GP"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("FlsD"),n("q1tI");var r=n("7ljp"),a=n("hhGP");n("qKvR");function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/md/apis/api-rest.md"}});var o={_frontmatter:i},l=a.a;function b(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(r.b)(l,s({},o,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"api-rest"},"API Rest"),Object(r.b)("h3",{id:"verbs"},"Verbs"),Object(r.b)("p",null,"HTTP verbs are the request methods we use along with the endpoints to access a particular api route."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",s({parentName:"tr"},{align:"left"}),"Endpoint"),Object(r.b)("th",s({parentName:"tr"},{align:"left"}),"Verbs"),Object(r.b)("th",s({parentName:"tr"},{align:"left"}),"Action"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",s({parentName:"tr"},{align:"left"}),"/get"),Object(r.b)("td",s({parentName:"tr"},{align:"left"}),"GET"),Object(r.b)("td",s({parentName:"tr"},{align:"left"}),"Retrieves new information")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",s({parentName:"tr"},{align:"left"}),"/post"),Object(r.b)("td",s({parentName:"tr"},{align:"left"}),"POST"),Object(r.b)("td",s({parentName:"tr"},{align:"left"}),"Create new information")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",s({parentName:"tr"},{align:"left"}),"/put"),Object(r.b)("td",s({parentName:"tr"},{align:"left"}),"PUT"),Object(r.b)("td",s({parentName:"tr"},{align:"left"}),"Change an information")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",s({parentName:"tr"},{align:"left"}),"/delete"),Object(r.b)("td",s({parentName:"tr"},{align:"left"}),"DELETE"),Object(r.b)("td",s({parentName:"tr"},{align:"left"}),"Delete information")))),Object(r.b)("h3",{id:"requisitions"},"Requisitions"),Object(r.b)("p",null,"One of the ways to make requests is to create ",Object(r.b)("strong",{parentName:"p"},"PressListener")," for Button, in the example below I will demonstrate how to get the response of the request in a variable and display in a Label"),Object(r.b)("pre",null,Object(r.b)("code",s({parentName:"pre"},{className:"language-java"}),'//String uri = Requisition URL\n//HttpMethod httpMethod = HTTP Verbs\n    PressListener getPressListener(final String url, String httpType) {\n        return (e) -> {\n            //msg variable will be responsible for storing the request response\n            String msg = "";\n\n            try {\n\n                HttpStream.Options options = new HttpStream.Options();\n                options.httpType = httpType;\n\n                HttpStream httpStream = new HttpStream(new URI(url), options);\n                ByteArrayStream bas = new ByteArrayStream(4096);\n                bas.readFully(httpStream, 10, 2048);\n                String data = new String(bas.getBuffer(), 0, bas.available());\n\n                Response<ResponseData> response = new Response<>();\n                response.responseCode = httpStream.responseCode;\n\n                if (httpStream.responseCode == 200){\n                        response.data = (JSONFactory.parse(data, ResponseData.class));\n\n                        //Accessing the answer and picking up the information.\n                        msg += "Url: " + response.data.getUrl() + "\\n";\n                        msg += "Origin: " + response.data.getOrigin();\n                }\n            } catch (IOException e1) {\n                    msg = "erro";\n            } catch (InstantiationException ex) {\n                ex.printStackTrace();\n            } catch (InvocationTargetException ex) {\n                ex.printStackTrace();\n            } catch (NoSuchMethodException ex) {\n                ex.printStackTrace();\n            } catch (IllegalAccessException ex) {\n                ex.printStackTrace();\n            }\n\n            lblResult.setText(msg);\n            lblResult.setRect(KEEP, KEEP, PREFERRED, PREFERRED);\n\n        };\n    }\n\n    public static class Response<T> {\n        public T data;\n        public int responseCode;\n    }\n\n')),Object(r.b)("p",null,"Creating the packet to receive the response in order to handle the data obtained from the request"),Object(r.b)("pre",null,Object(r.b)("code",s({parentName:"pre"},{className:"language-text"}),"└── src\n    └── main\n        └── java\n            └── com.your_company_name.your_name_app\n                .\n                .\n                .\n                └── ResponseData\n                    └── Args\n                    └── ResponseData\n")),Object(r.b)("p",null,"and now create the class to store the information"),Object(r.b)("pre",null,Object(r.b)("code",s({parentName:"pre"},{className:"language-java"}),"package com.totalcross.RestApi.ResponseData;\n\npublic class ResponseData {\n\n    Args args;\n    String origin;\n    String url;\n\n    public Args getArgs() {\n        return args;\n    }\n\n    public void setArgs(Args args) {\n        this.args = args;\n    }\n\n    public String getOrigin() {\n        return origin;\n    }\n\n    public void setOrigin(String origin) {\n        this.origin = origin;\n    }\n\n    public String getUrl() {\n        return url;\n    }\n\n    public void setUrl(String url) {\n        this.url = url;\n    }\n}\n\n\n")),Object(r.b)("pre",null,Object(r.b)("code",s({parentName:"pre"},{className:"language-java"}),"package com.totalcross.RestApi.ResponseData;\n\npublic class Args {\n\n    private String args;\n\n    public String getArgs() {\n        return args;\n    }\n\n    public void setArgs(String args) {\n        this.args = args;\n    }\n\n}\n\n\n")),Object(r.b)("p",null,"Now just put that pressListener on your button by changing only the endpoint and the verb, see the example below"),Object(r.b)("pre",null,Object(r.b)("code",s({parentName:"pre"},{className:"language-java"}),'@Override\n    public void initUI() {\n        String binUrl = "http://httpbin.org";\n\n        Button btnGet = new Button("GET");\n        btnGet.addPressListener(getPressListener(binUrl + "/get", HttpStream.GET));\n        add(btnGet, LEFT, AFTER, FILL, fmH * 3);\n\n        Button btnPost = new Button("POST");\n        btnPost.addPressListener(getPressListener(binUrl + "/post", HttpStream.POST));\n        add(btnPost, LEFT, AFTER, FILL, fmH * 3);\n\n        Button btnPut = new Button("PUT");\n        btnPut.addPressListener(getPressListener(binUrl + "/put", HttpStream.PUT));\n        add(btnPut, LEFT, AFTER, FILL, fmH * 3);\n\n        Button btnDelete = new Button("DELETE");\n        btnDelete.addPressListener(getPressListener(binUrl + "/delete", HttpStream.DELETE));\n        add(btnDelete, LEFT, AFTER, FILL, fmH * 3);\n\n\n        lblResult = new Label(" ");\n        add(lblResult, LEFT, AFTER);\n    }\n')),Object(r.b)("h3",{id:"references"},"References"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"See the complete API code remainder with TotalCross in ",Object(r.b)("a",s({parentName:"li"},{href:"https://github.com/TotalCross/ApiSample"}),"GitHub"),".")))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/md/apis/api-rest.md"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-md-apis-api-rest-md-ebbd334205c7a0a5cf75.js.map