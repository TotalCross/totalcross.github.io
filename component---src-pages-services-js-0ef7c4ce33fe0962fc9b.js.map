{"version":3,"sources":["webpack:///./src/components/hero-center.js","webpack:///./src/components/text-block.js","webpack:///./src/components/image-block.js","webpack:///./src/components/banner-1column.js","webpack:///./src/pages/services.js","webpack:///./src/components/banner-2columns.js"],"names":["Hero","styled","div","BGContainer","BackgroundImage","TextBlock","Title","h1","Tagline","p","HeroBlock","title","tagline","HeroCenter","bgImg","Tag","fluid","TextContainer","BtContainer","h3","Text","img","caption","text","btText","btRef","btColor","map","paragraph","link","color","ImageContainer","ImageContainer2","ImageInnerContainer","Img","h4","Caption","ImageBlock","fixed","alt","h2","Subtitle","Space","SubContainer","Container","ButtonContainer","Banner","subtitle","space","LightBanner","DarkBanner","Banner1C","theme","Services","data","useStaticQuery","description","bg","childImageSharp","CONTACT","spaces","props","Banner2C"],"mappings":"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","file":"component---src-pages-services-js-0ef7c4ce33fe0962fc9b.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport BackgroundImage from \"gatsby-background-image\"\n\nconst Hero = styled.div`\ndisplay: flex;\nalign-items: center;\nheight: 414px;\nmax-width: 680px;\ntext-align: center;\ncolor: #ffffff;\njustify-content: center;\n\n@media only screen and (max-width: 1000px) {\n    flex-direction: column;\n}\n\n@media only screen and (max-width: 600px) {\n  height: 400px;\n  width: 100%;\n}\n`\nconst BGContainer = styled(BackgroundImage)`\ndisplay: flex;\nalign-items: center;\nheight: 414px;\nbackground-position: center top;\nbackground-repeat: no-repeat;\nbackground-size: cover;\nbackground-color: #212121;\ntext-align: center;\ncolor: #ffffff;\njustify-content: center;\n\n@media only screen and (max-width: 1000px) {\n    flex-direction: column;\n}\n\n@media only screen and (max-width: 600px) {\n  height: 400px;\n  width: 100%;\n}\n`\n\nconst TextBlock = styled.div`\nwidth: 100%;\nmargin-left: 60px;\nmargin-right: 60px;\ntext-align: center;\n\n@media only screen and (max-width: 1000px) {\n    width: 100vw;\n    margin-left: 0px;\n    margin-right: 0px;\n}\n`\n\nconst Title = styled.h1`\nfont: 800 46px/60px \"Poppins\", sans-serif;\nmargin: 0 auto 50px;\ncolor: #c62f2e;\n\n@media only screen and (max-width: 1000px) {\n    padding-top: 250px;\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 800 36px/40px \"Poppins\", sans-serif;\n    margin: 20px auto 20px;\n    width: 90%;\n    padding-top: 50px;\n}\n`\nconst Tagline = styled.p`\nfont: 500 17px/28px \"Poppins\", sans-serif;\nfont-weight: 300;\ncolor: #8f8f8f;\nmargin: 0 auto 20px;\n\n@media only screen and (max-width: 1000px) {\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 300 16px/20px \"Poppins\", sans-serif;\n    font-weight: 300;\n    width: 90%;\n    margin: 0 auto 20px;\n}\n`\n\n\nconst HeroBlock = (title, tagline) => {\n    return (\n        <Hero>\n            <TextBlock>\n                <Title>\n                    {title}\n                </Title>\n                <Tagline>\n                    {tagline}\n                </Tagline>\n            </TextBlock>\n        </Hero>\n    )\n}\n\nfunction HeroCenter({ title, tagline=null, bgImg=null} ) {\n    if (bgImg === null) {\n        return (HeroBlock(title, tagline))\n    }\n    else {\n        return (\n            <BGContainer\n                Tag=\"section\"\n                fluid={bgImg}\n            > \n                {HeroBlock(title, tagline)}\n            </BGContainer>\n        )\n    }\n}\n\nexport default HeroCenter\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Button from \"./button\"\nimport ImageBlock from \"../components/image-block\"\n\nconst TextContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\ntext-align: left;\nmargin: auto 20px;\n`\n\nconst BtContainer = styled.div`\ndisplay: flex;\ntext-align: center;\n`\n\nconst Title = styled.h3`\ncolor: #c62f2e;\n`\n\nconst Text = styled.p`\nfont-family: \"Poppins\", sans-serif;\n`\n\nconst TextBlock = ({ img=null, caption=null, title=null, text=null, btText=null, btRef=null, btColor='green' }) => {\n    return (\n        <TextContainer>\n            { title !== null && <Title>{title}</Title>}\n            { img !== null && <ImageBlock \n                img={img} \n                caption={caption} \n                /> }\n            { text !== null && text.map(paragraph => (\n                <Text>{paragraph}</Text>\n            ))}\n            { btText !== null && <BtContainer><Button text={btText} link={btRef} color={btColor}/> </BtContainer>}\n        </TextContainer>\n    )\n}\n\nexport default TextBlock;","import React from \"react\";\nimport styled from \"styled-components\"\nimport Img from \"gatsby-image\";\n\nconst ImageContainer = styled.div`\nflex-grow: 1 1;\nflex-direction: column;\n`\nconst ImageContainer2 = styled.div`\nflex-grow: 1;\nflex-direction: column;\n`\n\nconst ImageInnerContainer = styled(Img)`\njustify-content: flex-start;\ndisplay: block;\n`\nconst Title = styled.h4`\ncolor: #656565;\nmargin-bottom: 0;\n`\nconst Text = styled.p`\ncolor: #656565;\n`\nconst Caption = styled(Text)`\ntext-transform: uppercase;\n`\n\nconst ImageBlock = ({ img, caption=null, title=null, text=null, fixed=true }) => {\n    if (fixed) {\n    return (\n        <ImageContainer>\n            { title && <Title>{title}</Title>}\n            <ImageInnerContainer fixed={img} alt={caption}/>\n            { caption && <Caption>{caption}</Caption> } \n            { text && <Text>{text}</Text>}\n        </ImageContainer>\n    )} else {\n        return (\n            <ImageContainer2>\n                { title && <Title>{title}</Title>}\n                <ImageInnerContainer fluid={img} alt={caption}/>\n                { caption && <Caption>{caption}</Caption> } \n                { text && <Text>{text}</Text>}\n            </ImageContainer2>\n        )\n    }\n}\n\nexport default ImageBlock;","import React from \"react\";\nimport styled from \"styled-components\"\nimport Button from \"./button\";\n\nconst Title = styled.h2`\ndisplay: block;\nfont: 600 30px/38px \"Poppins\", sans-serif;\nmargin: 80px auto 50px;\ncolor: #c62f2e;\ntext-align: center;\nwidth: 50%;\n\n@media only screen and (max-width: 1000px) {\n    padding-top: 250px;\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 600 36px/40px \"Poppins\", sans-serif;\n    margin: 0 auto;\n    width: 90%;\n    padding-top: 50px;\n    padding-bottom: 50px;\n}\n`\nconst Subtitle = styled.h3`\nfont: 500 17px/28px \"Poppins\", sans-serif;\nfont-weight: 300;\ncolor: #8f8f8f;\nmargin: 0 auto 20px;\ntext-align: center;\nwidth: 70%;\n\n@media only screen and (max-width: 1000px) {\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 300 16px/20px \"Poppins\", sans-serif;\n    font-weight: 300;\n    width: 90%;\n    margin: 0 auto 20px;\n}\n`\n\nconst Space = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: stretch;\nflex-wrap: wrap;\nmargin: 0 auto;\n@media only screen and (max-width: 600px) {\n    flex-wrap: wrap;\n    width: 98%;\n}\n`\nconst SubContainer = styled.div`\ndisplay: flex;\npadding: 20px;\n@media only screen and (min-width: 1000px) {\n    max-width: 1300px;\n    margin: 0 auto;\n}\n`\nconst Container = styled.div`\njustify-content: center;\nborder: solid transparent;\npadding: 60px 0;\n`\n\nconst ButtonContainer = styled.div`\ndisplay: flex;\njustify-content: center;\n`\n\nconst Banner = (title, subtitle, space, btText, btRef, btColor) => {\n    return (\n        <Container>\n            {title && <Title>{title}</Title>}\n            {subtitle && <Subtitle>{subtitle}</Subtitle>}\n            {space && <SubContainer>\n                <Space>{space}</Space>\n                </SubContainer>\n                }\n            { btText !== null && <ButtonContainer>\n                <Button link={btRef} text={btText} color={btColor}/> \n                </ButtonContainer>\n                }\n        </Container>\n    )\n}\n\nconst LightBanner = styled.div`\nbackground-color: #EFEFEF;\ncolor:#212121;\nborder: solid rgba(0, 0, 0, 0);\n`\n\nconst DarkBanner = styled.div`\nbackground-color: #212121;\ncolor: #EFEFEF;\n`\n\nfunction Banner1C({ title=null, subtitle=null, space=null, btText=null, btRef=null, theme=\"light\", btColor=\"green\"} ) {\n    if (theme === \"light\") {\n        return (\n            <LightBanner>\n                {Banner(title, subtitle, space, btText, btRef, btColor)}\n                \n            </LightBanner>\n            )\n    }\n    else {\n        return (\n            <DarkBanner>\n                {Banner(title, subtitle, space, btText, btRef, btColor)}\n            </DarkBanner>\n            )\n    }\n}\n\nexport default Banner1C;\n","import React from 'react'\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport HeroCenter from '../components/hero-center'\nimport Banner2C from '../components/banner-2columns'\nimport TextBlock from '../components/text-block'\nimport Banner1C from '../components/banner-1column'\nimport { CONTACT } from '../links'\n\nconst Services = () => {\n    const data = useStaticQuery(graphql`\n    query {\n      bg: file(name: { eq: \"bg_wavesdark\" }, extension: { eq: \"png\" }) {\n        childImageSharp {\n          fluid(quality: 100, maxWidth: 1920) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n    return (\n        <Layout>\n            <SEO title=\"TotalCross · GUI Creator For Embedded, Mobile... Everything!\"\n            description='Build beautiful and modern Graphical User Interfaces for embedded, IoT, mobile and desktop. A cross-platform tool that lets you develop apps in Java.'/>\n            <HeroCenter \n            title=\"Our Services\"\n            tagline=\"Needing extra hands? You can count on us!\"\n            bgImg={data.bg.childImageSharp.fluid}/>\n            <Banner1C \n            title='Support for TotalCross framework'\n            subtitle=\"Keeping your application's footprint as low as possible is important to ensure a better performance. That's what we do: TotalCross runtime is currently at 5MB to bring mobile grade user experience even for low-end MPUs.\"\n            theme='light'\n            space={[\n                <TextBlock\n                    text={[\"You can find a lot of content on TotalCross’s Community. But, if you prefer having a high level of support, our team can help you.\",\n                    \"Our enterprise support is ready to solve any problem, demand and jobs you require. Please, contact us to discover more about it.\"\n                    ]}\n                />]}\n            btText='I want this support'\n            btRef={CONTACT}\n            btColor=\"black\"\n            />\n            <Banner2C \n            title=\"GUI Creation\"\n            spaces={[\n                <TextBlock\n                title=\"Do you want us to code your GUI?\"\n                text={[\n                  \"As you know, coding GUI is really time consuming.. and our engineers are able to build it for you in a record time.\",\n                  \"If you want to know more about this offer, send us a Request for a Quotation!\"\n                ]}\n                btText=\"Request for Quotation\"\n                btRef={CONTACT}\n                btColor=\"black\"  />,\n                <TextBlock\n                title=\"Design the graphical user interface\"\n                text={[\n                  \"If your need is to design the user interface of your application, we can also help you. The embedded systems market is requiring an authentic interface and the users deserve to have an awesome experience.\", \n                  'Our designers bring a \"mobile like\" UI/UX for your embedded project.'\n                ]}\n                btText=\"Request for Quotation\"\n                btRef={CONTACT}\n                btColor=\"black\" />\n            ]}\n            />\n            {/* <GoToGitHub /> */}\n            <Banner1C \n            title='Needing another kind of service?'\n            subtitle=\"If you haven't found what you are looking for, let us know. We'll be glad to help you or refer you to one of our partners.\"\n            theme='dark'\n            btText='I want another support '\n            btRef={CONTACT}\n            btColor=\"white\"\n            />\n            \n            {/* <GetStartedBanner /> */}\n        </Layout>\n\n    )\n}\n\nexport default Services","import React from \"react\";\nimport styled from \"styled-components\"\nimport BackgroundImage from \"gatsby-background-image\";\nimport Button from \"./button\";\n\nconst BGContainer = styled(BackgroundImage)`\ndisplay: flex;\nalign-items: center;\nheight: 614px;\nbackground-position: center top;\nbackground-repeat: no-repeat;\nbackground-size: cover;\nbackground-color: #EFEFEF;\ntext-align: center;\ncolor: #ffffff;\njustify-content: center;\nfont-family: \"Poppins\", sans-serif;\npadding-bottom: 60px;\n\n@media only screen and (max-width: 1000px) {\n    flex-direction: column;\n}\n\n@media only screen and (max-width: 600px) {\n  height: 600px;\n  width: 100%;\n}\n`\n\nconst Title = styled.h2`\ndisplay: block;\nfont: 600 30px/38px \"Poppins\", sans-serif;\nmargin: 80px auto 10px;\ncolor: ${(props) => {return (props.theme === \"dark\" ? \"#fff\" : \"#c62f2e\")}};\ntext-align: center;\nmax-width: 600px;\n\n@media only screen and (max-width: 1000px) {\n    padding-top: 250px;\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 800 36px/40px \"Poppins\", sans-serif;\n    margin: 50px auto 20px;\n    width: 90%;\n    padding-top: 50px;\n}\n`\nconst Subtitle = styled.h3`\nfont: 500 17px/28px \"Poppins\", sans-serif;\nfont-weight: 300;\ncolor: #8f8f8f;\nmargin: 0 auto 20px;\ntext-align: center;\nmax-width: 680px;\n\n@media only screen and (max-width: 1000px) {\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 300 16px/20px \"Poppins\", sans-serif;\n    font-weight: 300;\n    width: 90%;\n    margin: 0 auto 20px;\n}\n`\n\nconst Space = styled.div`\ndisplay: flex;\nwidth: 50%;\npadding: 0 100px;\n@media only screen and (max-width: 600px) {\n    width: 90%;\n    padding: 0;\n}\n`\nconst SubContainer = styled.div`\ndisplay: flex;\npadding: 20px;\nwidth: 80%;\nmargin: 0 auto;\n@media only screen and (max-width: 600px) {\n    flex-wrap: wrap;\n    width: 95%;\n}\n`\n\nconst BtContainer = styled.div`\ndisplay: flex;\njustify-content: center;\npadding: 20px 0;\n`\n\nconst Banner = (title, subtitle, spaces, btText, btRef, btColor, theme) => {\n    return (\n        <div>\n            {title && <Title theme={theme}>{title}</Title>}\n            {subtitle && <Subtitle>{subtitle}</Subtitle>}\n            <SubContainer>\n                <Space>{spaces[0]}</Space>\n                <Space>{spaces[1]}</Space>\n            </SubContainer>\n            { btText !== null && (<BtContainer><Button link={btRef} text={btText} color={btColor}/></BtContainer>) }\n        </div>\n    )\n}\n\nconst LightBanner = styled.div`\nbackground-color: #EFEFEF;\ncolor:#212121;\nborder: solid rgba(0, 0, 0, 0);\npadding-bottom: 60px;\n`\n\nconst DarkBanner = styled.div`\nbackground-color: #212121;\ncolor: #EFEFEF;\npadding-bottom: 60px;\nh2, h3, h4, h5, h6 {\n    color: #EFEFEF;\n}\n`\n\nfunction Banner2C({ title=null, subtitle=null, spaces, btText=null, btRef=null, theme=\"light\", bgImg=null, btColor='green'} ) {\n    if (bgImg != null) {\n        return (\n            <BGContainer\n                Tag=\"section\"\n                fluid={bgImg}\n            > \n                {Banner(title, subtitle, spaces, btText, btRef, btColor, \"dark\")}\n            </BGContainer>\n        )\n    }\n    else if (theme === \"light\") {\n            return (\n            <LightBanner>\n                {Banner(title, subtitle, spaces, btText, btRef, btColor)}\n            </LightBanner>\n            )\n    }\n    else {\n        return (\n            <DarkBanner>\n                {Banner(title, subtitle, spaces, btText, btRef, \"dark\")}\n            </DarkBanner>\n            )\n    }\n}\n\nexport default Banner2C;\n"],"sourceRoot":""}