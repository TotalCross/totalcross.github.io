{"version":3,"sources":["webpack:///./src/docs/md/.gitbook/assets/7-1.gif","webpack:///./src/docs/md/.gitbook/assets/5-1.gif","webpack:///./src/docs/md/.gitbook/assets/6-1.gif","webpack:///./src/docs/md/.gitbook/assets/9-1.gif","webpack:///./src/docs/md/.gitbook/assets/8-1.gif","webpack:///./src/docs/md/guides/understanding-totalcross-for-linux-arm.md","webpack:///./src/docs/md/.gitbook/assets/understanding_linux_arm.png","webpack:///./src/docs/md/.gitbook/assets/video.gif","webpack:///./src/docs/md/.gitbook/assets/3-1.gif","webpack:///./src/docs/md/.gitbook/assets/gpiotutorial.jpg","webpack:///./src/docs/md/.gitbook/assets/img3-1.jpeg","webpack:///./src/docs/md/.gitbook/assets/4-1.gif"],"names":["module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","alt","src","require","isMDXComponent"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,mD,uBCA3CD,EAAOC,QAAU,IAA0B,mD,qBCA3CD,EAAOC,QAAU,IAA0B,mD,qBCA3CD,EAAOC,QAAU,IAA0B,mD,uBCA3CD,EAAOC,QAAU,IAA0B,mD,8LCM9BC,G,UAAe,S,8OAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,0CADR,0CAGA,kEACA,iBAAQ,CACN,GAAM,gBADR,gBAGA,2CACA,sBACE,kBAAIC,WAAW,MAAf,gCACA,kBAAIA,WAAW,MAAf,wCACA,kBAAIA,WAAW,MAAf,kBACA,kBAAIA,WAAW,MAAf,kBAEF,iBAAQ,CACN,GAAM,gBADR,gBAGA,sDAIA,+EACA,sBACE,kBAAIA,WAAW,MAAf,mBACA,kBAAIA,WAAW,MAAf,2BACA,kBAAIA,WAAW,MAAf,eACA,kBAAIA,WAAW,MAAf,0DACA,kBAAIA,WAAW,MAAf,4DAEF,4OACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,0CAIL,iBAAQ,CACN,GAAM,SACL,sBAAQA,WAAW,MAAnB,UACH,iBAAQ,CACN,GAAM,2BADR,2BAGA,gFAA+D,6BAAGA,WAAW,KAAQ,CACjF,KAAQ,yEADmD,oCAA/D,KAGA,qBAAG,sBAAQA,WAAW,KAAnB,WAAH,mGACA,qBAAG,mBAAKC,IAAI,WAAWC,IAAKC,EAAQ,WACpC,qBAAG,sBAAQH,WAAW,KAAnB,WAAH,WAA0D,kBAAIA,WAAW,KAAf,oCAC1D,qBAAG,sBAAQA,WAAW,KAAnB,WAAH,2BAA0E,kBAAIA,WAAW,KAAf,cAA1E,mBACA,qBAAG,sBAAQA,WAAW,KAAnB,WAAH,IAAmD,kBAAIA,WAAW,KAAf,WAAnD,YAAmG,0BAAYA,WAAW,KAAvB,kBAAnG,KACA,qBAAG,sBAAQA,WAAW,KAAnB,WAAH,IAAmD,kBAAIA,WAAW,KAAf,cAAnD,YAAsG,0BAAYA,WAAW,KAAvB,cAAsD,kBAAIA,WAAW,KAAf,MAC5J,qBAAG,sBAAQA,WAAW,KAAnB,WAAH,oDAAmG,0BAAYA,WAAW,KAAvB,cAAnG,cACA,qBAAG,mBAAKC,IAAI,kBAAkBC,IAAKC,EAAQ,WAC3C,qBAAG,sBAAQH,WAAW,KAAnB,WAAH,QAAuD,0BAAYA,WAAW,KAAvB,iCAAvD,cAA+I,kBAAIA,WAAW,KAAf,OAA/I,6CACA,qBAAG,mBAAKC,IAAI,mBAAmBC,IAAKC,EAAQ,WAC5C,qBAAG,sBAAQH,WAAW,KAAnB,WAAH,oCACA,iBAAQ,CACN,GAAM,qDADR,uDAGA,uIACA,qBAAG,mBAAKC,IAAI,eAAeC,IAAKC,EAAQ,WACxC,qBAAG,sBAAQH,WAAW,KAAnB,WAAH,0BACA,qBAAG,mBAAKC,IAAI,0BAA0BC,IAAKC,EAAQ,WACnD,qBAAG,sBAAQH,WAAW,KAAnB,WAAH,iCAAgF,0BAAYA,WAAW,KAAvB,gDAAhF,SACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,mQAYL,kGAIA,qBAAG,sBAAQA,WAAW,KAAnB,WAAH,OAAsD,kBAAIA,WAAW,KAAf,mBAAtD,OAAyG,0BAAYA,WAAW,KAAvB,YAAzG,cACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,+NAOL,qBAAG,sBAAQA,WAAW,KAAnB,WAAH,uBACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,gOASL,qBAAG,sBAAQA,WAAW,KAAnB,WAAH,gBACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,8OASL,qBAAG,sBAAQA,WAAW,KAAnB,WAAH,oBACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,yxCAqBL,qBAAG,sBAAQA,WAAW,KAAnB,WAAH,2BACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,kqCA4BL,qBAAG,sBAAQA,WAAW,KAAnB,WAAH,oEACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,qiBAqBL,qBAAG,sBAAQA,WAAW,KAAnB,WAAH,QAAuD,kBAAIA,WAAW,KAAf,iCAAvD,iCACA,qBAAG,mBAAKC,IAAI,WAAWC,IAAKC,EAAQ,WACpC,iEACc,6BAAGH,WAAW,KAAQ,CAChC,KAAQ,qEADE,QADd,mBAKA,iBAAQ,CACN,GAAM,iBADR,iBAGA,qBAAG,sBAAQA,WAAW,KAAnB,WAAH,mEAAsH,kBAAIA,WAAW,KAAf,uBACtH,qBAAG,mBAAKC,IAAI,WAAWC,IAAKC,EAAQ,WACpC,qBAAG,sBAAQH,WAAW,KAAnB,WAAH,8EACA,qBAAG,mBAAKC,IAAI,YAAYC,IAAKC,EAAQ,WACrC,qBAAG,sBAAQH,WAAW,KAAnB,WAAH,qCACA,qBAAG,mBAAKC,IAAI,WAAWC,IAAKC,EAAQ,WACpC,iBAAQ,CACN,GAAM,gBADR,gBAGA,sIAAqH,6BAAGH,WAAW,KAAQ,CACvI,KAAQ,2CADyG,YAArH,wFAGA,qBAAG,mBAAKC,IAAI,QAAQC,IAAKC,EAAQ,WACjC,iBAAQ,CACN,GAAM,YADR,YAGA,gGAA+E,6BAAGH,WAAW,KAAQ,CACjG,KAAQ,sCADmE,YAA/E,KAGA,qBAAG,mBAAKC,IAAI,yDAAyDC,IAAKC,EAAQ,WAClF,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIH,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,+BADQ,qB,4OAQ1BJ,EAAWQ,gBAAiB,G,qBCrP5Bd,EAAOC,QAAU,IAA0B,uE,qBCA3CD,EAAOC,QAAU,IAA0B,qD,qBCA3CD,EAAOC,QAAU,IAA0B,mD,qBCA3CD,EAAOC,QAAU,IAA0B,4D,qBCA3CD,EAAOC,QAAU,IAA0B,uD,qBCA3CD,EAAOC,QAAU,IAA0B","file":"component---src-docs-md-guides-understanding-totalcross-for-linux-arm-md-278a7ba718545669f0d4.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/7-1-d765d9bbc00b20cae6484052c3912f3a.gif\";","module.exports = __webpack_public_path__ + \"static/5-1-da828601e43c4016494bd63eccbab85c.gif\";","module.exports = __webpack_public_path__ + \"static/6-1-56e3062074c8c40acf00408978053b41.gif\";","module.exports = __webpack_public_path__ + \"static/9-1-006d548ae1c2192ab4bab119b61c4ea7.gif\";","module.exports = __webpack_public_path__ + \"static/8-1-1d48c2dd28ce603f5a98287412b1900b.gif\";","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/nrisbakk/Projects/newTC/totalcross-github-io/totalcross.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"understanding-totalcross-for-linux-arm\"\n    }}>{`Understanding TotalCross for Linux ARM`}</h1>\n    <p>{`TotalCross now supports embedded systems!`}</p>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`See at this guide:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Discover plugin for VS Code;`}</li>\n      <li parentName=\"ul\">{`Getting your Hello World App cooler;`}</li>\n      <li parentName=\"ul\">{`How to deploy;`}</li>\n      <li parentName=\"ul\">{`After basics;`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"requirements\"\n    }}>{`Requirements`}</h2>\n    <p>{`Complete the Getting Started.`}</p>\n    {\n      /* {% page-ref page=\"../get-started/\" %} */\n    }\n    <p>{`The following electronic components are also required:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Raspberry Pi 3;`}</li>\n      <li parentName=\"ul\">{`7x jumpers male-female;`}</li>\n      <li parentName=\"ul\">{`Protoboard;`}</li>\n      <li parentName=\"ul\">{`LED RGB module `}{`(`}{`or common 4 pins LED RGB`}{`)`}{`;`}</li>\n      <li parentName=\"ul\">{`Push-button module `}{`(`}{`or common push-button`}{`)`}{`.`}</li>\n    </ul>\n    <p>{`In order to execute Gpiod methods at your embedded device, you will also need to have the libgpiod-dev package installed in your board. You can do that by entering the following command at the device's terminal:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`$ sudo apt-get install libgpiod-dev\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"guide\"\n    }}><strong parentName=\"h2\">{`Guide`}</strong></h2>\n    <h3 {...{\n      \"id\": \"discover-vs-code-plugin\"\n    }}>{`Discover VS Code plugin`}</h3>\n    <p>{`A quick way to start using TotalCross is installing the `}<a parentName=\"p\" {...{\n        \"href\": \"https://marketplace.visualstudio.com/items?itemName=Italo.totalcross\"\n      }}>{`TotalCross extension for VS Code`}</a>{`.`}</p>\n    <p><strong parentName=\"p\">{`Step 1:`}</strong>{` open VS Code console `}{`(`}{`CTRL + Shift + P`}{`)`}{` and type TotalCâ€¦ autocomplete should help!`}</p>\n    <p><img alt=\"image3-1\" src={require(\"../.gitbook/assets/3-1.gif\")} /></p>\n    <p><strong parentName=\"p\">{`Step 2:`}</strong>{` select `}<em parentName=\"p\">{`TotalCross: Create new Project;`}</em></p>\n    <p><strong parentName=\"p\">{`Step 3:`}</strong>{` create a folder called `}<em parentName=\"p\">{`HelloWorld`}</em>{` and select it;`}</p>\n    <p><strong parentName=\"p\">{`Step 4:`}</strong>{` `}<em parentName=\"p\">{`GroupId`}</em>{` will be `}<inlineCode parentName=\"p\">{`com.totalcross`}</inlineCode>{`;`}</p>\n    <p><strong parentName=\"p\">{`Step 5:`}</strong>{` `}<em parentName=\"p\">{`ArtifactId`}</em>{` will be `}<inlineCode parentName=\"p\">{`HelloWorld`}</inlineCode><em parentName=\"p\">{`;`}</em></p>\n    <p><strong parentName=\"p\">{`Step 6:`}</strong>{` select the latest version of TotalCross SDK and `}<inlineCode parentName=\"p\">{`-linux-arm`}</inlineCode>{` platform;`}</p>\n    <p><img alt=\"Click to expand\" src={require(\"../.gitbook/assets/4-1.gif\")} /></p>\n    <p><strong parentName=\"p\">{`Step 7:`}</strong>{` open`}<inlineCode parentName=\"p\">{`RunHelloWorldApplication.java`}</inlineCode>{` and click `}<em parentName=\"p\">{`Run`}</em>{` `}{`(`}{`IDE`}{`)`}{`. The result should be:`}</p>\n    <p><img alt=\"Click  to expand\" src={require(\"../.gitbook/assets/5-1.gif\")} /></p>\n    <p><strong parentName=\"p\">{`Step 8:`}</strong>{` watch the integrated simulator!`}</p>\n    <h3 {...{\n      \"id\": \"getting-your-hello-world-app-even-more-cooler-ðŸ¥¶-\"\n    }}>{`Getting your Hello World App even more Cooler ðŸ¥¶ ðŸ˜…`}</h3>\n    <p>{`The following project deals with the control of an RGB LED with user interface buttons and a pin reset button!`}</p>\n    <p><img alt=\"gpiotutorial\" src={require(\"../.gitbook/assets/gpiotutorial.jpg\")} /></p>\n    <p><strong parentName=\"p\">{`Step 1:`}</strong>{` follow the schematic:`}</p>\n    <p><img alt=\"understanding-linux-arm\" src={require(\"../.gitbook/assets/understanding_linux_arm.png\")} /></p>\n    <p><strong parentName=\"p\">{`Step 2:`}</strong>{` to work with pin logic after `}<inlineCode parentName=\"p\">{`public class HelloWorld extends MainWindow {`}</inlineCode>{` add:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`// Integers to store pin numbers\nprivate int    R = 4, G = 17, B = 27, pushButton = 18;\n// Integers to store state of each LED pin, 0 (LOW) and 1 (HIGH)\nprivate int    sttR, sttG, sttB;\n// Buttons to control colors\nprivate Button btnR, btnG, btnB;\n`}</code></pre>\n    {\n      /* {% hint style=\"danger\" %} */\n    }\n    <p>{`If you need to work with different pinouts check the manufacturer manual!`}</p>\n    {\n      /* {% endhint %} */\n    }\n    <p><strong parentName=\"p\">{`Step 3:`}</strong>{` at `}<em parentName=\"p\">{`HelloWorld.java`}</em>{` in `}<inlineCode parentName=\"p\">{`initUI()`}</inlineCode>{` code add:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`// Label helloWorld made on project creation\nLabel helloWorld = new Label(\"Hello World!\");\n// Change the position of label on the Y axis, with TOP (beginning of Y) + a fill of 20\nadd(helloWorld, CENTER, TOP + 20);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Step 4:`}</strong>{` then, board setup:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`// Board Setup\nGpiodChip gpioChip = GpiodChip.open(0);\nGpiodLine pinR = gpioChip.line(R);\nGpiodLine pinG = gpioChip.line(G);\nGpiodLine pinB = gpioChip.line(B);\nGpiodLine pinPushButton = gpioChip.line(pushButton);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Step 5:`}</strong>{` pins setup:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`// Set LED pins as outputs and default value sttX\npinR.requestOutput(\"CONSUMER\",sttR);\npinG.requestOutput(\"CONSUMER\",sttG);\npinB.requestOutput(\"CONSUMER\",sttB);\n// Set Reset pin as input\npinPushButton.requestInput(\"CONSUMER\");\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Step 6:`}</strong>{` the red button:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`// The TotalCross button:\nbtnR = new Button(\"R\");                                       // Button instantiation\n                                                              // without text\nbtnR.setBackColor(Color.RED);                                 // Set background color (red)\nbtnR.addPressListener(new PressListener() {                   // Press event listener\n    @Override\n    public void controlPressed(ControlEvent controlEvent) {\n        sttR = 1 - sttR;                                      // Invert pin state\n        pinR.setValue(sttR);                                  // Set value (HIGH or LOW)\n    }\n});\nadd(btnR, CENTER - 70, AFTER + 40);                           // To make horizontally aligned\n                                                              // buttons in the 'RGB' sequence,\n                                                              // take the center reference and\n                                                              // decrease 70 to place the\n                                                              // leftmost R. In the Y axis just\n                                                              // take the reference of the\n                                                              // previous component and add 40\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Step 7:`}</strong>{` and the other buttons:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`btnG = new Button(\"G\");\nbtnG.setBackColor(Color.GREEN);\nbtnG.addPressListener(new PressListener() {\n    @Override\n    public void controlPressed(ControlEvent controlEvent) {\n        sttG = 1 - sttG;                                      // Pay attention to change pin!!!\n        pinG.setValue(sttG);\n    }\n});\nadd(btnG, CENTER, SAME);                                      // The green button will be\n                                                              // placed at the center and in\n                                                              // the same line of previous\n                                                              // button\n\nbtnB = new Button(\"B\");\nbtnB.setBackColor(Color.BLUE);\nbtnB.addPressListener(new PressListener() {\n    @Override\n    public void controlPressed(ControlEvent controlEvent) {\n        sttB = 1 - sttB;                                       // Pay attention to change pin!!!\n        pinB.setValue(sttB);\n    }\n});\nadd(btnB, CENTER + 70, SAME);                                  // The last button will be placed\n                                                               // to the right of the center.\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Step 8:`}</strong>{` finally we use a thread to check the state of the reset button:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`// A thread will be used to check every 20 ms, if the reset button has been pressed: if yes then\n// the pin state goes to LOW\nnew Thread() {\n    @Override\n    public void run() {\n        while(true){\n            if(pinPushButton.getValue() == 1) {\n                sttG = 1 - sttG;\n                sttR = 1 - sttR;\n                sttB = 1 - sttB;\n                pinR.setValue(sttR);\n                pinG.setValue(sttG);\n                pinB.setValue(sttB);\n            }\n            Vm.sleep(100);\n        }\n    }\n}.start();\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Step 9:`}</strong>{` run `}<em parentName=\"p\">{`RunHelloWorldApplication.java`}</em>{` again and watch the results!`}</p>\n    <p><img alt=\"image6-1\" src={require(\"../.gitbook/assets/6-1.gif\")} /></p>\n    <p>{`{% hint style=\"info\" %}\nView fully code `}<a parentName=\"p\" {...{\n        \"href\": \"https://gist.github.com/acmlira/e6c18f0a82688f750c1648af4d101344\"\n      }}>{`here`}</a>{`\n{% endhint %}`}</p>\n    <h3 {...{\n      \"id\": \"how-to-deploy\"\n    }}>{`How to deploy`}</h3>\n    <p><strong parentName=\"p\">{`Step 1:`}</strong>{` open VS Code console `}{`(`}{`CTRL + Shift + P`}{`)`}{` and select `}<em parentName=\"p\">{`TotalCross: Deploy`}</em></p>\n    <p><img alt=\"image7-1\" src={require(\"../.gitbook/assets/7-1.gif\")} /></p>\n    <p><strong parentName=\"p\">{`Step 2:`}</strong>{` a second dialog box will appear and just fill in the board's information:`}</p>\n    <p><img alt=\"imamge8-1\" src={require(\"../.gitbook/assets/8-1.gif\")} /></p>\n    <p><strong parentName=\"p\">{`Step 3:`}</strong>{` see the results in screen or VNC`}</p>\n    <p><img alt=\"image9-1\" src={require(\"../.gitbook/assets/9-1.gif\")} /></p>\n    <h3 {...{\n      \"id\": \"after-basics\"\n    }}>{`After basics`}</h3>\n    <p>{`This was the beginning of application development for TotalCross embedded systems, how about taking a look at `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/TotalCross/TCSample\"\n      }}>{`TCSample`}</a>{` and seeing all that can be done? See dashboard made especially for Web Summit 2019:`}</p>\n    <p><img alt=\"video\" src={require(\"../.gitbook/assets/video.gif\")} /></p>\n    <h2 {...{\n      \"id\": \"see-more\"\n    }}>{`See more`}</h2>\n    <p>{`Are you interested in development with embedded systems? Contact us via `}<a parentName=\"p\" {...{\n        \"href\": \"https://t.me/comunidadetotalcross\"\n      }}>{`Telegram`}</a>{`!`}</p>\n    <p><img alt=\"Bruno Muniz, Lucas Galvanini e Pedro Lyra no WebSummit\" src={require(\"../.gitbook/assets/img3-1.jpeg\")} /></p>\n    <h2 {...{\n      \"id\": \"references\"\n    }}>{`References`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://fritzing.org/home/\"\n        }}>{`Fritzing `}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = __webpack_public_path__ + \"static/understanding_linux_arm-6667c8f32c73367c7d7373012317a873.png\";","module.exports = __webpack_public_path__ + \"static/video-11e109dc3b988ab2128375cb372e4c92.gif\";","module.exports = __webpack_public_path__ + \"static/3-1-39574105d7599bac9b5e36f7cfb8bef1.gif\";","module.exports = __webpack_public_path__ + \"static/gpiotutorial-b0029afed7ea5b7138b2771b4189b31e.jpg\";","module.exports = __webpack_public_path__ + \"static/img3-1-77c14b5b876ce6dc184bab9ea5abb582.jpeg\";","module.exports = __webpack_public_path__ + \"static/4-1-acd55e83415b80ed40273e72bc355935.gif\";"],"sourceRoot":""}