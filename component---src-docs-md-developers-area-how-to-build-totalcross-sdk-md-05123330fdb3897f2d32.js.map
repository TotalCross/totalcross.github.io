{"version":3,"sources":["webpack:///./src/docs/md/developers-area/how-to-build-totalcross-sdk.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qfAMO,IAAMA,EAAe,Q,4OAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,+BADR,+BAGA,iEAIA,6DAA4C,kBAAIC,WAAW,MAA3D,KACF,0BAAYA,WAAW,KAAvB,sEAIE,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,wEAOL,sDAAqC,0BAAYA,WAAW,KAAvB,iBAArC,oBACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,yBAIL,uDAAsC,kBAAIA,WAAW,KAAf,UAAtC,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,sCAIL,uGACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,gbAyBL,oCAAmB,0BAAYA,WAAW,KAAvB,QAAnB,6DAAiI,0BAAYA,WAAW,KAAvB,QAAjI,6BACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,4D,0OAQTJ,EAAWK,gBAAiB","file":"component---src-docs-md-developers-area-how-to-build-totalcross-sdk-md-05123330fdb3897f2d32.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/nrisbakk/Projects/newTC/totalcross-github-io/totalcross.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"how-to-build-totalcross-sdk\"\n    }}>{`How to build TotalCross SDK`}</h1>\n    <p>{`After cloning the project you will have:`}</p>\n    {\n      /* {% hint style=\"success\" %} */\n    }\n    <p>{`To clone the project use the command:`}<br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`git clone https://github.com/TotalCross/totalcross.git TotalCross`}</inlineCode></p>\n    {\n      /* {% endhint %} */\n    }\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`TotalCross/\n├─ LitebaseSDK/\n├─ TotalCrossSDK/\n└─ TotalCrossVM/\n`}</code></pre>\n    <p>{`You will need to enter inside `}<inlineCode parentName=\"p\">{`TotalCrossSDK`}</inlineCode>{` folder, please:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`$ cd TotalCrossSDK\n`}</code></pre>\n    <p>{`The next step you need to call `}<em parentName=\"p\">{`Gradle`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`~/TotalCrossSDK$ ./gradlew dist\n`}</code></pre>\n    <p>{`If you don't have any package errors, your folder will be something like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`TotalCross\n├─ LitebaseSDK\n├─ TotalCrossSDK\n│    ├─ bin/\n│    ├─ build/\n│    ├─ dist/\n│    │    ├─vm/\n│    │    │    ├─ TCBase.tcz\n│    │    │    ├─ TCFont.tcz\n│    │    │    └─ TCUI.tcz\n│    │    └─totalcross-sdk.jar\n│    ├─ docs/\n│    ├─ etc/\n│    ├─ gradle/\n│    ├─ src/\n│    ├─ build.gradle\n│    ├─ build.xml\n│    ├─ gradlew\n│    ├─ gradlew.bat\n│    ├─ license.txt\n│    └─ proguard.txt\n└─ TotalCrossVM\n`}</code></pre>\n    <p>{`Look to the `}<inlineCode parentName=\"p\">{`dist`}</inlineCode>{` folder, if you have the same files you just need to copy `}<inlineCode parentName=\"p\">{`dist`}</inlineCode>{` to your valid SDK folder`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`~/TotalCrossSDK$ cp -r dist $PATH_TO_VALID_SDK/\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}