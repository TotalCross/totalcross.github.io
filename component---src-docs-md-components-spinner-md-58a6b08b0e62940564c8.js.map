{"version":3,"sources":["webpack:///./src/docs/md/components/spinner.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-docs-md-components-spinner-md-58a6b08b0e62940564c8.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/nrisbakk/Projects/newTC/totalcross-github-io/totalcross.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"spinner\"\n    }}>{`Spinner`}</h1>\n    <h3 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h3>\n    <p>{`Spinner is a control that shows an image indicating that something is running in the background. It has two styles: `}<strong parentName=\"p\">{`iPhone`}</strong>{` and `}<strong parentName=\"p\">{`Android`}</strong>{`.`}</p>\n    {\n      /* ![](https://totalcross.com/documentation/img/samples/spinner-sample.gif) */\n    }\n    <h3 {...{\n      \"id\": \"source-code\"\n    }}>{`Source Code`}</h3>\n    {\n      /* {% code title=\"SpinnerSample.java\" %} */\n    }\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`  //Spinner inside the Bar\nBar bar = new Bar (“text text”);\nadd(bar, LEFT, TOP, FILL, PREFERRED);\nbar.createSpinner(Color.WHITE);\nbar.startSpinner;\n\n  //Spinner inside the Loop\nSpinner spinner = new Spinner(Spinner.IPHONE);\nspinner.setForeColor(Color.WHITE);\nadd(spinner, CENTER, AFTER,, FONTSIZE + 200, FONTSIZE + 200);\n\nwhile (Vm.getTimeStamp()  < (Vm.getTimeStamp() + 5000))\n{\n    spinner.update();\n}\n\n  //Spinner inside the ProgressBox\nSpinner.spinnerType = Spinner.ANDROID;\nProgressBox pb = new ProgressBox(\"Alert!\", “msg”, null);\npb.setBackColor(Color.getRGB(12, 98, 200));\npb.popupNonBlocking();\n`}</code></pre>\n    {\n      /* {% endcode %} */\n    }\n    <h3 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`Constructor`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Spinner`}{`(`}{` `}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Creates a simple Spinner`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`Constructor`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Spinner`}{`(`}{`Image anim`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Creates a spinner from an animated GIF`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`Constructor`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Spinner`}{`(`}{`int type`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Creates a spinner of the given type`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`boolean`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`isRunning`}{`(`}{` `}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Returns if the spin is running`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`void`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`setImage`}{`(`}{`Image anim`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Changes the gif image of this Spinner`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`void`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`setType`}{`(`}{`int t`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Changes the Spinner to one of the predefined types`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`void`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`start`}{`(`}{` `}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Starts the spinning thread`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`void`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`stop`}{`(`}{` `}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Stops the spinning thread`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`void`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`update`}{`(`}{` `}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Updates the spinner; call this when using the spinner inside a loop`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"references\"\n    }}><strong parentName=\"h3\">{`References`}</strong></h3>\n    <ul>\n      <li parentName=\"ul\">{`See also our `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.youtube.com/watch?v=b19EB2gN80E\"\n        }}>{`quick tutorial video`}</a>{` showing how to use Spinner.`}</li>\n      <li parentName=\"ul\">{`See the `}<a parentName=\"li\" {...{\n          \"href\": \"https://rs.totalcross.com/doc/totalcross/ui/Spinner.html\"\n        }}>{`JavaDocs`}</a>{` for more information`}<strong parentName=\"li\">{`.`}</strong></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}