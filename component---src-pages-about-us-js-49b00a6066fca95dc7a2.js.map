{"version":3,"sources":["webpack:///./src/pages/about-us.js","webpack:///./src/components/text-block2.js","webpack:///./src/components/image-block.js","webpack:///./src/components/banner-1column.js"],"names":["Container","styled","div","ValuesContainer","ValuesInnerContainer","AboutUs","data","useStaticQuery","title","description","Tag","fluid","bg","childImageSharp","space","img","timeline","fixed","caption","mission","text","vision","values","TextContainer","BtContainer","Title","h3","Text","p","TextBlock2","btText","btRef","btColor","link","color","ImageContainer","ImageContainer2","ImageInnerContainer","Img","h4","Caption","ImageBlock","alt","h2","Subtitle","Space","SubContainer","ButtonContainer","Banner","subtitle","LightBanner","DarkBanner","Banner1C","theme"],"mappings":"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","file":"component---src-pages-about-us-js-49b00a6066fca95dc7a2.js","sourcesContent":["import React from \"react\"\nimport SEO from \"../components/seo\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport BackgroundImage from \"gatsby-background-image\"\nimport styled from \"styled-components\"\n\nimport Layout from \"../components/layout\"\nimport Banner1C from \"../components/banner-1column\"\nimport TextBlock2 from '../components/text-block2'\nimport ImageBlock from '../components/image-block'\n\nconst Container = styled.div`\nbackground-color: #efefef;\ntext-align: center;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n`\nconst ValuesContainer = styled(Container)`\nflex-direction: row;\n@media only screen and (max-width: 600px) {\n    flex-direction: column;\n  }\n`\nconst ValuesInnerContainer = styled.div`\nwidth: 33.33%;\nheight: 100%;\nalign-items: start;\n@media only screen and (max-width: 600px) {\n    width: 100%;\n  }\n`\nconst AboutUs = () =>  {\n  const data = useStaticQuery(graphql`\n    query {\n      bg: file(name: { eq: \"bg_wavesdark\" }, extension: { eq: \"png\" }) {\n        childImageSharp {\n          fluid(quality: 90, maxWidth: 1920) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      timeline: file(name: { eq: \"aboutus_timeline\" }, extension: { eq: \"png\" }) {\n        childImageSharp {\n          fluid(quality: 100, maxWidth: 939) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      timelinemob: file(name: { eq: \"aboutus_timeline_mobile\" }, extension: { eq: \"png\" }) {\n        childImageSharp {\n          fluid(quality: 100, maxWidth: 271) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      mission: file(name: { eq: \"aboutus_mission\" }, extension: { eq: \"png\" }) {\n        childImageSharp {\n          fixed(width: 125, height: 104) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      vision: file(name: { eq: \"aboutus_vision\" }, extension: { eq: \"png\" }) {\n        childImageSharp {\n          fixed(width: 125, height: 104) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      values: file(name: { eq: \"aboutus_values\" }, extension: { eq: \"png\" }) {\n        childImageSharp {\n          fixed(width: 125, height: 104) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <Layout>\n      <SEO\n        title=\"TotalCross Â· Our History\"\n        description=\"TotalCross is a global Startup helping developers and companies to create\n        beautiful applications, as a free and open source tool.\"\n      />\n      <BackgroundImage Tag=\"section\" fluid={data.bg.childImageSharp.fluid}>\n        <Container>\n            <Banner1C \n            title='Our History'\n            space={<ImageBlock\n                img={data.timeline.childImageSharp.fluid}\n                fixed={false}\n                caption=\"2007 TotalCross Lauch, 2017 Startup, 2019 TotalCross for Embedded, 2020 Open Source\"\n              />}\n            />\n            <Banner1C \n            space={<ValuesContainer>\n                <ValuesInnerContainer>\n\n            <TextBlock2\n        img={data.mission.childImageSharp.fixed} \n        title='Mission' \n        text={['To be the software development tool most loved by Embedded Developers.']} \n        />\n        </ValuesInnerContainer>\n        <ValuesInnerContainer>\n\n            <TextBlock2\n        img={data.vision.childImageSharp.fixed} \n        title='Vision' \n        text={['Software development made fast and easy for every device on the planet.']} \n        />\n        </ValuesInnerContainer>\n            <ValuesInnerContainer>\n\n            <TextBlock2\n        img={data.values.childImageSharp.fixed} \n        title='Values' \n        text={['Ownership, Driven by Details and Developers First.']} \n        />\n        </ValuesInnerContainer>\n            </ValuesContainer>}\n            />\n        </Container>\n      </BackgroundImage>\n    </Layout>\n  );\n}\n\nexport default AboutUs;\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Button from \"./button\"\nimport ImageBlock from \"../components/image-block\"\n\nconst TextContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: stretch;\nfont-family: \"Poppins\", sans-serif;\n`\nconst BtContainer = styled.div`\ndisplay: flex;\ntext-align: center;\n`\nconst Title = styled.h3`\ncolor: #161616;\nmargin-top: 1rem;\nmargin-bottom: 0.5rem;\n`\nconst Text = styled.p`\nfont-family: \"Poppins\", sans-serif;\n`\n\nconst TextBlock2 = ({ img, caption=null, title=null, text=\"hello\", btText=null, btRef=null, btColor='green' }) => {\n    return (\n        <TextContainer>\n            { img !== null && <ImageBlock \n                img={img} \n                caption={caption} \n                /> }\n            { title !== null && <Title>{title}</Title> }\n            { btText !== null && <BtContainer><Button \n                text={btText} \n                link={btRef} \n                color={btColor}\n                /></BtContainer> }\n                \n            <Text>{text}</Text>\n        </TextContainer>\n    )\n}\n\nexport default TextBlock2;","import React from \"react\";\nimport styled from \"styled-components\"\nimport Img from \"gatsby-image\";\n\nconst ImageContainer = styled.div`\nflex-grow: 1 1;\nflex-direction: column;\n`\nconst ImageContainer2 = styled.div`\nflex-grow: 1;\nflex-direction: column;\n`\n\nconst ImageInnerContainer = styled(Img)`\njustify-content: flex-start;\ndisplay: block;\n`\nconst Title = styled.h4`\ncolor: #656565;\nmargin-bottom: 0;\n`\nconst Text = styled.p`\ncolor: #656565;\n`\nconst Caption = styled(Text)`\ntext-transform: uppercase;\n`\n\nconst ImageBlock = ({ img, caption=null, title=null, text=null, fixed=true }) => {\n    if (fixed) {\n    return (\n        <ImageContainer>\n            { title && <Title>{title}</Title>}\n            <ImageInnerContainer fixed={img} alt={caption}/>\n            { caption && <Caption>{caption}</Caption> } \n            { text && <Text>{text}</Text>}\n        </ImageContainer>\n    )} else {\n        return (\n            <ImageContainer2>\n                { title && <Title>{title}</Title>}\n                <ImageInnerContainer fluid={img} alt={caption}/>\n                { caption && <Caption>{caption}</Caption> } \n                { text && <Text>{text}</Text>}\n            </ImageContainer2>\n        )\n    }\n}\n\nexport default ImageBlock;","import React from \"react\";\nimport styled from \"styled-components\"\nimport Button from \"./button\";\n\nconst Title = styled.h2`\ndisplay: block;\nfont: 600 30px/38px \"Poppins\", sans-serif;\nmargin: 80px auto 50px;\ncolor: #c62f2e;\ntext-align: center;\nwidth: 50%;\n\n@media only screen and (max-width: 1000px) {\n    padding-top: 250px;\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 600 36px/40px \"Poppins\", sans-serif;\n    margin: 0 auto;\n    width: 90%;\n    padding-top: 50px;\n    padding-bottom: 50px;\n}\n`\nconst Subtitle = styled.h3`\nfont: 500 17px/28px \"Poppins\", sans-serif;\nfont-weight: 300;\ncolor: #8f8f8f;\nmargin: 0 auto 20px;\ntext-align: center;\nwidth: 70%;\n\n@media only screen and (max-width: 1000px) {\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 300 16px/20px \"Poppins\", sans-serif;\n    font-weight: 300;\n    width: 90%;\n    margin: 0 auto 20px;\n}\n`\n\nconst Space = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: stretch;\nflex-wrap: wrap;\nmargin: 0 auto;\n@media only screen and (max-width: 600px) {\n    flex-wrap: wrap;\n    width: 98%;\n}\n`\nconst SubContainer = styled.div`\ndisplay: flex;\npadding: 20px;\n@media only screen and (min-width: 1000px) {\n    max-width: 1300px;\n    margin: 0 auto;\n}\n`\nconst Container = styled.div`\njustify-content: center;\nborder: solid transparent;\npadding: 60px 0;\n`\n\nconst ButtonContainer = styled.div`\ndisplay: flex;\njustify-content: center;\n`\n\nconst Banner = (title, subtitle, space, btText, btRef, btColor) => {\n    return (\n        <Container>\n            {title && <Title>{title}</Title>}\n            {subtitle && <Subtitle>{subtitle}</Subtitle>}\n            {space && <SubContainer>\n                <Space>{space}</Space>\n                </SubContainer>\n                }\n            { btText !== null && <ButtonContainer>\n                <Button link={btRef} text={btText} color={btColor}/> \n                </ButtonContainer>\n                }\n        </Container>\n    )\n}\n\nconst LightBanner = styled.div`\nbackground-color: #EFEFEF;\ncolor:#212121;\nborder: solid rgba(0, 0, 0, 0);\n`\n\nconst DarkBanner = styled.div`\nbackground-color: #212121;\ncolor: #EFEFEF;\n`\n\nfunction Banner1C({ title=null, subtitle=null, space=null, btText=null, btRef=null, theme=\"light\", btColor=\"green\"} ) {\n    if (theme === \"light\") {\n        return (\n            <LightBanner>\n                {Banner(title, subtitle, space, btText, btRef, btColor)}\n                \n            </LightBanner>\n            )\n    }\n    else {\n        return (\n            <DarkBanner>\n                {Banner(title, subtitle, space, btText, btRef, btColor)}\n            </DarkBanner>\n            )\n    }\n}\n\nexport default Banner1C;\n"],"sourceRoot":""}