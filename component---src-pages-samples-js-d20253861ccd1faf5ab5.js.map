{"version":3,"sources":["webpack:///./src/pages/samples.js","webpack:///./src/components/repeat-banners/get-started-banner.js","webpack:///./src/components/text-block2.js","webpack:///./src/components/hero-center.js","webpack:///./src/components/text-block.js","webpack:///./src/components/image-block.js","webpack:///./src/components/banner-1column.js","webpack:///./src/components/banner-2columns.js"],"names":["SamplesContainer","styled","div","InnerSampleContainer","Samples","data","useStaticQuery","TCSamples","items","img","printer","childImageSharp","fixed","btText","text","caption","break","corona","medical","dash","bad","map","sample","btRef","btColor","title","description","tagline","bgImg","bg3","fluid","banner","spaces","GET_STARTED","subtitle","space","GetStartedBanner","gsbanner","theme","TextContainer","BtContainer","Title","h3","Text","p","TextBlock2","link","color","Hero","BGContainer","BackgroundImage","TextBlock","h1","Tagline","HeroBlock","HeroCenter","Tag","paragraph","ImageContainer","ImageContainer2","ImageInnerContainer","Img","h4","Caption","ImageBlock","alt","h2","Subtitle","Space","SubContainer","Container","ButtonContainer","Banner","LightBanner","DarkBanner","Banner1C","props","Banner2C"],"mappings":"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","file":"component---src-pages-samples-js-d20253861ccd1faf5ab5.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport HeroCenter from \"../components/hero-center\"\nimport Banner1C from \"../components/banner-1column\"\nimport Banner2C from '../components/banner-2columns'\nimport TextBlock2 from '../components/text-block2'\nimport TextBlock from '../components/text-block'\nimport { GET_STARTED } from '../links'\nimport GetStartedBanner from \"../components/repeat-banners/get-started-banner\"\n\nconst SamplesContainer = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\nflex-direction: row;\njustify-content: center;\n`\nconst InnerSampleContainer = styled.div`\ndisplay: flex;\nwidth: 30%;\nmargin: 1% 1%;\n@media (max-width: 768px) {\n  width: 100%;\n}\n`\nconst Samples = () => {\n\n  const data = useStaticQuery(graphql`\n  query {\n    banner: file(name: { eq: \"sample_banner\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fluid(quality: 90, maxWidth: 1920) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    bg3: file(name: { eq: \"bg_waveslight\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fluid(quality: 90, maxWidth: 1920) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    printer: file(name: { eq: \"sample_printer\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fixed(width: 200) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    medical: file(name: { eq: \"sample_medicaldevice\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fixed(width: 200) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    home: file(name: { eq: \"sample_homeapp\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fixed(width: 200) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    dash: file(name: { eq: \"sample_dashboard\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fixed(width: 200) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    corona: file(name: { eq: \"sample_coronachart\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fixed(width: 200) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    break: file(name: { eq: \"sample_breakoutgame\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fixed(width: 200) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    bad: file(name: { eq: \"sample_badapple\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fixed(width: 200) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    gsbanner: file(name: { eq: \"home_gsbanner\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fluid(quality: 100, maxWidth: 820) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`);\n\n  const TCSamples = () => {\n    const items = [\n      {\n        img:data.printer.childImageSharp.fixed,\n        btText:'Printer',\n        text: \"Can a printer be smart? Yes, of course. With TotalCross you can build a good interface for a printer and improve its usability. Take a look at the code and see it running on an embedded device.\",\n        caption:'Design by: Deeploy.me'\n      },\n      {\n        img:data.break.childImageSharp.fixed,\n        caption: null,\n        btText:'Breakout Game',\n        text:'Are you a retro games enthusiast? Go back to the past with this recreation of the Breakout game, made with TotalCross. Play with our sample code on your embedded device.',\n      },\n      {\n        img:data.corona.childImageSharp.fixed,\n        caption: null,\n        btText:'Corona Virus Chart App',\n        text:\"You can create a Graphical User Interface (GUI) using a public covid-19 dtabase. That's what we did. Check out our sample code to access the covid-19 data on an interactive chart that runs on your embedded device.\",\n      },\n      {\n        img:data.medical.childImageSharp.fixed,\n        caption: null,\n        btText:'Medical Device',\n        text:'Transform the way you create GUI for your medical devices. Check out this sample made with TotalCross.',\n      },\n      {\n        img:data.dash.childImageSharp.fixed,\n        caption: null,\n        btText:'Dashboard',\n        text:'Enjoy the functionality of different components with this Dashboard sample. An app that includes many functions commonly used on embedded systems.',\n      },\n      {\n        img:data.bad.childImageSharp.fixed,\n        caption: null,\n        btText:'Bad Apple',\n        text: \"Run the Bad Apple animation on your Raspberry Pi or other embedded device. This app isn't a video file, but it is drawn frame by frame on the screen.\",\n      },\n      \n    ]\n    return (\n      <SamplesContainer>\n      {items.map((sample)=>(\n        <InnerSampleContainer>\n        <TextBlock2\n        img={sample.img}\n        caption={sample.caption} \n        text={sample.text} \n        btText={sample.btText}\n        btRef={sample.btRef}\n        btColor=\"black\"\n          />\n          </InnerSampleContainer>\n      ))}\n      </SamplesContainer>\n    )\n  } \n\n  return (\n    <Layout>\n      <SEO \n      title=\"TotalCross · GUI Creator For Embedded, Mobile... Everything!\"\n      description='Build beautiful and modern Graphical User Interfaces for embedded, IoT, mobile and desktop. A cross-platform tool that lets you develop apps in Java.' \n      />\n      <HeroCenter \n      title='Samples with TotalCross'\n      tagline='Here you can check some samples of embedded projects'\n      bgImg={data.bg3.childImageSharp.fluid}\n      />\n      <Banner2C\n        bgImg={data.banner.childImageSharp.fluid}\n        spaces={[\n      <TextBlock \n        text={[\"Let's build a smart home! Create a control app for your house using this sample application as start.\", \n        'The user interface will let you control temperature, security, alarms, internet connection, calendar and other things.']} \n        btText='Get the code' \n        btRef={GET_STARTED}\n      />,<></>\n      ]}/>\n      <Banner1C \n        title='Check more samples'\n        subtitle='Access our samples repository on GitHub and discover more applications!'\n        space={<TCSamples />}/>\n      <GetStartedBanner />\n    </Layout>\n  )\n}\n\nexport default Samples\n\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport ImageBlock from '../image-block'\nimport Banner2C from '../banner-2columns'\nimport TextBlock from '../text-block'\nimport { GET_STARTED } from '../../links'\n\nconst GetStartedBanner = () => {\n\n  const data = useStaticQuery(graphql`\n  query {\n    gsbanner: file(name: { eq: \"home_gsbanner\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fluid(quality: 100, maxWidth: 820) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`);\n\n  return (\n      <Banner2C \n      spaces={[\n        <ImageBlock \n        img={data.gsbanner.childImageSharp.fluid}\n        fixed={false}/>,\n        <TextBlock \n        title='Ready to get started?'\n        text={['Build your own GUI with TotalCross!']}\n        btText='Get Started'\n        btRef={GET_STARTED}\n        btColor=\"white\"\n        />\n      ]}\n      theme='dark'\n      /> \n  )\n}\n\nexport default GetStartedBanner","import React from \"react\"\nimport styled from \"styled-components\"\nimport Button from \"./button\"\nimport ImageBlock from \"../components/image-block\"\n\nconst TextContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: stretch;\nfont-family: \"Poppins\", sans-serif;\n`\nconst BtContainer = styled.div`\ndisplay: flex;\ntext-align: center;\n`\nconst Title = styled.h3`\ncolor: #161616;\nmargin-top: 1rem;\nmargin-bottom: 0.5rem;\n`\nconst Text = styled.p`\nfont-family: \"Poppins\", sans-serif;\n`\n\nconst TextBlock2 = ({ img, caption=null, title=null, text=\"hello\", btText=null, btRef=null, btColor='green' }) => {\n    return (\n        <TextContainer>\n            { img !== null && <ImageBlock \n                img={img} \n                caption={caption} \n                /> }\n            { title !== null && <Title>{title}</Title> }\n            { btText !== null && <BtContainer><Button \n                text={btText} \n                link={btRef} \n                color={btColor}\n                /></BtContainer> }\n                \n            <Text>{text}</Text>\n        </TextContainer>\n    )\n}\n\nexport default TextBlock2;","import React from \"react\"\nimport styled from \"styled-components\"\nimport BackgroundImage from \"gatsby-background-image\"\n\nconst Hero = styled.div`\ndisplay: flex;\nalign-items: center;\nheight: 414px;\nmax-width: 680px;\ntext-align: center;\ncolor: #ffffff;\njustify-content: center;\n\n@media only screen and (max-width: 1000px) {\n    flex-direction: column;\n}\n\n@media only screen and (max-width: 600px) {\n  height: 400px;\n  width: 100%;\n}\n`\nconst BGContainer = styled(BackgroundImage)`\ndisplay: flex;\nalign-items: center;\nheight: 414px;\nbackground-position: center top;\nbackground-repeat: no-repeat;\nbackground-size: cover;\nbackground-color: #212121;\ntext-align: center;\ncolor: #ffffff;\njustify-content: center;\n\n@media only screen and (max-width: 1000px) {\n    flex-direction: column;\n}\n\n@media only screen and (max-width: 600px) {\n  height: 400px;\n  width: 100%;\n}\n`\n\nconst TextBlock = styled.div`\nwidth: 100%;\nmargin-left: 60px;\nmargin-right: 60px;\ntext-align: center;\n\n@media only screen and (max-width: 1000px) {\n    width: 100vw;\n    margin-left: 0px;\n    margin-right: 0px;\n}\n`\n\nconst Title = styled.h1`\nfont: 800 46px/60px \"Poppins\", sans-serif;\nmargin: 0 auto 50px;\ncolor: #c62f2e;\n\n@media only screen and (max-width: 1000px) {\n    padding-top: 250px;\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 800 36px/40px \"Poppins\", sans-serif;\n    margin: 20px auto 20px;\n    width: 90%;\n    padding-top: 50px;\n}\n`\nconst Tagline = styled.p`\nfont: 500 17px/28px \"Poppins\", sans-serif;\nfont-weight: 300;\ncolor: #8f8f8f;\nmargin: 0 auto 20px;\n\n@media only screen and (max-width: 1000px) {\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 300 16px/20px \"Poppins\", sans-serif;\n    font-weight: 300;\n    width: 90%;\n    margin: 0 auto 20px;\n}\n`\n\n\nconst HeroBlock = (title, tagline) => {\n    return (\n        <Hero>\n            <TextBlock>\n                <Title>\n                    {title}\n                </Title>\n                <Tagline>\n                    {tagline}\n                </Tagline>\n            </TextBlock>\n        </Hero>\n    )\n}\n\nfunction HeroCenter({ title, tagline=null, bgImg=null} ) {\n    if (bgImg === null) {\n        return (HeroBlock(title, tagline))\n    }\n    else {\n        return (\n            <BGContainer\n                Tag=\"section\"\n                fluid={bgImg}\n            > \n                {HeroBlock(title, tagline)}\n            </BGContainer>\n        )\n    }\n}\n\nexport default HeroCenter\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Button from \"./button\"\nimport ImageBlock from \"../components/image-block\"\n\nconst TextContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\ntext-align: left;\nmargin: auto 20px;\n`\n\nconst BtContainer = styled.div`\ndisplay: flex;\ntext-align: center;\n`\n\nconst Title = styled.h3`\ncolor: #c62f2e;\n`\n\nconst Text = styled.p`\nfont-family: \"Poppins\", sans-serif;\n`\n\nconst TextBlock = ({ img=null, caption=null, title=null, text=null, btText=null, btRef=null, btColor='green' }) => {\n    return (\n        <TextContainer>\n            { title !== null && <Title>{title}</Title>}\n            { img !== null && <ImageBlock \n                img={img} \n                caption={caption} \n                /> }\n            { text !== null && text.map(paragraph => (\n                <Text>{paragraph}</Text>\n            ))}\n            { btText !== null && <BtContainer><Button text={btText} link={btRef} color={btColor}/> </BtContainer>}\n        </TextContainer>\n    )\n}\n\nexport default TextBlock;","import React from \"react\";\nimport styled from \"styled-components\"\nimport Img from \"gatsby-image\";\n\nconst ImageContainer = styled.div`\nflex-grow: 1 1;\nflex-direction: column;\n`\nconst ImageContainer2 = styled.div`\nflex-grow: 1;\nflex-direction: column;\n`\n\nconst ImageInnerContainer = styled(Img)`\njustify-content: flex-start;\ndisplay: block;\n`\nconst Title = styled.h4`\ncolor: #656565;\nmargin-bottom: 0;\n`\nconst Text = styled.p`\ncolor: #656565;\n`\nconst Caption = styled(Text)`\ntext-transform: uppercase;\n`\n\nconst ImageBlock = ({ img, caption=null, title=null, text=null, fixed=true }) => {\n    if (fixed) {\n    return (\n        <ImageContainer>\n            { title && <Title>{title}</Title>}\n            <ImageInnerContainer fixed={img} alt={caption}/>\n            { caption && <Caption>{caption}</Caption> } \n            { text && <Text>{text}</Text>}\n        </ImageContainer>\n    )} else {\n        return (\n            <ImageContainer2>\n                { title && <Title>{title}</Title>}\n                <ImageInnerContainer fluid={img} alt={caption}/>\n                { caption && <Caption>{caption}</Caption> } \n                { text && <Text>{text}</Text>}\n            </ImageContainer2>\n        )\n    }\n}\n\nexport default ImageBlock;","import React from \"react\";\nimport styled from \"styled-components\"\nimport Button from \"./button\";\n\nconst Title = styled.h2`\ndisplay: block;\nfont: 600 30px/38px \"Poppins\", sans-serif;\nmargin: 80px auto 50px;\ncolor: #c62f2e;\ntext-align: center;\nwidth: 50%;\n\n@media only screen and (max-width: 1000px) {\n    padding-top: 250px;\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 600 36px/40px \"Poppins\", sans-serif;\n    margin: 0 auto;\n    width: 90%;\n    padding-top: 50px;\n    padding-bottom: 50px;\n}\n`\nconst Subtitle = styled.h3`\nfont: 500 17px/28px \"Poppins\", sans-serif;\nfont-weight: 300;\ncolor: #8f8f8f;\nmargin: 0 auto 20px;\ntext-align: center;\nwidth: 70%;\n\n@media only screen and (max-width: 1000px) {\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 300 16px/20px \"Poppins\", sans-serif;\n    font-weight: 300;\n    width: 90%;\n    margin: 0 auto 20px;\n}\n`\n\nconst Space = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: stretch;\nflex-wrap: wrap;\nmargin: 0 auto;\n@media only screen and (max-width: 600px) {\n    flex-wrap: wrap;\n    width: 98%;\n}\n`\nconst SubContainer = styled.div`\ndisplay: flex;\npadding: 20px;\n@media only screen and (min-width: 1000px) {\n    max-width: 1300px;\n    margin: 0 auto;\n}\n`\nconst Container = styled.div`\njustify-content: center;\nborder: solid transparent;\npadding: 60px 0;\n`\n\nconst ButtonContainer = styled.div`\ndisplay: flex;\njustify-content: center;\n`\n\nconst Banner = (title, subtitle, space, btText, btRef, btColor) => {\n    return (\n        <Container>\n            {title && <Title>{title}</Title>}\n            {subtitle && <Subtitle>{subtitle}</Subtitle>}\n            {space && <SubContainer>\n                <Space>{space}</Space>\n                </SubContainer>\n                }\n            { btText !== null && <ButtonContainer>\n                <Button link={btRef} text={btText} color={btColor}/> \n                </ButtonContainer>\n                }\n        </Container>\n    )\n}\n\nconst LightBanner = styled.div`\nbackground-color: #EFEFEF;\ncolor:#212121;\nborder: solid rgba(0, 0, 0, 0);\n`\n\nconst DarkBanner = styled.div`\nbackground-color: #212121;\ncolor: #EFEFEF;\n`\n\nfunction Banner1C({ title=null, subtitle=null, space=null, btText=null, btRef=null, theme=\"light\", btColor=\"green\"} ) {\n    if (theme === \"light\") {\n        return (\n            <LightBanner>\n                {Banner(title, subtitle, space, btText, btRef, btColor)}\n                \n            </LightBanner>\n            )\n    }\n    else {\n        return (\n            <DarkBanner>\n                {Banner(title, subtitle, space, btText, btRef, btColor)}\n            </DarkBanner>\n            )\n    }\n}\n\nexport default Banner1C;\n","import React from \"react\";\nimport styled from \"styled-components\"\nimport BackgroundImage from \"gatsby-background-image\";\nimport Button from \"./button\";\n\nconst BGContainer = styled(BackgroundImage)`\ndisplay: flex;\nalign-items: center;\nheight: 614px;\nbackground-position: center top;\nbackground-repeat: no-repeat;\nbackground-size: cover;\nbackground-color: #EFEFEF;\ntext-align: center;\ncolor: #ffffff;\njustify-content: center;\nfont-family: \"Poppins\", sans-serif;\npadding-bottom: 60px;\n\n@media only screen and (max-width: 1000px) {\n    flex-direction: column;\n}\n\n@media only screen and (max-width: 600px) {\n  height: 600px;\n  width: 100%;\n}\n`\n\nconst Title = styled.h2`\ndisplay: block;\nfont: 600 30px/38px \"Poppins\", sans-serif;\nmargin: 80px auto 10px;\ncolor: ${(props) => {return (props.theme === \"dark\" ? \"#fff\" : \"#c62f2e\")}};\ntext-align: center;\nmax-width: 600px;\n\n@media only screen and (max-width: 1000px) {\n    padding-top: 250px;\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 800 36px/40px \"Poppins\", sans-serif;\n    margin: 50px auto 20px;\n    width: 90%;\n    padding-top: 50px;\n}\n`\nconst Subtitle = styled.h3`\nfont: 500 17px/28px \"Poppins\", sans-serif;\nfont-weight: 300;\ncolor: #8f8f8f;\nmargin: 0 auto 20px;\ntext-align: center;\nmax-width: 680px;\n\n@media only screen and (max-width: 1000px) {\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 300 16px/20px \"Poppins\", sans-serif;\n    font-weight: 300;\n    width: 90%;\n    margin: 0 auto 20px;\n}\n`\n\nconst Space = styled.div`\ndisplay: flex;\nwidth: 50%;\npadding: 0 100px;\n@media only screen and (max-width: 600px) {\n    width: 90%;\n    padding: 0;\n}\n`\nconst SubContainer = styled.div`\ndisplay: flex;\npadding: 20px;\nwidth: 80%;\nmargin: 0 auto;\n@media only screen and (max-width: 600px) {\n    flex-wrap: wrap;\n    width: 95%;\n}\n`\n\nconst BtContainer = styled.div`\ndisplay: flex;\njustify-content: center;\npadding: 20px 0;\n`\n\nconst Banner = (title, subtitle, spaces, btText, btRef, btColor, theme) => {\n    return (\n        <div>\n            {title && <Title theme={theme}>{title}</Title>}\n            {subtitle && <Subtitle>{subtitle}</Subtitle>}\n            <SubContainer>\n                <Space>{spaces[0]}</Space>\n                <Space>{spaces[1]}</Space>\n            </SubContainer>\n            { btText !== null && (<BtContainer><Button link={btRef} text={btText} color={btColor}/></BtContainer>) }\n        </div>\n    )\n}\n\nconst LightBanner = styled.div`\nbackground-color: #EFEFEF;\ncolor:#212121;\nborder: solid rgba(0, 0, 0, 0);\npadding-bottom: 60px;\n`\n\nconst DarkBanner = styled.div`\nbackground-color: #212121;\ncolor: #EFEFEF;\npadding-bottom: 60px;\nh2, h3, h4, h5, h6 {\n    color: #EFEFEF;\n}\n`\n\nfunction Banner2C({ title=null, subtitle=null, spaces, btText=null, btRef=null, theme=\"light\", bgImg=null, btColor='green'} ) {\n    if (bgImg != null) {\n        return (\n            <BGContainer\n                Tag=\"section\"\n                fluid={bgImg}\n            > \n                {Banner(title, subtitle, spaces, btText, btRef, btColor, \"dark\")}\n            </BGContainer>\n        )\n    }\n    else if (theme === \"light\") {\n            return (\n            <LightBanner>\n                {Banner(title, subtitle, spaces, btText, btRef, btColor)}\n            </LightBanner>\n            )\n    }\n    else {\n        return (\n            <DarkBanner>\n                {Banner(title, subtitle, spaces, btText, btRef, \"dark\")}\n            </DarkBanner>\n            )\n    }\n}\n\nexport default Banner2C;\n"],"sourceRoot":""}