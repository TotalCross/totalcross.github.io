{"version":3,"sources":["webpack:///./src/components/navbar-why-tc.js","webpack:///./src/components/code-snippets/title-corona.js","webpack:///./src/pages/get-started.module.scss","webpack:///./src/pages/get-started.js","webpack:///./src/components/navbar-why-tc.module.scss","webpack:///./src/components/code-snippets/button-corona.js","webpack:///./src/components/layout-why-tc.js","webpack:///./src/components/layout-why-tc.module.scss","webpack:///./src/components/code-snippets/import-corona.js","webpack:///./src/components/seo.js","webpack:///./src/imgs/coronachart.gif"],"names":["NavBarWhyTC","props","active","className","styles","menuContainer","style","paddingLeft","display","to","TitleCorona","color","module","exports","GetStarted","title","description","container","pageTitle","dependencies","dependency","number","text","pageH2","downloads","download","pageH3","downloadText","helloWorld","ButtonCorona","LayoutWhyTC","children","console","childContainer","Layout","PropTypes","isRequired","ImportCorona","SEO","lang","meta","image","site","pathname","useLocation","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","twitterUsername","seo","url","name","content","property","article"],"mappings":"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","file":"component---src-pages-get-started-js-7fe881aef6ba315e114b.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport styles from \"./navbar-why-tc.module.scss\";\n\nconst NavBarWhyTC = (props) => {\n  const { active } = props;\n  return (\n    <div className={styles.menuContainer}>\n      <ul style={{ paddingLeft: \"0\" }}>\n        <li style={{ display: `inline-block` }}>\n          <Link\n            className={\n              active === \"Low Footprint\"\n                ? styles.menuItemSelected\n                : styles.menuItem\n            }\n            to=\"/low-footprint\"\n          >\n            Low Footprint\n          </Link>\n        </li>\n        <li style={{ display: `inline-block` }}>\n          <Link\n            className={\n              active === \"Easy to use\"\n                ? styles.menuItemMiddleSelected\n                : styles.menuItemMiddle\n            }\n            to=\"/easy-to-use\"\n          >\n            Easy to use\n          </Link>\n        </li>\n        <li style={{ display: `inline-block` }}>\n          <Link\n            className={\n              active === \"Cross-Platform\"\n                ? styles.menuItemSelected\n                : styles.menuItem\n            }\n            to=\"/cross-platform\"\n          >\n            Cross-Platform\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default NavBarWhyTC;\n","import React from \"react\";\n\nconst TitleCorona = () => {\n  return (\n    <pre>\n      {``}\n      <span style={{ color: \"orange\" }}>{`\n    @Override\n    public void `}</span>\n      <span style={{ color: \"cornsilk\" }}>{`initUI()`}</span>\n      {` {\n        \n      (...) `}\n      <span style={{ color: \"grey\" }}>{`// Adding components to UI`}</span>\n      {`\n      Label lblTitle = `}\n      <span style={{ color: \"orange\" }}>{`new `}</span>\n      {`Label(`}\n      <span\n        style={{ color: \"lightgreen\" }}\n      >{`\"Coronavirus (COVID-19) charts and stats\"`}</span>\n      {`, `}\n      <span style={{ color: \"cornflowerblue\" }}>{`CENTER`}</span>\n      {`);\n      lblTitle.setForeColor(Color.`}\n      <span style={{ color: \"cornflowerblue\" }}>{`WHITE `}</span>\n      {`);\n      lblTitle.setFont(Font.getFont(`}\n      <span style={{ color: \"cornflowerblue\" }}>{`true `}</span>\n      {`, `}\n      <span style={{ color: \"cornflowerblue\" }}>{`36 `}</span>\n      {`));\n      add(lblTitle, `}\n      <span style={{ color: \"cornflowerblue\" }}>{`LEFT `}</span>\n      {`, `}\n      <span style={{ color: \"cornflowerblue\" }}>{`TOP `}</span>\n      {`+ `}\n      <span style={{ color: \"cornflowerblue\" }}>{`this`}</span>\n      {`.fmH, `}\n      <span style={{ color: \"cornflowerblue\" }}>{`FILL`}</span>\n      {`, `}\n      <span style={{ color: \"cornflowerblue\" }}>{`PREFERRED`}</span>\n      {`);\n        \n      (...)\n      \n    }`}\n    </pre>\n  );\n};\n\nexport default TitleCorona;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"get-started-module--container--BQH-G\",\"downloads\":\"get-started-module--downloads--3bpp9\",\"download\":\"get-started-module--download--3JzkY\",\"downloadText\":\"get-started-module--download-text--1BMr0\",\"pageTitle\":\"get-started-module--page-title--1xKWy\",\"pageH2\":\"get-started-module--page-h2--2T7c0\",\"pageH3\":\"get-started-module--page-h3--3eHcq\",\"dependencies\":\"get-started-module--dependencies--1Lrp0\",\"dependency\":\"get-started-module--dependency--8UlUI\",\"text\":\"get-started-module--text--3-DQB\",\"number\":\"get-started-module--number--q2G-J\",\"helloWorld\":\"get-started-module--hello-world--SyOTG\",\"image\":\"get-started-module--image--3xCGV\"};","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport LayoutWhyTC from \"../components/layout-why-tc\";\nimport NavBarWhyTC from \"../components/navbar-why-tc\";\nimport coronaGIF from \"../imgs/coronachart.gif\";\nimport { GITHUB_CORONA } from \"../utils/links\";\nimport ImportCorona from \"../components/code-snippets/import-corona\";\nimport ButtonCorona from \"../components/code-snippets/button-corona\";\nimport TitleCorona from \"../components/code-snippets/title-corona\";\nimport TCButton from \"../components/button\";\n\n// import LedGIF from \"../imgs/led-totalcross.gif\";\n\nimport styles from \"./get-started.module.scss\";\n\nconst GetStarted = () => {\n  return (\n    <Layout>\n      <SEO\n        title=\"What makes TotalCross easy to use\"\n        description=\"TotalCross is easy to use because it allows you to code in a high level language, frees you to code on your favourite IDE, helps you build end to end solutions, and with TotalCross you can build your user interface responsive by default.\"\n      ></SEO>\n      <div className={styles.container}>\n        <h1 className={styles.pageTitle}>Get Started With TotalCross</h1>\n        <div className={styles.dependencies}>\n          <div className={styles.dependency}>\n            <div className={styles.number}>1</div>\n            <div className={styles.text}>\n              You need an IDE (we recommend VSCode, but any will do)\n            </div>\n          </div>\n          <div className={styles.dependency}>\n            <div className={styles.number}>2</div>\n            <div className={styles.text}>\n              You need Java (VSCode: Java11, any other IDE: Java8)\n            </div>\n          </div>\n          <div className={styles.dependency}>\n            <div className={styles.number}>3</div>\n            <div className={styles.text}>You need Maven</div>\n          </div>\n          <div className={styles.dependency}>\n            <div className={styles.number}>4</div>\n            <div className={styles.text}>\n              Download TotalCross and start coding!\n            </div>\n          </div>\n          <div></div>\n          <div></div>\n        </div>\n        <h2 className={styles.pageH2}>Download the TotalCross SDK</h2>\n        <div className={styles.downloads}>\n          <div className={styles.download}>\n            <div className={styles.pageH3}>For VSCode</div>\n            <div className={styles.downloadText}>\n              <p>\n                Make sure your VSCode is updated and download the TotalCross\n                VSCode plugin.\n              </p>{\" \"}\n              <p>\n                It includes the TotalCross SDK and sets up your project folder\n                structure so you can jump in the coding part straight away.\n              </p>\n              <p>Need help? Check this article.</p>\n            </div>\n          </div>\n          <div className={styles.download}>\n            <div className={styles.pageH3}>For any other IDE</div>\n            <div className={styles.downloadText}>\n              <p>\n                Download this repository and follow the instructions on its\n                README file.\n              </p>\n              <p>\n                The process is a bit more involved, and that's why we recommend\n                using VSCode with our plugin. But you can definitely do it!\n              </p>\n              <p>\n                Need help? Check this video for IntelliJ or this one for\n                Eclipse.\n              </p>\n            </div>\n          </div>\n        </div>\n        <h2 className={styles.pageH2}>Hello World with TotalCross</h2>\n        <div className={styles.helloWorld}>\n          <h3>For VSCode</h3>\n          <p>\n            Step 1 - Create a new TotalCross project called Hello World. <br />\n            How? From the VSCode Command Palette (CTRL + Shift + P on Windows,\n            ⇧⌘P on Mac),{\" \"}\n            <strong>\n              type TotalCross and select TotalCross: Create new Project\n            </strong>\n            .\n          </p>\n          <p>\n            Tip - To fill in the prompted questions:\n            <ul>\n              <li>\n                GroupId is the domain of your company backward as in{\" \"}\n                <span>org.wikipedia</span> for <span>wikipedia.org</span>. Feel\n                free to leave it as <span>com.totalcross</span> for now.\n              </li>\n              <li>\n                ArtifactId is the name of your application, for this example\n                type HelloWorld.\n              </li>\n              <li>\n                Select the latest version of TotalCross SDK and choose whatever\n                platform you intend to deploy your application.\n              </li>\n            </ul>\n          </p>\n          <p>\n            Step 2 - A new window will open with your project. Right click the\n            RunHelloWorldApplication.java file inside src `> main `> com `>\n            totalcross and choose Run. The TotalCross simulator will open with\n            your brand new application.\n          </p>\n          <h3>For other IDEs</h3>\n          <p>\n            Step 1 - Open your IDE and import the Hello World repository you\n            downloaded.\n          </p>\n          <p>\n            Step 2 - Inside src/main/java/com.totalcross, right-click the\n            RunHelloWordApplication.java and choose Run. The TotalCross\n            simulator will open with your brand new application.\n          </p>\n          <p>\n            Need help? Check this article for IntelliJ or this one for Eclipse.\n          </p>\n        </div>\n        <h2 className={styles.pageH2}>Packaging and Deployment</h2>\n        <div className={styles.helloWorld}>\n          <h3>For VSCode</h3>\n          <p>\n            Packaging:\n            <ul>\n              <li>\n                Step 1: Open VSCode Command Palette (CTRL+Shift+P on Windows,\n                ⇧⌘P on Mac) and search for <span>TotalCross: Package.</span>\n              </li>\n              <li>\n                When the packaging process is finished the target program will\n                take place inside the folder target/install/&ltplatform&gt.\n              </li>\n            </ul>\n          </p>\n          <p>Deployment:</p>\n          <p>\n            Deployment is currently working only for linux arm programs. This\n            feature performs the implementation and execution of the platform\n            via ssh.\n          </p>\n          <p>\n            <ul>\n              <li>\n                Open VSCode Command Palette (CTRL + Shift + P on Windows, ⇧⌘P on\n                Mac) and search for TotalCross: Deploy&Run. If you just want to\n                deploy, choose the option TotalCross: Deploy.\n              </li>\n              <li>Fill in the device information.</li>\n              <li>\n                See the result on a display connected to your device or with a\n                VNC client.\n              </li>\n            </ul>\n          </p>\n          <h3>For other IDEs</h3>\n          <p>\n            Packaging and deploying in other IDEs is not an autamatic process.\n            Please check this article if you use IntelliJ or this article if you\n            use Eclipse. If you use other IDEs and these articles are not\n            helpfull, please drop us a line in our Telegram Community.\n          </p>\n        </div>\n        <h2 className={styles.pageH2}>\n          First embedded project with TotalCross\n        </h2>\n        <div className={styles.helloWorld}>\n          <p>\n            Follow this step by step tutorial on how to build your first\n            embedded application using TotalCross.\n          </p>\n        </div>\n        {/* <img\n          className={styles.image}\n          src={LedGIF}\n          alt=\"Raspberry Pi 3 with a led and GUI application\"\n        /> */}\n      </div>\n    </Layout>\n  );\n};\n\nexport default GetStarted;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"navbar-why-tc-module--menu-item--27QKg\",\"menuItemMiddle\":\"navbar-why-tc-module--menu-item-middle--2I6F1\",\"menuItemSelected\":\"navbar-why-tc-module--menu-item-selected--1Q92y\",\"menuItemMiddleSelected\":\"navbar-why-tc-module--menu-item-middle-selected--2XNcX\",\"menuItemContainer\":\"navbar-why-tc-module--menu-item-container--1BNMH\",\"menuContainer\":\"navbar-why-tc-module--menu-container--hVSrZ\",\"menuItemContainerSelected\":\"navbar-why-tc-module--menu-item-container-selected--2Iezd\"};","import React from \"react\";\n\nconst ButtonCorona = () => {\n  return (\n    <pre>\n      {``}\n      <span style={{ color: \"orange\" }}>{`\n    @Override\n    public void `}</span>\n      <span style={{ color: \"cornsilk\" }}>{`initUI()`}</span>\n      {` {\n        \n      (...) `}\n      <span style={{ color: \"grey\" }}>{`// Adding components to UI`}</span>\n      {`\n\n      Button btnStartStop = `}\n      <span style={{ color: \"orange\" }}>{`new `}</span>\n      {`Button(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"Start\"`}</span>\n      {`);\n      `}\n      <span\n        style={{ color: \"grey\" }}\n      >{`// Adding listener to start or stop the animation`}</span>\n      {`\n      btnStartStop.addPressListener(e `}\n      <span style={{ color: \"orange\" }}>{`-> `}</span>\n      {`{\n        `}\n      <span style={{ color: \"orange\" }}>{`if `}</span>\n      {` (btnStartStop.getText().equals(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"Start\"`}</span>\n      {`)) {\n          restartAnimation();\n          btnStartStop.setText(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"Stop\"`}</span>\n      {`);\n        } `}\n      <span style={{ color: \"orange\" }}>{`else `}</span>\n      {`{\n          MainWindow.getMainWindow().removeUpdateListener(updateListener);\n          btnStartStop.setText(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"Start\"`}</span>\n      {`);\n        }\n      });\n\n      (...)\n\n      add(btnStartStop, `}\n      <span style={{ color: \"cornflowerblue\" }}>{`LEFT `}</span>\n      {`+ `}\n      <span style={{ color: \"cornflowerblue\" }}>{`this`}</span>\n      {`.fmH, `}\n      <span style={{ color: \"cornflowerblue\" }}>{`AFTER `}</span>\n      {`+ `}\n      <span style={{ color: \"cornflowerblue\" }}>{`this`}</span>\n      {`.fmH);\n        \n      (...)\n      \n    }`}\n    </pre>\n  );\n};\n\nexport default ButtonCorona;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Layout from \"./layout\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./layout-why-tc.module.scss\";\n\nconst LayoutWhyTC = ({ children }) => {\n  console.log(\"children ===>\", children);\n  return (\n    <div className={styles.container}>\n      <div className={styles.title}>So, why TotalCross?</div>\n      <div className={styles.childContainer}>{children}</div>\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default LayoutWhyTC;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"layout-why-tc-module--container--2pvOB\",\"title\":\"layout-why-tc-module--title--3yN5c\",\"childContainer\":\"layout-why-tc-module--child-container--qdUn3\"};","import React from \"react\";\n\nconst ImportCorona = () => {\n  return (\n    <pre>\n      <span style={{ color: \"orange\" }}>{`\n    private void `}</span>\n      <span style={{ color: \"cornsilk\" }}>{`fillData()`}</span>\n      {` {\n\n        confirmedList.clear();\n        recoveredList.clear();\n        deathsList.clear();\n        `}\n      <span style={{ color: \"grey\" }}>{`\n        // Getting the information and filling the lists used to fill the CoronaChart`}</span>\n      <span style={{ color: \"orange\" }}>{`\n        if `}</span>\n      {`(!offlineCheck.isChecked())\n            response = getCoronavirusData(\n              `}\n      <span\n        style={{ color: \"lightgreen\" }}\n      >{`\"https://coronavirus-map.p.rapidapi.com/v1/summary/latest\"`}</span>\n      {`, \n              HttpStream.`}\n      <span style={{ color: \"cornflowerblue\" }}>{`GET`}</span>\n      {`\n              );`}\n      <span style={{ color: \"orange\" }}>{`\n        else`}</span>\n      {`\n            response = `}\n      <span style={{ color: \"orange\" }}>{`new `}</span>\n      {`JSONObject(`}\n      <span style={{ color: \"orange\" }}>{`new `}</span>\n      {`String(Vm.getFile(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"request.json\"`}</span>\n      {`)));\n\n        JSONObject data = response.getJSONObject(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"data\"`}</span>\n      {`);\n        dates = data.names();\n        array = data.toJSONArray(dates);\n        `}\n      <span style={{ color: \"orange\" }}>{`for `}</span>\n      {`(`}\n      <span style={{ color: \"orange\" }}>{`int `}</span>\n      {`i = `}\n      <span style={{ color: \"cornflowerblue\" }}>{`0`}</span>\n      {`; i < array.length(); i++) {\n            date = dates.getString(i);\n            item = array.getJSONObject(i);\n            MyDate myDate = `}\n      <span style={{ color: \"orange\" }}>{`new `}</span>\n      {`MyDate(Integer.parseInt(Convert.remove(date, `}\n      <span style={{ color: \"lightgreen\" }}>{`\"-\"`}</span>\n      {`)));\n            confirmedList.add(\n              `}\n      <span style={{ color: \"orange\" }}>{`new Data`}</span>\n      {`<MyDate, Integer>(myDate, item.getInt(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"total_cases\"`}</span>\n      {`))\n              );\n            recoveredList.add(\n              `}\n      <span style={{ color: \"orange\" }}>{`new Data`}</span>\n      {`<MyDate, Integer>(myDate, item.getInt(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"recovered\"`}</span>\n      {`))\n              );\n            deathsList.add(`}\n      <span style={{ color: \"orange\" }}>{`new Data`}</span>\n      {`<MyDate, Integer>(myDate, item.getInt(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"deaths\"`}</span>\n      {`)));\n        }\n\n        `}\n      <span style={{ color: \"grey\" }}>{`// Sorts the data by date;`}</span>\n      {`\n        Collections.sort(confirmedList, `}\n      <span style={{ color: \"orange\" }}>{`new Comparator`}</span>\n      {`<`}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer>>() {\n                `}\n      <span style={{ color: \"orange\" }}>{`\n            @Override\n            public int`}</span>\n      {` `}\n      <span style={{ color: \"cornsilk\" }}>{`compare`}</span>\n      {`(`}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer> `}\n      <span style={{ color: \"plum\" }}>{`o1`}</span>\n      {`, `}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer> `}\n      <span style={{ color: \"plum\" }}>{`o2`}</span>\n      {`) {\n                `}\n      <span style={{ color: \"orange\" }}>{`return`}</span>\n      {` o1.x.compareTo(o2.x);\n            }\n        });\n        Collections.sort(recoveredList, new Comparator<Data<MyDate, Integer>>() {\n        `}\n      <span style={{ color: \"orange\" }}>{`\n            @Override\n            public int`}</span>\n      {` `}\n      <span style={{ color: \"cornsilk\" }}>{`compare`}</span>\n      {`(`}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer> `}\n      <span style={{ color: \"plum\" }}>{`o1`}</span>\n      {`, `}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer> `}\n      <span style={{ color: \"plum\" }}>{`o2`}</span>\n      {`) {\n                `}\n      <span style={{ color: \"orange\" }}>{`return`}</span>\n      {` o1.x.compareTo(o2.x);\n            }\n        });\n        Collections.sort(deathsList, new Comparator<Data<MyDate, Integer>>() {\n        `}\n      <span style={{ color: \"orange\" }}>{`\n            @Override\n            public int`}</span>\n      {` `}\n      <span style={{ color: \"cornsilk\" }}>{`compare`}</span>\n      {`(`}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer> `}\n      <span style={{ color: \"plum\" }}>{`o1`}</span>\n      {`, `}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer> `}\n      <span style={{ color: \"plum\" }}>{`o2`}</span>\n      {`) {\n                `}\n      <span style={{ color: \"orange\" }}>{`return`}</span>\n      {` o1.x.compareTo(o2.x);\n            }\n        });\n    }\n    `}\n    </pre>\n  );\n};\n\nexport default ImportCorona;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { useLocation } from \"@reach/router\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, title, image }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            defaultTitle: title\n            titleTemplate\n            defaultDescription: description\n            siteUrl: url\n            defaultImage: image\n            twitterUsername\n          }\n        }\n      }\n    `\n  );\n\n  const { pathname } = useLocation();\n\n  const {\n    defaultTitle,\n    titleTemplate,\n    defaultDescription,\n    siteUrl,\n    defaultImage,\n    twitterUsername,\n  } = site.siteMetadata;\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image || defaultImage}`,\n    url: `${siteUrl}${pathname}`,\n  };\n\n  // const metaDescription = description || site.siteMetadata.defaultDescription;\n\n  return (\n    <Helmet title={seo.title} titleTemplate={titleTemplate}>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      {seo.url && <meta property=\"og:url\" content={seo.url} />}\n      {/* {(article ? true : null) && <meta property=\"og:type\" content=\"article\" />} */}\n      {seo.title && <meta property=\"og:title\" content={seo.title} />}\n      {seo.description && (\n        <meta property=\"og:description\" content={seo.description} />\n      )}\n      {seo.image && <meta property=\"og:image\" content={seo.image} />}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      {twitterUsername && (\n        <meta name=\"twitter:creator\" content={twitterUsername} />\n      )}\n      {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n      {seo.description && (\n        <meta name=\"twitter:description\" content={seo.description} />\n      )}\n      {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n    </Helmet>\n  );\n}\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n  article: PropTypes.bool,\n};\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  article: false,\n};\n\nexport default SEO;\n","module.exports = __webpack_public_path__ + \"static/coronachart-f8352b7687518b3b3925797b01f1f269.gif\";"],"sourceRoot":""}