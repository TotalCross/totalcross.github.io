(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{wVhm:function(t,e,a){"use strict";a.r(e),a.d(e,"_frontmatter",(function(){return o})),a.d(e,"default",(function(){return m}));var n=a("k1TG"),r=a("8o2o"),c=(a("q1tI"),a("7ljp")),b=a("hhGP"),o=(a("qKvR"),{});void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/md/components/dynamic-scroll.md"}});var i={_frontmatter:o},l=b.a;function m(t){var e=t.components,a=Object(r.a)(t,["components"]);return Object(c.b)(l,Object(n.a)({},i,a,{components:e,mdxType:"MDXLayout"}),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"// Creating and positioning the DynamicScrollContainer\nvsc = new DynamicScrollContainer();\nvsc.setBackColor(Color.WHITE);\nvsc.setBorderStyle(BORDER_SIMPLE);\nadd(vsc, LEFT + gap, AFTER + gap*2, FILL - gap, FILL - gap*2);\n// Adding views to the DynamicScrollContainer\nDynSCTestView view = new DynSCTestView(array[i], font);\nview.height = Settings.screenHeight / 20;\ndatasource.addView(view);\n")),Object(c.b)("h3",{id:"methods"},"Methods"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Type"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(c.b)("strong",{parentName:"td"},"Constructor")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"DynamicScrollContainer","("," ",")"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Creates a empty DynamicScrollContainer.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(c.b)("strong",{parentName:"td"},"Constructor")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"DynamicScrollContainer","(","DynamicScrollContainer.DataSource datasource",")"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Creates a DynamicScrollContainer that sets the referred datasource")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(c.b)("strong",{parentName:"td"},"DynamicScrollContainer.AbstractView")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"getTopMostVisibleView","("," ",")"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Return the top most visible view")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(c.b)("strong",{parentName:"td"},"Boolean")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"isViewVisible","(","DynamicScrollContainer.AbstractView view",")"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Return true if the view is visible")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(c.b)("strong",{parentName:"td"},"Boolean")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"scrollContent","(","int dx, int dy, boolean fromFlick",")"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Scroll the DynamicScrollContainer to the referred position. If the boolean is true, it does a flick animation")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(c.b)("strong",{parentName:"td"},"void")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"scrollToView","(","DynamicScrollContainer.AbstractView view",")"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Scroll the DynamicScrollContainer to the view")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(c.b)("strong",{parentName:"td"},"void")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"setDataSource","(","DynamicScrollContainer.DataSource datasource",")"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Set the DataSource")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(c.b)("strong",{parentName:"td"},"void")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"stopFlick","(",")"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Stops any flick animation")))))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/md/components/dynamic-scroll.md"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-md-components-dynamic-scroll-md-7ba03a816da153cfbffc.js.map