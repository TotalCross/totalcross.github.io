{"version":3,"sources":["webpack:///./src/components/hero-center.js","webpack:///./src/pages/blog.js"],"names":["Hero","styled","div","BGContainer","BackgroundImage","TextBlock","Title","h1","Tagline","p","HeroBlock","title","tagline","HeroCenter","bgImg","Tag","fluid","BlogContainer","BlogIndex","data","posts","allMarkdownRemark","nodes","length","description","bg","childImageSharp","style","listStyle","map","post","frontmatter","fields","slug","key","className","itemScope","itemType","to","itemProp","author","date","dangerouslySetInnerHTML","__html","subtitle","excerpt"],"mappings":"2FAAA,0DAIMA,EAAOC,IAAOC,IAAV,wEAAGD,CAAH,6PAkBJE,EAAcF,YAAOG,KAAV,+EAAGH,CAAH,uVAsBXI,EAAYJ,IAAOC,IAAV,6EAAGD,CAAH,8JAaTK,EAAQL,IAAOM,GAAV,yEAAGN,CAAH,iSAiBLO,EAAUP,IAAOQ,EAAV,2EAAGR,CAAH,2RAmBPS,EAAY,SAACC,EAAOC,GACtB,OACI,kBAACZ,EAAD,KACI,kBAACK,EAAD,KACI,kBAACC,EAAD,KACKK,GAEL,kBAACH,EAAD,KACKI,MAuBNC,IAhBf,YAA0D,IAApCF,EAAmC,EAAnCA,MAAmC,IAA5BC,eAA4B,MAApB,KAAoB,MAAdE,aAAc,MAAR,KAAQ,EACrD,OAAc,OAAVA,EACQJ,EAAUC,EAAOC,GAIrB,kBAACT,EAAD,CACIY,IAAI,UACJC,MAAOF,GAENJ,EAAUC,EAAOC,M,kCCtHlC,4FAQMK,EAAgBhB,IAAOC,IAAV,0EAAGD,CAAH,uHAwEJiB,UA/DG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACbC,EAAQD,EAAKE,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKZ,MAAM,kBAAkBa,YAAY,kDACzC,yLAUJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKb,MAAM,kBAAkBa,YAAY,kDACvC,kBAAC,IAAD,CACIb,MAAM,kBACNC,QAAQ,gDACRE,MAAOK,EAAKM,GAAGC,gBAAgBV,QACrC,kBAACC,EAAD,KACE,wBAAIU,MAAO,CAAEC,UAAU,SACpBR,EAAMS,KAAI,SAAAC,GACT,IAAMnB,EAAQmB,EAAKC,YAAYpB,OAASmB,EAAKE,OAAOC,KAEpD,OACE,wBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,6BACEE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,gCACE,4BACE,kBAAC,OAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,0BAAMA,SAAS,YAAY5B,KAG/B,+BAAQmB,EAAKC,YAAYS,QACzB,6BACA,+BAAQV,EAAKC,YAAYU,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,UAAYd,EAAKe,SAE5CN,SAAS","file":"component---src-pages-blog-js-04a41fb3f6406e741a9a.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport BackgroundImage from \"gatsby-background-image\"\n\nconst Hero = styled.div`\ndisplay: flex;\nalign-items: center;\nheight: 414px;\nmax-width: 680px;\ntext-align: center;\ncolor: #ffffff;\njustify-content: center;\n\n@media only screen and (max-width: 1000px) {\n    flex-direction: column;\n}\n\n@media only screen and (max-width: 600px) {\n  height: 400px;\n  width: 100%;\n}\n`\nconst BGContainer = styled(BackgroundImage)`\ndisplay: flex;\nalign-items: center;\nheight: 414px;\nbackground-position: center top;\nbackground-repeat: no-repeat;\nbackground-size: cover;\nbackground-color: #212121;\ntext-align: center;\ncolor: #ffffff;\njustify-content: center;\n\n@media only screen and (max-width: 1000px) {\n    flex-direction: column;\n}\n\n@media only screen and (max-width: 600px) {\n  height: 400px;\n  width: 100%;\n}\n`\n\nconst TextBlock = styled.div`\nwidth: 100%;\nmargin-left: 60px;\nmargin-right: 60px;\ntext-align: center;\n\n@media only screen and (max-width: 1000px) {\n    width: 100vw;\n    margin-left: 0px;\n    margin-right: 0px;\n}\n`\n\nconst Title = styled.h1`\nfont: 800 46px/60px \"Poppins\", sans-serif;\nmargin: 0 auto 50px;\ncolor: #c62f2e;\n\n@media only screen and (max-width: 1000px) {\n    padding-top: 250px;\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 800 36px/40px \"Poppins\", sans-serif;\n    margin: 20px auto 20px;\n    width: 90%;\n    padding-top: 50px;\n}\n`\nconst Tagline = styled.p`\nfont: 500 17px/28px \"Poppins\", sans-serif;\nfont-weight: 300;\ncolor: #8f8f8f;\nmargin: 0 auto 20px;\n\n@media only screen and (max-width: 1000px) {\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 300 16px/20px \"Poppins\", sans-serif;\n    font-weight: 300;\n    width: 90%;\n    margin: 0 auto 20px;\n}\n`\n\n\nconst HeroBlock = (title, tagline) => {\n    return (\n        <Hero>\n            <TextBlock>\n                <Title>\n                    {title}\n                </Title>\n                <Tagline>\n                    {tagline}\n                </Tagline>\n            </TextBlock>\n        </Hero>\n    )\n}\n\nfunction HeroCenter({ title, tagline=null, bgImg=null} ) {\n    if (bgImg === null) {\n        return (HeroBlock(title, tagline))\n    }\n    else {\n        return (\n            <BGContainer\n                Tag=\"section\"\n                fluid={bgImg}\n            > \n                {HeroBlock(title, tagline)}\n            </BGContainer>\n        )\n    }\n}\n\nexport default HeroCenter\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport HeroCenter from '../components/hero-center'\n\nconst BlogContainer = styled.div`\nwidth: 85%;\nmax-width: 680px;\nmargin: 50px auto 0;\nmin-height: 68vh;\n@media only screen and (max-width: 600px) {\n  width: 95%;\n}\n` \nconst BlogIndex = ({ data }) => {\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout>\n        <SEO title=\"TotalCross Blog\" description=\"Everything about embedded systems development\"/>\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"TotalCross Blog\" description=\"Everything about embedded systems development\" />\n        <HeroCenter \n            title=\"TotalCross Blog\"\n            tagline=\"Everything about embedded systems development\"\n            bgImg={data.bg.childImageSharp.fluid}/>\n      <BlogContainer>\n        <ol style={{ listStyle: `none` }}>\n          {posts.map(post => {\n            const title = post.frontmatter.title || post.fields.slug\n\n            return (\n              <li key={post.fields.slug}>\n                <article\n                  className=\"post-list-item\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                >\n                  <header>\n                    <h2>\n                      <Link to={post.fields.slug} itemProp=\"url\">\n                        <span itemProp=\"headline\">{title}</span>\n                      </Link>\n                    </h2>\n                    <small>{post.frontmatter.author}</small>\n                    <br/>\n                    <small>{post.frontmatter.date}</small>\n                  </header>\n                  <section>\n                    <p\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.subtitle || post.excerpt,\n                      }}\n                      itemProp=\"description\"\n                    />\n                  </section>\n                </article>\n              </li>\n            )\n          })}\n        </ol>\n      </BlogContainer>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          author\n          subtitle\n        }\n      }\n    }\n    bg: file(name: { eq: \"bg_wavesdark\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fluid(quality: 100, maxWidth: 1920) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}