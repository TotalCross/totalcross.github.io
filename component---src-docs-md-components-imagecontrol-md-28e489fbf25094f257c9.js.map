{"version":3,"sources":["webpack:///./src/docs/md/components/imagecontrol.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-docs-md-components-imagecontrol-md-28e489fbf25094f257c9.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/nrisbakk/Projects/newTC/totalcross-github-io/totalcross.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"imagecontrol\"\n    }}>{`ImageControl`}</h1>\n    <h3 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h3>\n    <p>{`A control that can show an image bigger than its area and that can be dragged using a pen to show the hidden parts.`}</p>\n    <p>{`Note that, by default, events `}{`(`}{`and dragging`}{`)`}{` are disabled. You must call setEventsEnabled to allow dragging.`}</p>\n    <h3 {...{\n      \"id\": \"source-code\"\n    }}>{`Source Code`}</h3>\n    {\n      /* {% code title=\"Login TCSample\" %} */\n    }\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import java.sql.SQLException;\n\nimport totalcross.db.sqlite.SQLiteUtil;\nimport totalcross.io.IOException;\nimport totalcross.sample.util.Colors;\nimport totalcross.sql.PreparedStatement;\nimport totalcross.sql.Statement;\nimport totalcross.sys.Settings;\nimport totalcross.sys.Vm;\nimport totalcross.ui.Button;\nimport totalcross.ui.Check;\nimport totalcross.ui.Container;\nimport totalcross.ui.Edit;\nimport totalcross.ui.ImageControl;\nimport totalcross.ui.ScrollContainer;\nimport totalcross.ui.dialog.MessageBox;\nimport totalcross.ui.event.ControlEvent;\nimport totalcross.ui.event.Event;\nimport totalcross.ui.gfx.Color;\nimport totalcross.ui.image.Image;\nimport totalcross.ui.image.ImageException;\nimport totalcross.util.InvalidDateException;\n\npublic class Login extends ScrollContainer {\n    private Edit edPass, edLogin;\n    private Check ch;\n    private Button btLogin, btRegister;\n    private ImageControl ic;\n    private SQLiteUtil util;\n\n    public void initUI(){\n        try {\n            setBackForeColors(Colors.BACKGROUND, Colors.ON_BACKGROUND);\n            ic = new ImageControl(new Image(\"images/logo.png\"));\n            ic.scaleToFit = true;\n            ic.centerImage = true;\n            add(ic, LEFT, TOP+100, FILL, PARENTSIZE+30);\n\n            edLogin = new Edit();\n            edLogin.caption = \"Login\";\n            //edLogin.setBackColor(Color.RED);\n            add(edLogin, CENTER, AFTER+60, PARENTSIZE+90, PREFERRED+30);\n\n            edPass = new Edit();\n            edPass.caption = \"Password\";\n            //edPass.setBackColor(Color.RED);\n            edPass.setMode(Edit.PASSWORD_ALL);\n            add(edPass, SAME, AFTER+70, PARENTSIZE+90, PREFERRED+30);\n\n            ch = new Check(\"Remember Me\");\n            add(ch, LEFT+86, AFTER+100, PARENTSIZE, PREFERRED+30);\n\n            btLogin = new Button(\"Login\");\n            btLogin.setBackColor(Color.WHITE);\n            add(btLogin, CENTER, AFTER+140, PARENTSIZE+80, PREFERRED+60);\n\n            btRegister = new Button(\"Register Now\");\n            btRegister.transparentBackground = true;\n            btRegister.setBorder(BORDER_NONE);\n            add(btRegister, CENTER, AFTER, PARENTSIZE+30, PREFERRED+20);\n            btRegister.addPressListener(e -> {Vm.exec(\"url\", \"http://www.totalcross.com\", 0, true);});\n\n            //Creating Database\n            util = new SQLiteUtil(Settings.appPath,\"database.db\");\n            Vm.debug(util.fullPath);\n\n            Statement st = util.con().createStatement();\n            st.execute(\"create table if not exists person (login varchar(20), password varchar(20))\");\n            st.close();\n\n        } catch (IOException | ImageException | SQLException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n    }\n\n    public void onEvent(Event e){\n        try{\n            switch(e.type){\n                case ControlEvent.PRESSED:\n                    if(e.target == btLogin){\n                        doInsert();\n                    }\n            }\n        }catch(Exception ee){\n            MessageBox.showException(ee, true);\n        }\n    }\n\n    private void doInsert() throws SQLException, InvalidDateException, ImageException {\n        if (edLogin.getLength() == 0 || edPass.getLength() == 0){\n            MessageBox mb = new MessageBox(\"Message\",\"Please fill all fields!\",new String[]{\"Close\"});\n            mb.setBackForeColors(Color.WHITE, Color.BLACK);\n            mb.popup();\n        }else {\n        // simple example of how you can insert data into SQLite..\n            String sql = \"insert into person values(?,?)\";\n            PreparedStatement st = util.con().prepareStatement(sql);\n            st.setString(1, edLogin.getText());\n            st.setString(2, edPass.getText());\n            st.executeUpdate();\n            st.close();\n\n            MessageBox mbox = new MessageBox(null,\"Data inserted successfully!\");\n            mbox.setBackForeColors(Color.WHITE, Color.BLACK);\n            mbox.popup();\n\n        }\n    }\n}\n\n`}</code></pre>\n    {\n      /* {% endcode %} */\n    }\n    {\n      /* {% hint style=\"warning\" %} */\n    }\n    <p>{`Do not forget `}<strong parentName=\"p\">{`to create a folder`}</strong>{` called \"`}<em parentName=\"p\"><strong parentName=\"em\">{`images`}</strong></em>{`\" inside `}<em parentName=\"p\"><strong parentName=\"em\">{`/src/main/resources`}</strong></em>{` and `}<strong parentName=\"p\">{`save the logo`}</strong><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/TotalCross/TCSample/blob/master/src/main/resources/images/alligator.gif\"\n      }}><strong parentName=\"a\">{`.`}</strong></a><strong parentName=\"p\">{`png image inside it`}</strong>{` `}{`[`}{`images`}{`]`}{`.`}</p>\n    {\n      /* {% endhint %} */\n    }\n    <h3 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`Constructor`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`ImageControl`}{`(`}{`Image img`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Constructs an ImageControl using the given image.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`Constructor`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`ImageControl`}{`(`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Constructs with no initial image. You must set the image with the setImage method.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`void`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`setEventsEnabled`}{`(`}{`boolean enabled`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Pass true to enable dragging and events on the image.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`void`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`setImage`}{`(`}{`Image img`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Sets the image to the given one. If the image size is different, you must explicitly call`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`setRect again if you want to resize the control.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`void`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`setImage`}{`(`}{`Image img, boolean resetPositions`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Sets the image to the given one, optionally resetting the image position. If the image size is different, you must explicitly call setRect again if you want to resize the control.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`int`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`getImageHeight`}{`(`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Returns the image's height; when scaling, returns the scaled height`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`int`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`getImageWidth`}{`(`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Returns the image's width; when scaling, returns the scaled width.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`Image`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`getImage`}{`(`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Returns the current image assigned to this ImageControl.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`void`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`setBackground`}{`(`}{`Image img`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Sets the given image as a freezed background of this image control.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`boolean`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`moveTo`}{`(`}{`int newX, int newY`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Moves to the given coordinates, respecting the current moving policy regarding`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"references\"\n    }}>{`References`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`See the `}<a parentName=\"li\" {...{\n          \"href\": \"https://rs.totalcross.com/doc/totalcross/ui/ImageControl.html\"\n        }}>{`Java Docs`}</a>{` for more information.`}</li>\n      <li parentName=\"ul\">{`See the code on `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/TotalCross/TCSample/blob/master/src/main/java/totalcross/sample/components/ui/Login.java\"\n        }}>{`Github`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}