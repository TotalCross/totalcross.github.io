{"version":3,"sources":["webpack:///./src/components/square-card.js","webpack:///./src/pages/community.js","webpack:///./src/components/hero-center.js","webpack:///./src/components/banner-1column.js"],"names":["Card","styled","div","CardIcon","CardTitle","CardArrow","SquareCard","icon","text","url","route","arrow","faArrowRight","to","target","rel","href","Community","data","useStaticQuery","COG","faCog","CODE","faCode","FILE","faFileAlt","ICON_TWITTER","faTwitter","ICON_TELEGRAM","faTelegram","ICON_DISCORD","faDiscord","ICON_LINKEDIN","faLinkedin","ICON_FORUM","faComments","ICON_ARTICLES","faPen","ICON_VIDEO","faVideo","title","description","bgImg","bg","childImageSharp","fluid","space","GITHUB","GITHUB_ISSUES","GITHUB_DOCS","FORUM","TWITTER","TELEGRAM","DISCORD","MEDIUM","YOUTUBE","LINKEDIN","Hero","BGContainer","BackgroundImage","TextBlock","Title","h1","Tagline","p","HeroBlock","tagline","HeroCenter","Tag","h2","Subtitle","h3","Space","SubContainer","Container","ButtonContainer","Banner","subtitle","btText","btRef","btColor","link","color","LightBanner","DarkBanner","Banner1C","theme"],"mappings":"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","file":"component---src-pages-community-js-4877c82a31dcb1138b96.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faArrowRight } from \"@fortawesome/free-solid-svg-icons\"\nimport styled from \"styled-components\"\n\nconst Card = styled.div`\nbackground-color: #212121;\nfont: 500 20px/28px \"Poppins\", sans-serif;\nfont-weight: 800;\ncolor: #ffffff;\njustify-content: flex-start;\nwidth: 200px;\nborder-radius: 15px;\ntext-align: left;\npadding: 20px 20px 25px 20px;\nmargin: 10px 20px;\n`\n\nconst CardIcon = styled.div`\nfont-size: 56px;\n`\n\nconst CardTitle = styled.div`\npadding-top: 15px;\npadding-bottom: 25px;\n`\n\nconst CardArrow = styled.div`\ncolor: #ffffff;\nfloat: right;\ntext-align: center;\nwidth: 30px;\nheight: 30px;\nborder: solid #ffffff 2px;\nborder-radius: 20px;\nfont-size: 16px;\n\n\n:hover {\n    transform: scale(1.1);\n    color: $text-accent;\n    border-color: $text-accent;\n  }\n`\n\nconst SquareCard = ({ icon, text, url, route }) => {\n  const arrow = <FontAwesomeIcon icon={faArrowRight} />;\n  return (\n    <Card>\n      <CardIcon>{icon}</CardIcon>\n      <CardTitle>{text}</CardTitle>\n      {route ? (\n        <Link to={route}>\n          <CardArrow>{arrow}</CardArrow>\n        </Link>\n      ) : (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n          <CardArrow>{arrow}</CardArrow>\n        </a>\n      )}\n    </Card>\n  );\n};\n\nexport default SquareCard;\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faCog, faCode, faFileAlt, faVideo, faPen, faComments } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  faTwitter,\n  faLinkedin,\n  faTelegram,\n  faDiscord,\n} from \"@fortawesome/free-brands-svg-icons\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport HeroCenter from \"../components/hero-center\"\nimport Banner1C from \"../components/banner-1column\"\nimport SquareCard from '../components/square-card'\nimport { \n  GITHUB, \n  GITHUB_ISSUES, \n  GITHUB_DOCS, \n  FORUM,\n  TWITTER,\n  TELEGRAM,\n  DISCORD,\n  LINKEDIN,\n  MEDIUM,\n  YOUTUBE\n} from \"../links\"\n\n\nconst Community= () =>  {\n    const data = useStaticQuery(graphql`\n    query {\n      bg: file(name: { eq: \"bg_wavesdark\" }, extension: { eq: \"png\" }) {\n        childImageSharp {\n          fluid(quality: 100, maxWidth: 1920) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n  const COG = <FontAwesomeIcon icon={faCog} />;\n  const CODE = <FontAwesomeIcon icon={faCode} />;\n  const FILE = <FontAwesomeIcon icon={faFileAlt} />;\n  const ICON_TWITTER = <FontAwesomeIcon icon={faTwitter} />;\n  const ICON_TELEGRAM = <FontAwesomeIcon icon={faTelegram} />;\n  const ICON_DISCORD = <FontAwesomeIcon icon={faDiscord} />;\n  const ICON_LINKEDIN = <FontAwesomeIcon icon={faLinkedin} />;\n  const ICON_FORUM = <FontAwesomeIcon icon={faComments} />;\n  const ICON_ARTICLES = <FontAwesomeIcon icon={faPen} />;\n  const ICON_VIDEO = <FontAwesomeIcon icon={faVideo} />;\n  return (\n    <Layout>\n      <SEO\n        title=\"TotalCross Â· Enjoy Our Community\"\n        description=\"Join the TotalCross Community. We invite you to start a connection with us and with all developers using our tool.\"\n      ></SEO>\n    <HeroCenter \n    bgImg={data.bg.childImageSharp.fluid}\n    title='Join the TotalCross Community'\n    />\n    <Banner1C\n    title='Become a TotalCross Contributor'\n    space={<>\n        <SquareCard \n    text=\"Code\"\n    icon={CODE}\n    url={GITHUB}\n    />\n    <SquareCard \n    text=\"Report an Issue\"\n    icon={COG}\n    url={GITHUB_ISSUES}\n    />\n    <SquareCard \n    text=\"Docs\"\n    icon={FILE}\n    url={GITHUB_DOCS}\n    />\n    </>}\n    />\n    <Banner1C\n    title='Join The Conversation'\n    space={<>\n    <SquareCard \n    text=\"Forum\"\n    icon={ICON_FORUM}\n    url={FORUM}\n    />\n    <SquareCard \n    text=\"Twitter\"\n    icon={ICON_TWITTER}\n    url={TWITTER}\n    />\n    <SquareCard \n    text=\"Telegram\"\n    icon={ICON_TELEGRAM}\n    url={TELEGRAM}\n    />\n    <SquareCard \n    text=\"Dicord\"\n    icon={ICON_DISCORD}\n    url={DISCORD}\n    />\n    <SquareCard \n    text=\"ARTICLES\"\n    icon={ICON_ARTICLES}\n    route={MEDIUM}\n    />\n    <SquareCard \n    text=\"Video Tutorials\"\n    icon={ICON_VIDEO}\n    route={YOUTUBE}\n    />\n    <SquareCard \n    text=\"LinkedIn\"\n    icon={ICON_LINKEDIN}\n    url={LINKEDIN}\n    />\n    </>}\n    />\n    </Layout>\n  );\n}\n\nexport default Community","import React from \"react\"\nimport styled from \"styled-components\"\nimport BackgroundImage from \"gatsby-background-image\"\n\nconst Hero = styled.div`\ndisplay: flex;\nalign-items: center;\nheight: 414px;\nmax-width: 680px;\ntext-align: center;\ncolor: #ffffff;\njustify-content: center;\n\n@media only screen and (max-width: 1000px) {\n    flex-direction: column;\n}\n\n@media only screen and (max-width: 600px) {\n  height: 400px;\n  width: 100%;\n}\n`\nconst BGContainer = styled(BackgroundImage)`\ndisplay: flex;\nalign-items: center;\nheight: 414px;\nbackground-position: center top;\nbackground-repeat: no-repeat;\nbackground-size: cover;\nbackground-color: #212121;\ntext-align: center;\ncolor: #ffffff;\njustify-content: center;\n\n@media only screen and (max-width: 1000px) {\n    flex-direction: column;\n}\n\n@media only screen and (max-width: 600px) {\n  height: 400px;\n  width: 100%;\n}\n`\n\nconst TextBlock = styled.div`\nwidth: 100%;\nmargin-left: 60px;\nmargin-right: 60px;\ntext-align: center;\n\n@media only screen and (max-width: 1000px) {\n    width: 100vw;\n    margin-left: 0px;\n    margin-right: 0px;\n}\n`\n\nconst Title = styled.h1`\nfont: 800 46px/60px \"Poppins\", sans-serif;\nmargin: 0 auto 50px;\ncolor: #c62f2e;\n\n@media only screen and (max-width: 1000px) {\n    padding-top: 250px;\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 800 36px/40px \"Poppins\", sans-serif;\n    margin: 20px auto 20px;\n    width: 90%;\n    padding-top: 50px;\n}\n`\nconst Tagline = styled.p`\nfont: 500 17px/28px \"Poppins\", sans-serif;\nfont-weight: 300;\ncolor: #8f8f8f;\nmargin: 0 auto 20px;\n\n@media only screen and (max-width: 1000px) {\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 300 16px/20px \"Poppins\", sans-serif;\n    font-weight: 300;\n    width: 90%;\n    margin: 0 auto 20px;\n}\n`\n\n\nconst HeroBlock = (title, tagline) => {\n    return (\n        <Hero>\n            <TextBlock>\n                <Title>\n                    {title}\n                </Title>\n                <Tagline>\n                    {tagline}\n                </Tagline>\n            </TextBlock>\n        </Hero>\n    )\n}\n\nfunction HeroCenter({ title, tagline=null, bgImg=null} ) {\n    if (bgImg === null) {\n        return (HeroBlock(title, tagline))\n    }\n    else {\n        return (\n            <BGContainer\n                Tag=\"section\"\n                fluid={bgImg}\n            > \n                {HeroBlock(title, tagline)}\n            </BGContainer>\n        )\n    }\n}\n\nexport default HeroCenter\n","import React from \"react\";\nimport styled from \"styled-components\"\nimport Button from \"./button\";\n\nconst Title = styled.h2`\ndisplay: block;\nfont: 600 30px/38px \"Poppins\", sans-serif;\nmargin: 80px auto 50px;\ncolor: #c62f2e;\ntext-align: center;\nwidth: 50%;\n\n@media only screen and (max-width: 1000px) {\n    padding-top: 250px;\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 600 36px/40px \"Poppins\", sans-serif;\n    margin: 0 auto;\n    width: 90%;\n    padding-top: 50px;\n    padding-bottom: 50px;\n}\n`\nconst Subtitle = styled.h3`\nfont: 500 17px/28px \"Poppins\", sans-serif;\nfont-weight: 300;\ncolor: #8f8f8f;\nmargin: 0 auto 20px;\ntext-align: center;\nwidth: 70%;\n\n@media only screen and (max-width: 1000px) {\n    margin-bottom: 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    font: 300 16px/20px \"Poppins\", sans-serif;\n    font-weight: 300;\n    width: 90%;\n    margin: 0 auto 20px;\n}\n`\n\nconst Space = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: stretch;\nflex-wrap: wrap;\nmargin: 0 auto;\n@media only screen and (max-width: 600px) {\n    flex-wrap: wrap;\n    width: 98%;\n}\n`\nconst SubContainer = styled.div`\ndisplay: flex;\npadding: 20px;\n@media only screen and (min-width: 1000px) {\n    max-width: 1300px;\n    margin: 0 auto;\n}\n`\nconst Container = styled.div`\njustify-content: center;\nborder: solid transparent;\npadding: 60px 0;\n`\n\nconst ButtonContainer = styled.div`\ndisplay: flex;\njustify-content: center;\n`\n\nconst Banner = (title, subtitle, space, btText, btRef, btColor) => {\n    return (\n        <Container>\n            {title && <Title>{title}</Title>}\n            {subtitle && <Subtitle>{subtitle}</Subtitle>}\n            {space && <SubContainer>\n                <Space>{space}</Space>\n                </SubContainer>\n                }\n            { btText !== null && <ButtonContainer>\n                <Button link={btRef} text={btText} color={btColor}/> \n                </ButtonContainer>\n                }\n        </Container>\n    )\n}\n\nconst LightBanner = styled.div`\nbackground-color: #EFEFEF;\ncolor:#212121;\nborder: solid rgba(0, 0, 0, 0);\n`\n\nconst DarkBanner = styled.div`\nbackground-color: #212121;\ncolor: #EFEFEF;\n`\n\nfunction Banner1C({ title=null, subtitle=null, space=null, btText=null, btRef=null, theme=\"light\", btColor=\"green\"} ) {\n    if (theme === \"light\") {\n        return (\n            <LightBanner>\n                {Banner(title, subtitle, space, btText, btRef, btColor)}\n                \n            </LightBanner>\n            )\n    }\n    else {\n        return (\n            <DarkBanner>\n                {Banner(title, subtitle, space, btText, btRef, btColor)}\n            </DarkBanner>\n            )\n    }\n}\n\nexport default Banner1C;\n"],"sourceRoot":""}